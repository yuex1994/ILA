; ModuleID = 'vWrapper.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i32* }
%1 = type { i16* }
%2 = type { i32, void ()* }
%class.SysCArray1D = type { i8* }
%class.SysCArray2D = type { float* }
%class.SysCArray2Dst = type { i8*, i8* }
%class.model_train = type { %class.SysCArray1D, i64, i64, %class.SysCArray1D, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %class.SysCArray1D, %0, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %1, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%class.sc_signal_bool = type { i8 }
%class.sc_signal_int32 = type { i32 }
%class.sc_signal_u16 = type { i16 }
%class.sc_signal_u32 = type { i32 }
%"class.std::iocout" = type { i8 }
%class.type_mem = type { i8* }
%struct.rbm = type { %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.SysCArray2Dst, %class.SysCArray1D, %class.SysCArray1D, %class.SysCArray2D, %class.SysCArray1D, %class.SysCArray1D, %class.SysCArray2D, %class.SysCArray1D, %class.SysCArray2Dst, [624 x i32], %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool }

@divide_p1 = global i16 0, align 2
@divide_p2 = global i16 0, align 2
@divide_r = global i16 0, align 2
@rand_r = global i16 0, align 2
@sigmoid_p1 = global i16 0, align 2
@sigmoid_r = global i16 0, align 2
@to_int_exp_p1 = global i16 0, align 2
@to_int_exp_r = global i16 0, align 2
@GM = global %class.model_train zeroinitializer, align 8
@__dso_handle = external global i8*
@_ZSt4cout = global %class.sc_signal_bool zeroinitializer, align 1
@_ZSt4endl = global i32 0, align 4
@cycleCnt = external global i32
@conf_done_inp = global i8 0, align 1
@conf_num_hidden_inp = global i32 0, align 4
@conf_num_visible_inp = global i32 0, align 4
@conf_num_users_inp = global i32 0, align 4
@conf_num_loops_inp = global i32 0, align 4
@conf_num_testusers_inp = global i32 0, align 4
@conf_num_movies_inp = global i32 0, align 4
@rst_inp = global i8 0, align 1
@rd_grant_inp = global i8 0, align 1
@data_in_inp = global i32 0, align 4
@wr_grant_inp = global i8 0, align 1
@per_v_pc = global i32 0, align 4
@train_upc = global i32 0, align 4
@upc = global i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"Config done\00"
@.str1 = private unnamed_addr constant [16 x i8] c"init_done_match\00"
@.str2 = private unnamed_addr constant [11 x i8] c"done_match\00"
@.str3 = private unnamed_addr constant [17 x i8] c"num_hidden_match\00"
@.str4 = private unnamed_addr constant [18 x i8] c"num_visible_match\00"
@.str5 = private unnamed_addr constant [16 x i8] c"num_users_match\00"
@.str6 = private unnamed_addr constant [16 x i8] c"num_loops_match\00"
@.str7 = private unnamed_addr constant [20 x i8] c"num_testusers_match\00"
@.str8 = private unnamed_addr constant [17 x i8] c"num_movies_match\00"
@.str9 = private unnamed_addr constant [15 x i8] c"rd_index_match\00"
@.str10 = private unnamed_addr constant [16 x i8] c"rd_length_match\00"
@.str11 = private unnamed_addr constant [17 x i8] c"rd_request_match\00"
@.str12 = private unnamed_addr constant [17 x i8] c"wr_request_match\00"
@.str13 = private unnamed_addr constant [15 x i8] c"wr_index_match\00"
@.str14 = private unnamed_addr constant [16 x i8] c"wr_length_match\00"
@.str15 = private unnamed_addr constant [15 x i8] c"data_out_match\00"
@.str16 = private unnamed_addr constant [10 x i8] c"upc_match\00"
@.str17 = private unnamed_addr constant [23 x i8] c"train_input_done_match\00"
@.str18 = private unnamed_addr constant [16 x i8] c"train_sum_match\00"
@.str19 = private unnamed_addr constant [16 x i8] c"train_max_match\00"
@.str20 = private unnamed_addr constant [16 x i8] c"sumOfpow2_match\00"
@.str21 = private unnamed_addr constant [13 x i8] c"jstate_match\00"
@.str22 = private unnamed_addr constant [15 x i8] c"per_v_pc_match\00"
@.str23 = private unnamed_addr constant [16 x i8] c"train_upc_match\00"
@.str24 = private unnamed_addr constant [18 x i8] c"train_v_cnt_match\00"
@.str25 = private unnamed_addr constant [18 x i8] c"train_h_cnt_match\00"
@.str26 = private unnamed_addr constant [11 x i8] c"data_match\00"
@.str27 = private unnamed_addr constant [21 x i8] c"predict_result_match\00"
@.str28 = private unnamed_addr constant [18 x i8] c"hidden_unit_match\00"
@.str29 = private unnamed_addr constant [19 x i8] c"visible_unit_match\00"
@.str30 = private unnamed_addr constant [10 x i8] c"pos_match\00"
@.str31 = private unnamed_addr constant [8 x i8] c"ind-inv\00"
@IMPL = global %struct.rbm zeroinitializer, align 8
@.str33 = private unnamed_addr constant [4 x i8] c"clk\00"
@.str34 = private unnamed_addr constant [4 x i8] c"rst\00"
@.str35 = private unnamed_addr constant [9 x i8] c"rd_index\00"
@.str36 = private unnamed_addr constant [10 x i8] c"rd_length\00"
@.str37 = private unnamed_addr constant [11 x i8] c"rd_request\00"
@.str38 = private unnamed_addr constant [9 x i8] c"rd_grant\00"
@.str39 = private unnamed_addr constant [8 x i8] c"data_in\00"
@.str40 = private unnamed_addr constant [9 x i8] c"wr_index\00"
@.str41 = private unnamed_addr constant [10 x i8] c"wr_length\00"
@.str42 = private unnamed_addr constant [11 x i8] c"wr_request\00"
@.str43 = private unnamed_addr constant [9 x i8] c"wr_grant\00"
@.str44 = private unnamed_addr constant [9 x i8] c"data_out\00"
@.str45 = private unnamed_addr constant [5 x i8] c"done\00"
@.str46 = private unnamed_addr constant [10 x i8] c"cond_done\00"
@.str47 = private unnamed_addr constant [16 x i8] c"conf_num_hidden\00"
@.str48 = private unnamed_addr constant [17 x i8] c"conf_num_visible\00"
@.str49 = private unnamed_addr constant [15 x i8] c"conf_num_users\00"
@.str50 = private unnamed_addr constant [15 x i8] c"conf_num_loops\00"
@.str51 = private unnamed_addr constant [19 x i8] c"conf_num_testusers\00"
@.str52 = private unnamed_addr constant [16 x i8] c"conf_num_movies\00"
@llvm.global_ctors = appending global [1 x %2] [%2 { i32 65535, void ()* @_GLOBAL__I_a }]

define zeroext i16 @_Z6dividell(i64 %cppVar_480, i64 %cppVar_481) nounwind {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %cppVar_480, i64* %1, align 8
  store i64 %cppVar_481, i64* %2, align 8
  %3 = load i64* %1, align 8
  %4 = load i16* @divide_p1, align 2
  %5 = zext i16 %4 to i64
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %7, label %15

; <label>:7                                       ; preds = %0
  %8 = load i64* %2, align 8
  %9 = load i16* @divide_p2, align 2
  %10 = zext i16 %9 to i64
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %7
  %13 = load i16* @divide_r, align 2
  %14 = zext i16 %13 to i64
  store i64 %14, i64* %ret, align 8
  br label %15

; <label>:15                                      ; preds = %12, %7, %0
  %16 = load i64* %1, align 8
  %17 = trunc i64 %16 to i16
  store i16 %17, i16* @divide_p1, align 2
  %18 = load i64* %2, align 8
  %19 = trunc i64 %18 to i16
  store i16 %19, i16* @divide_p2, align 2
  %20 = load i64* %ret, align 8
  %21 = trunc i64 %20 to i16
  store i16 %21, i16* @divide_r, align 2
  %22 = load i64* %ret, align 8
  %23 = trunc i64 %22 to i16
  ret i16 %23
}

define zeroext i16 @_Z4randv() nounwind {
  %1 = load i16* @rand_r, align 2
  ret i16 %1
}

define zeroext i16 @_Z7sigmoidl(i64 %cppVar_486) nounwind {
  %1 = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %cppVar_486, i64* %1, align 8
  %2 = load i16* @sigmoid_p1, align 2
  %3 = zext i16 %2 to i64
  %4 = load i64* %1, align 8
  %5 = icmp eq i64 %3, %4
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load i16* @sigmoid_r, align 2
  %8 = zext i16 %7 to i64
  store i64 %8, i64* %ret, align 8
  br label %9

; <label>:9                                       ; preds = %6, %0
  %10 = load i64* %ret, align 8
  %11 = trunc i64 %10 to i16
  store i16 %11, i16* @sigmoid_r, align 2
  %12 = load i64* %1, align 8
  %13 = trunc i64 %12 to i16
  store i16 %13, i16* @sigmoid_p1, align 2
  %14 = load i64* %ret, align 8
  %15 = trunc i64 %14 to i16
  ret i16 %15
}

define zeroext i16 @_Z10to_int_expl(i64 %cppVar_489) nounwind {
  %1 = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %cppVar_489, i64* %1, align 8
  %2 = load i16* @to_int_exp_p1, align 2
  %3 = zext i16 %2 to i64
  %4 = load i64* %1, align 8
  %5 = icmp eq i64 %3, %4
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load i16* @sigmoid_r, align 2
  %8 = zext i16 %7 to i64
  store i64 %8, i64* %ret, align 8
  br label %9

; <label>:9                                       ; preds = %6, %0
  %10 = load i64* %ret, align 8
  %11 = trunc i64 %10 to i16
  store i16 %11, i16* @to_int_exp_r, align 2
  %12 = load i64* %1, align 8
  %13 = trunc i64 %12 to i16
  store i16 %13, i16* @to_int_exp_p1, align 2
  %14 = load i64* %ret, align 8
  %15 = trunc i64 %14 to i16
  ret i16 %15
}

define zeroext i1 @_ZN11model_train9assumps_0Elllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1196 = alloca i64, align 8
  %cppVar_1197 = alloca i8, align 1
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 26
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1197, align 1
  %18 = load i8* %cppVar_1197, align 1
  %19 = trunc i8 %18 to i1
  ret i1 %19
}

define void @_ZN11model_train18cppUpdateFun_edgesElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_949 = alloca i64, align 8
  %cppVar_950 = alloca i8, align 1
  %cppVar_952 = alloca i64, align 8
  %cppVar_953 = alloca i8, align 1
  %cppVar_955 = alloca i64, align 8
  %cppVar_956 = alloca i8, align 1
  %cppVar_961 = alloca i64, align 8
  %cppVar_962 = alloca i64, align 8
  %cppVar_963 = alloca i64, align 8
  %cppVar_964 = alloca i64, align 8
  %cppVar_965 = alloca i64, align 8
  %cppVar_966 = alloca i8, align 1
  %cppVar_967 = alloca i64, align 8
  %cppVar_968 = alloca i64, align 8
  %cppVar_969 = alloca i64, align 8
  %cppVar_970 = alloca i8, align 1
  %cppVar_971 = alloca i64, align 8
  %cppVar_972 = alloca i64, align 8
  %cppVar_973 = alloca i64, align 8
  %cppVar_974 = alloca i8, align 1
  %cppVar_975 = alloca i8, align 1
  %cppVar_978 = alloca i64, align 8
  %cppVar_979 = alloca i64, align 8
  %cppVar_980 = alloca i64, align 8
  %cppVar_981 = alloca i64, align 8
  %cppVar_976 = alloca i8, align 1
  %cppVar_977 = alloca i8, align 1
  %cppVar_982 = alloca i64, align 8
  %cppVar_983 = alloca i64, align 8
  %cppVar_985 = alloca i8, align 1
  %cppVar_986 = alloca i8, align 1
  %cppVar_987 = alloca i64, align 8
  %cppVar_988 = alloca i64, align 8
  %cppVar_984 = alloca i64, align 8
  %cppVar_960 = alloca i64, align 8
  %cppVar_957 = alloca i64, align 8
  %cppVar_958 = alloca i64, align 8
  %cppVar_959 = alloca i64, align 8
  %cppVar_989 = alloca %class.SysCArray1D, align 8
  %cppVar_954 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_951 = alloca %class.SysCArray1D, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_train** %1
  call void @_ZN8type_memIhLj65536EEC1Ev(%class.SysCArray1D* %cppVar_989)
  invoke void @_ZN8type_memIhLj65536EEC1Ev(%class.SysCArray1D* %cppVar_954)
          to label %18 unwind label %31

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIhLj65536EEC1Ev(%class.SysCArray1D* %cppVar_951)
          to label %19 unwind label %34

; <label>:19                                      ; preds = %18
  store i1 false, i1* %15
  invoke void @_ZN8type_memIhLj65536EEC1Ev(%class.SysCArray1D* %agg.result)
          to label %20 unwind label %37

; <label>:20                                      ; preds = %19
  %21 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %22 = load i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %cppVar_950, align 1
  %25 = load i8* %cppVar_950, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %27, label %43

; <label>:27                                      ; preds = %20
  %28 = getelementptr inbounds %class.model_train* %17, i32 0, i32 3
  %29 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %28)
          to label %30 unwind label %40

; <label>:30                                      ; preds = %27
  br label %220

; <label>:31                                      ; preds = %226, %0
  %32 = call i8* @llvm.eh.exception() nounwind
  store i8* %32, i8** %13
  %33 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %32, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %232

; <label>:34                                      ; preds = %224, %18
  %35 = call i8* @llvm.eh.exception() nounwind
  store i8* %35, i8** %13
  %36 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %35, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %230

; <label>:37                                      ; preds = %222, %19
  %38 = call i8* @llvm.eh.exception() nounwind
  store i8* %38, i8** %13
  %39 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %38, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %227

; <label>:40                                      ; preds = %217, %214, %210, %207, %204, %201, %147, %108, %95, %61, %50, %27
  %41 = call i8* @llvm.eh.exception() nounwind
  store i8* %41, i8** %13
  %42 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %41, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %agg.result)
          to label %225 unwind label %236

; <label>:43                                      ; preds = %20
  %44 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %45 = load i64* %44, align 8
  %46 = icmp eq i64 %45, 1
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %cppVar_953, align 1
  %48 = load i8* %cppVar_953, align 1
  %49 = trunc i8 %48 to i1
  br i1 %49, label %50, label %54

; <label>:50                                      ; preds = %43
  %51 = getelementptr inbounds %class.model_train* %17, i32 0, i32 3
  %52 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %cppVar_951, %class.SysCArray1D* %51)
          to label %53 unwind label %40

; <label>:53                                      ; preds = %50
  br label %217

; <label>:54                                      ; preds = %43
  %55 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %56 = load i64* %55, align 8
  %57 = icmp eq i64 %56, 2
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %cppVar_956, align 1
  %59 = load i8* %cppVar_956, align 1
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %210

; <label>:61                                      ; preds = %54
  %62 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %63 = load i64* %62, align 8
  %64 = mul nsw i64 101, %63
  store i64 %64, i64* %cppVar_958, align 8
  %65 = load i64* %cppVar_958, align 8
  %66 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %67 = load i64* %66, align 8
  %68 = and i64 %65, %67
  store i64 %68, i64* %cppVar_958, align 8
  %69 = load i64* %cppVar_958, align 8
  %70 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %71 = load i64* %70, align 8
  %72 = add nsw i64 %69, %71
  store i64 %72, i64* %cppVar_959, align 8
  %73 = load i64* %cppVar_959, align 8
  %74 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %75 = load i64* %74, align 8
  %76 = and i64 %73, %75
  store i64 %76, i64* %cppVar_959, align 8
  %77 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %78 = load i64* %77, align 8
  %79 = mul nsw i64 101, %78
  store i64 %79, i64* %cppVar_962, align 8
  %80 = load i64* %cppVar_962, align 8
  %81 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %82 = load i64* %81, align 8
  %83 = and i64 %80, %82
  store i64 %83, i64* %cppVar_962, align 8
  %84 = load i64* %cppVar_962, align 8
  %85 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %86 = load i64* %85, align 8
  %87 = add nsw i64 %84, %86
  store i64 %87, i64* %cppVar_963, align 8
  %88 = load i64* %cppVar_963, align 8
  %89 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %90 = load i64* %89, align 8
  %91 = and i64 %88, %90
  store i64 %91, i64* %cppVar_963, align 8
  %92 = getelementptr inbounds %class.model_train* %17, i32 0, i32 16
  %93 = load i64* %cppVar_963, align 8
  %94 = invoke i64 @_ZN8type_memIbLj65536EE2rdEl(%class.SysCArray1D* %92, i64 %93)
          to label %95 unwind label %40

; <label>:95                                      ; preds = %61
  store i64 %94, i64* %cppVar_964, align 8
  %96 = load i64* %cppVar_964, align 8
  %97 = icmp ne i64 %96, 0
  %98 = zext i1 %97 to i8
  store i8 %98, i8* %cppVar_966, align 1
  %99 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %100 = load i64* %99, align 8
  %101 = ashr i64 %100, 0
  %102 = getelementptr inbounds %class.model_train* %17, i32 0, i32 43
  %103 = load i64* %102, align 8
  %104 = and i64 %101, %103
  store i64 %104, i64* %cppVar_967, align 8
  %105 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %106 = load i64* %cppVar_967, align 8
  %107 = invoke i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %105, i64 %106)
          to label %108 unwind label %40

; <label>:108                                     ; preds = %95
  store i64 %107, i64* %cppVar_968, align 8
  %109 = load i64* %cppVar_968, align 8
  %110 = icmp ne i64 %109, 0
  %111 = zext i1 %110 to i8
  store i8 %111, i8* %cppVar_970, align 1
  %112 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %113 = load i64* %112, align 8
  %114 = ashr i64 %113, 0
  %115 = getelementptr inbounds %class.model_train* %17, i32 0, i32 45
  %116 = load i64* %115, align 8
  %117 = and i64 %114, %116
  store i64 %117, i64* %cppVar_971, align 8
  %118 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %119 = load i64* %cppVar_971, align 8
  %120 = invoke i64 @_ZN8type_memIbLj512EE2rdEl(%class.SysCArray1D* %118, i64 %119)
          to label %121 unwind label %40

; <label>:121                                     ; preds = %108
  store i64 %120, i64* %cppVar_972, align 8
  %122 = load i64* %cppVar_972, align 8
  %123 = icmp ne i64 %122, 0
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %cppVar_974, align 1
  %125 = load i8* %cppVar_970, align 1
  %126 = trunc i8 %125 to i1
  br i1 %126, label %127, label %130

; <label>:127                                     ; preds = %121
  %128 = load i8* %cppVar_974, align 1
  %129 = trunc i8 %128 to i1
  br label %130

; <label>:130                                     ; preds = %127, %121
  %131 = phi i1 [ false, %121 ], [ %129, %127 ]
  %132 = zext i1 %131 to i8
  store i8 %132, i8* %cppVar_975, align 1
  %133 = load i8* %cppVar_975, align 1
  %134 = trunc i8 %133 to i1
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i8
  store i8 %136, i8* %cppVar_976, align 1
  %137 = load i8* %cppVar_966, align 1
  %138 = trunc i8 %137 to i1
  br i1 %138, label %139, label %142

; <label>:139                                     ; preds = %130
  %140 = load i8* %cppVar_976, align 1
  %141 = trunc i8 %140 to i1
  br label %142

; <label>:142                                     ; preds = %139, %130
  %143 = phi i1 [ false, %130 ], [ %141, %139 ]
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %cppVar_977, align 1
  %145 = load i8* %cppVar_977, align 1
  %146 = trunc i8 %145 to i1
  br i1 %146, label %147, label %174

; <label>:147                                     ; preds = %142
  %148 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %149 = load i64* %148, align 8
  %150 = mul nsw i64 101, %149
  store i64 %150, i64* %cppVar_979, align 8
  %151 = load i64* %cppVar_979, align 8
  %152 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %153 = load i64* %152, align 8
  %154 = and i64 %151, %153
  store i64 %154, i64* %cppVar_979, align 8
  %155 = load i64* %cppVar_979, align 8
  %156 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %157 = load i64* %156, align 8
  %158 = add nsw i64 %155, %157
  store i64 %158, i64* %cppVar_980, align 8
  %159 = load i64* %cppVar_980, align 8
  %160 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %161 = load i64* %160, align 8
  %162 = and i64 %159, %161
  store i64 %162, i64* %cppVar_980, align 8
  %163 = getelementptr inbounds %class.model_train* %17, i32 0, i32 3
  %164 = load i64* %cppVar_980, align 8
  %165 = invoke i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %163, i64 %164)
          to label %166 unwind label %40

; <label>:166                                     ; preds = %147
  store i64 %165, i64* %cppVar_981, align 8
  %167 = load i64* %cppVar_981, align 8
  %168 = add nsw i64 %167, 1
  store i64 %168, i64* %cppVar_983, align 8
  %169 = load i64* %cppVar_983, align 8
  %170 = getelementptr inbounds %class.model_train* %17, i32 0, i32 44
  %171 = load i64* %170, align 8
  %172 = and i64 %169, %171
  store i64 %172, i64* %cppVar_983, align 8
  %173 = load i64* %cppVar_983, align 8
  store i64 %173, i64* %cppVar_960, align 8
  br label %201

; <label>:174                                     ; preds = %142
  %175 = load i8* %cppVar_966, align 1
  %176 = trunc i8 %175 to i1
  %177 = xor i1 %176, true
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %cppVar_985, align 1
  %179 = load i8* %cppVar_985, align 1
  %180 = trunc i8 %179 to i1
  br i1 %180, label %181, label %184

; <label>:181                                     ; preds = %174
  %182 = load i8* %cppVar_975, align 1
  %183 = trunc i8 %182 to i1
  br label %184

; <label>:184                                     ; preds = %181, %174
  %185 = phi i1 [ false, %174 ], [ %183, %181 ]
  %186 = zext i1 %185 to i8
  store i8 %186, i8* %cppVar_986, align 1
  %187 = load i8* %cppVar_986, align 1
  %188 = trunc i8 %187 to i1
  br i1 %188, label %189, label %197

; <label>:189                                     ; preds = %184
  %190 = load i64* %cppVar_981, align 8
  %191 = sub nsw i64 %190, 1
  store i64 %191, i64* %cppVar_988, align 8
  %192 = load i64* %cppVar_988, align 8
  %193 = getelementptr inbounds %class.model_train* %17, i32 0, i32 44
  %194 = load i64* %193, align 8
  %195 = and i64 %192, %194
  store i64 %195, i64* %cppVar_988, align 8
  %196 = load i64* %cppVar_988, align 8
  store i64 %196, i64* %cppVar_984, align 8
  br label %199

; <label>:197                                     ; preds = %184
  %198 = load i64* %cppVar_981, align 8
  store i64 %198, i64* %cppVar_984, align 8
  br label %199

; <label>:199                                     ; preds = %197, %189
  %200 = load i64* %cppVar_984, align 8
  store i64 %200, i64* %cppVar_960, align 8
  br label %201

; <label>:201                                     ; preds = %199, %166
  %202 = getelementptr inbounds %class.model_train* %17, i32 0, i32 3
  %203 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %cppVar_989, %class.SysCArray1D* %202)
          to label %204 unwind label %40

; <label>:204                                     ; preds = %201
  %205 = load i64* %cppVar_959, align 8
  %206 = load i64* %cppVar_960, align 8
  invoke void @_ZN8type_memIhLj65536EE2wrEll(%class.SysCArray1D* %cppVar_989, i64 %205, i64 %206)
          to label %207 unwind label %40

; <label>:207                                     ; preds = %204
  %208 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %cppVar_954, %class.SysCArray1D* %cppVar_989)
          to label %209 unwind label %40

; <label>:209                                     ; preds = %207
  br label %214

; <label>:210                                     ; preds = %54
  %211 = getelementptr inbounds %class.model_train* %17, i32 0, i32 3
  %212 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %cppVar_954, %class.SysCArray1D* %211)
          to label %213 unwind label %40

; <label>:213                                     ; preds = %210
  br label %214

; <label>:214                                     ; preds = %213, %209
  %215 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %cppVar_951, %class.SysCArray1D* %cppVar_954)
          to label %216 unwind label %40

; <label>:216                                     ; preds = %214
  br label %217

; <label>:217                                     ; preds = %216, %53
  %218 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_951)
          to label %219 unwind label %40

; <label>:219                                     ; preds = %217
  br label %220

; <label>:220                                     ; preds = %219, %30
  store i1 true, i1* %15
  store i32 1, i32* %16
  %221 = load i1* %15
  br i1 %221, label %224, label %222

; <label>:222                                     ; preds = %220
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %agg.result)
          to label %223 unwind label %37

; <label>:223                                     ; preds = %222
  br label %224

; <label>:224                                     ; preds = %223, %220
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_951)
          to label %226 unwind label %34

; <label>:225                                     ; preds = %40
  br label %227

; <label>:226                                     ; preds = %224
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_954)
          to label %229 unwind label %31

; <label>:227                                     ; preds = %225, %37
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_951)
          to label %228 unwind label %236

; <label>:228                                     ; preds = %227
  br label %230

; <label>:229                                     ; preds = %226
  call void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_989)
  ret void

; <label>:230                                     ; preds = %228, %34
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_954)
          to label %231 unwind label %236

; <label>:231                                     ; preds = %230
  br label %232

; <label>:232                                     ; preds = %231, %31
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_989)
          to label %233 unwind label %236

; <label>:233                                     ; preds = %232
  br label %234

; <label>:234                                     ; preds = %233
  %235 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %235) noreturn
  unreachable

; <label>:236                                     ; preds = %232, %230, %227, %40
  %237 = call i8* @llvm.eh.exception() nounwind
  %238 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %237, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj65536EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

declare i8* @llvm.eh.exception() nounwind readonly

declare i32 @__gxx_personality_v0(...)

declare i32 @llvm.eh.selector(i8*, i8*, ...) nounwind

declare i32 @llvm.eh.typeid.for(i8*) nounwind

declare void @_Unwind_Resume_or_Rethrow(i8*)

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

define linkonce_odr i64 @_ZN8type_memIbLj65536EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i64
  ret i64 %10
}

define linkonce_odr i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i64
  ret i64 %10
}

define linkonce_odr i64 @_ZN8type_memIbLj512EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i64
  ret i64 %10
}

define linkonce_odr i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = zext i8 %8 to i64
  ret i64 %9
}

define linkonce_odr void @_ZN8type_memIhLj65536EE2wrEll(%class.SysCArray1D* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %class.SysCArray1D** %1
  %5 = load i64* %3, align 8
  %6 = trunc i64 %5 to i8
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %class.SysCArray1D* %4, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = getelementptr inbounds i8* %9, i64 %7
  store i8 %6, i8* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %2)
  ret void
}

declare void @_ZSt9terminatev()

define void @_ZN11model_train24cppUpdateFun_hidden_unitElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_992 = alloca i64, align 8
  %cppVar_993 = alloca i8, align 1
  %cppVar_1032 = alloca i64, align 8
  %cppVar_1033 = alloca i8, align 1
  %cppVar_1035 = alloca i64, align 8
  %cppVar_1036 = alloca i8, align 1
  %cppVar_1014 = alloca i64, align 8
  %cppVar_1015 = alloca i64, align 8
  %cppVar_1016 = alloca i64, align 8
  %cppVar_1006 = alloca i64, align 8
  %cppVar_1007 = alloca i8, align 1
  %cppVar_1008 = alloca i64, align 8
  %cppVar_1005 = alloca i64, align 8
  %cppVar_1010 = alloca i64, align 8
  %cppVar_1011 = alloca i64, align 8
  %cppVar_1012 = alloca i64, align 8
  %cppVar_1013 = alloca i8, align 1
  %cppVar_1017 = alloca i64, align 8
  %cppVar_1018 = alloca i64, align 8
  %cppVar_1019 = alloca i64, align 8
  %cppVar_1020 = alloca i64, align 8
  %cppVar_1021 = alloca i64, align 8
  %cppVar_1022 = alloca i64, align 8
  %cppVar_1009 = alloca i64, align 8
  %cppVar_1023 = alloca i64, align 8
  %cppVar_1004 = alloca i64, align 8
  %cppVar_1024 = alloca i64, align 8
  %cppVar_1025 = alloca i8, align 1
  %cppVar_1003 = alloca i64, align 8
  %cppVar_1001 = alloca i8, align 1
  %cppVar_1002 = alloca i64, align 8
  %cppVar_1028 = alloca %class.SysCArray1D, align 8
  %cppVar_1000 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_995 = alloca i8, align 1
  %cppVar_996 = alloca i64, align 8
  %cppVar_997 = alloca i64, align 8
  %cppVar_998 = alloca i8, align 1
  %cppVar_999 = alloca i8, align 1
  %cppVar_1029 = alloca i64, align 8
  %cppVar_1030 = alloca %class.SysCArray1D, align 8
  %cppVar_994 = alloca %class.SysCArray1D, align 8
  %cppVar_1027 = alloca i64, align 8
  %cppVar_1026 = alloca i64, align 8
  %cppVar_1034 = alloca %class.SysCArray1D, align 8
  %cppVar_1031 = alloca %class.SysCArray1D, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_train** %1
  call void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_1028)
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_1000)
          to label %18 unwind label %85

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_1030)
          to label %19 unwind label %88

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_994)
          to label %20 unwind label %91

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_1034)
          to label %21 unwind label %94

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_1031)
          to label %22 unwind label %97

; <label>:22                                      ; preds = %21
  store i1 false, i1* %15
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %agg.result)
          to label %23 unwind label %100

; <label>:23                                      ; preds = %22
  %24 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_993, align 1
  %28 = load i8* %cppVar_993, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %231

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %32 = load i64* %31, align 8
  %33 = getelementptr inbounds %class.model_train* %17, i32 0, i32 14
  %34 = load i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %cppVar_995, align 1
  %37 = getelementptr inbounds %class.model_train* %17, i32 0, i32 9
  %38 = load i64* %37, align 8
  %39 = sub nsw i64 %38, 1
  store i64 %39, i64* %cppVar_997, align 8
  %40 = load i64* %cppVar_997, align 8
  %41 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %42 = load i64* %41, align 8
  %43 = and i64 %40, %42
  store i64 %43, i64* %cppVar_997, align 8
  %44 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %45 = load i64* %44, align 8
  %46 = load i64* %cppVar_997, align 8
  %47 = icmp eq i64 %45, %46
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %cppVar_998, align 1
  %49 = load i8* %cppVar_995, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %30
  %52 = load i8* %cppVar_998, align 1
  %53 = trunc i8 %52 to i1
  br label %54

; <label>:54                                      ; preds = %51, %30
  %55 = phi i1 [ false, %30 ], [ %53, %51 ]
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_999, align 1
  %57 = load i8* %cppVar_999, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %225

; <label>:59                                      ; preds = %54
  %60 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %61 = load i64* %60, align 8
  %62 = getelementptr inbounds %class.model_train* %17, i32 0, i32 14
  %63 = load i64* %62, align 8
  %64 = icmp eq i64 %61, %63
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %cppVar_1001, align 1
  %66 = load i8* %cppVar_1001, align 1
  %67 = trunc i8 %66 to i1
  br i1 %67, label %68, label %208

; <label>:68                                      ; preds = %59
  %69 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %70 = load i64* %69, align 8
  %71 = ashr i64 %70, 0
  %72 = getelementptr inbounds %class.model_train* %17, i32 0, i32 43
  %73 = load i64* %72, align 8
  %74 = and i64 %71, %73
  store i64 %74, i64* %cppVar_1002, align 8
  %75 = invoke zeroext i16 @_Z4randv()
          to label %76 unwind label %103

; <label>:76                                      ; preds = %68
  %77 = zext i16 %75 to i64
  store i64 %77, i64* %cppVar_1004, align 8
  %78 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %79 = load i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %cppVar_1007, align 1
  %82 = load i8* %cppVar_1007, align 1
  %83 = trunc i8 %82 to i1
  br i1 %83, label %84, label %106

; <label>:84                                      ; preds = %76
  store i64 0, i64* %cppVar_1005, align 8
  br label %109

; <label>:85                                      ; preds = %278, %0
  %86 = call i8* @llvm.eh.exception() nounwind
  store i8* %86, i8** %13
  %87 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %86, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %284

; <label>:88                                      ; preds = %275, %18
  %89 = call i8* @llvm.eh.exception() nounwind
  store i8* %89, i8** %13
  %90 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %89, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %282

; <label>:91                                      ; preds = %272, %19
  %92 = call i8* @llvm.eh.exception() nounwind
  store i8* %92, i8** %13
  %93 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %92, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %279

; <label>:94                                      ; preds = %269, %20
  %95 = call i8* @llvm.eh.exception() nounwind
  store i8* %95, i8** %13
  %96 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %95, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %276

; <label>:97                                      ; preds = %267, %21
  %98 = call i8* @llvm.eh.exception() nounwind
  store i8* %98, i8** %13
  %99 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %98, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %273

; <label>:100                                     ; preds = %265, %22
  %101 = call i8* @llvm.eh.exception() nounwind
  store i8* %101, i8** %13
  %102 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %101, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %270

; <label>:103                                     ; preds = %260, %257, %253, %249, %238, %228, %225, %222, %220, %212, %208, %205, %202, %199, %179, %125, %109, %68
  %104 = call i8* @llvm.eh.exception() nounwind
  store i8* %104, i8** %13
  %105 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %104, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %agg.result)
          to label %268 unwind label %288

; <label>:106                                     ; preds = %76
  %107 = getelementptr inbounds %class.model_train* %17, i32 0, i32 28
  %108 = load i64* %107, align 8
  store i64 %108, i64* %cppVar_1005, align 8
  br label %109

; <label>:109                                     ; preds = %106, %84
  %110 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %111 = load i64* %110, align 8
  %112 = ashr i64 %111, 0
  %113 = getelementptr inbounds %class.model_train* %17, i32 0, i32 45
  %114 = load i64* %113, align 8
  %115 = and i64 %112, %114
  store i64 %115, i64* %cppVar_1010, align 8
  %116 = getelementptr inbounds %class.model_train* %17, i32 0, i32 0
  %117 = load i64* %cppVar_1010, align 8
  %118 = invoke i64 @_ZN8type_memIhLj512EE2rdEl(%class.SysCArray1D* %116, i64 %117)
          to label %119 unwind label %103

; <label>:119                                     ; preds = %109
  store i64 %118, i64* %cppVar_1011, align 8
  %120 = load i64* %cppVar_1011, align 8
  %121 = icmp eq i64 %120, 1
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %cppVar_1013, align 1
  %123 = load i8* %cppVar_1013, align 1
  %124 = trunc i8 %123 to i1
  br i1 %124, label %125, label %178

; <label>:125                                     ; preds = %119
  %126 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %127 = load i64* %126, align 8
  %128 = mul nsw i64 101, %127
  store i64 %128, i64* %cppVar_1015, align 8
  %129 = load i64* %cppVar_1015, align 8
  %130 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %131 = load i64* %130, align 8
  %132 = and i64 %129, %131
  store i64 %132, i64* %cppVar_1015, align 8
  %133 = load i64* %cppVar_1015, align 8
  %134 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %135 = load i64* %134, align 8
  %136 = add nsw i64 %133, %135
  store i64 %136, i64* %cppVar_1016, align 8
  %137 = load i64* %cppVar_1016, align 8
  %138 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %139 = load i64* %138, align 8
  %140 = and i64 %137, %139
  store i64 %140, i64* %cppVar_1016, align 8
  %141 = getelementptr inbounds %class.model_train* %17, i32 0, i32 3
  %142 = load i64* %cppVar_1016, align 8
  %143 = invoke i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %141, i64 %142)
          to label %144 unwind label %103

; <label>:144                                     ; preds = %125
  store i64 %143, i64* %cppVar_1017, align 8
  %145 = load i64* %cppVar_1017, align 8
  %146 = ashr i64 %145, 1
  %147 = getelementptr inbounds %class.model_train* %17, i32 0, i32 43
  %148 = load i64* %147, align 8
  %149 = and i64 %146, %148
  store i64 %149, i64* %cppVar_1018, align 8
  %150 = load i64* %cppVar_1018, align 8
  %151 = getelementptr inbounds %class.model_train* %17, i32 0, i32 47
  %152 = load i64* %151, align 8
  %153 = and i64 %150, %152
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %155, label %160

; <label>:155                                     ; preds = %144
  %156 = load i64* %cppVar_1018, align 8
  %157 = getelementptr inbounds %class.model_train* %17, i32 0, i32 49
  %158 = load i64* %157, align 8
  %159 = or i64 %156, %158
  br label %162

; <label>:160                                     ; preds = %144
  %161 = load i64* %cppVar_1018, align 8
  br label %162

; <label>:162                                     ; preds = %160, %155
  %163 = phi i64 [ %159, %155 ], [ %161, %160 ]
  store i64 %163, i64* %cppVar_1019, align 8
  %164 = load i64* %cppVar_1017, align 8
  %165 = ashr i64 %164, 0
  %166 = getelementptr inbounds %class.model_train* %17, i32 0, i32 38
  %167 = load i64* %166, align 8
  %168 = and i64 %165, %167
  store i64 %168, i64* %cppVar_1020, align 8
  %169 = load i64* %cppVar_1019, align 8
  %170 = shl i64 %169, 1
  %171 = load i64* %cppVar_1020, align 8
  %172 = or i64 %170, %171
  store i64 %172, i64* %cppVar_1021, align 8
  %173 = load i64* %cppVar_1021, align 8
  %174 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %175 = load i64* %174, align 8
  %176 = and i64 %173, %175
  store i64 %176, i64* %cppVar_1021, align 8
  %177 = load i64* %cppVar_1021, align 8
  store i64 %177, i64* %cppVar_1009, align 8
  br label %179

; <label>:178                                     ; preds = %119
  store i64 0, i64* %cppVar_1009, align 8
  br label %179

; <label>:179                                     ; preds = %178, %162
  %180 = load i64* %cppVar_1005, align 8
  %181 = load i64* %cppVar_1009, align 8
  %182 = add nsw i64 %180, %181
  store i64 %182, i64* %cppVar_1023, align 8
  %183 = load i64* %cppVar_1023, align 8
  %184 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %185 = load i64* %184, align 8
  %186 = and i64 %183, %185
  store i64 %186, i64* %cppVar_1023, align 8
  %187 = load i64* %cppVar_1023, align 8
  %188 = invoke zeroext i16 @_Z7sigmoidl(i64 %187)
          to label %189 unwind label %103

; <label>:189                                     ; preds = %179
  %190 = zext i16 %188 to i64
  store i64 %190, i64* %cppVar_1024, align 8
  %191 = load i64* %cppVar_1004, align 8
  %192 = load i64* %cppVar_1024, align 8
  %193 = icmp slt i64 %191, %192
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %cppVar_1025, align 1
  %195 = load i8* %cppVar_1025, align 1
  %196 = trunc i8 %195 to i1
  br i1 %196, label %197, label %198

; <label>:197                                     ; preds = %189
  store i64 1, i64* %cppVar_1003, align 8
  br label %199

; <label>:198                                     ; preds = %189
  store i64 0, i64* %cppVar_1003, align 8
  br label %199

; <label>:199                                     ; preds = %198, %197
  %200 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %201 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1028, %class.SysCArray1D* %200)
          to label %202 unwind label %103

; <label>:202                                     ; preds = %199
  %203 = load i64* %cppVar_1002, align 8
  %204 = load i64* %cppVar_1003, align 8
  invoke void @_ZN8type_memIbLj128EE2wrEll(%class.SysCArray1D* %cppVar_1028, i64 %203, i64 %204)
          to label %205 unwind label %103

; <label>:205                                     ; preds = %202
  %206 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1000, %class.SysCArray1D* %cppVar_1028)
          to label %207 unwind label %103

; <label>:207                                     ; preds = %205
  br label %212

; <label>:208                                     ; preds = %59
  %209 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %210 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1000, %class.SysCArray1D* %209)
          to label %211 unwind label %103

; <label>:211                                     ; preds = %208
  br label %212

; <label>:212                                     ; preds = %211, %207
  %213 = getelementptr inbounds %class.model_train* %17, i32 0, i32 9
  %214 = load i64* %213, align 8
  %215 = ashr i64 %214, 0
  %216 = getelementptr inbounds %class.model_train* %17, i32 0, i32 43
  %217 = load i64* %216, align 8
  %218 = and i64 %215, %217
  store i64 %218, i64* %cppVar_1029, align 8
  %219 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1030, %class.SysCArray1D* %cppVar_1000)
          to label %220 unwind label %103

; <label>:220                                     ; preds = %212
  %221 = load i64* %cppVar_1029, align 8
  invoke void @_ZN8type_memIbLj128EE2wrEll(%class.SysCArray1D* %cppVar_1030, i64 %221, i64 1)
          to label %222 unwind label %103

; <label>:222                                     ; preds = %220
  %223 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_994, %class.SysCArray1D* %cppVar_1030)
          to label %224 unwind label %103

; <label>:224                                     ; preds = %222
  br label %228

; <label>:225                                     ; preds = %54
  %226 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_994, %class.SysCArray1D* %cppVar_1000)
          to label %227 unwind label %103

; <label>:227                                     ; preds = %225
  br label %228

; <label>:228                                     ; preds = %227, %224
  %229 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_994)
          to label %230 unwind label %103

; <label>:230                                     ; preds = %228
  br label %263

; <label>:231                                     ; preds = %23
  %232 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %233 = load i64* %232, align 8
  %234 = icmp eq i64 %233, 1
  %235 = zext i1 %234 to i8
  store i8 %235, i8* %cppVar_1033, align 1
  %236 = load i8* %cppVar_1033, align 1
  %237 = trunc i8 %236 to i1
  br i1 %237, label %238, label %242

; <label>:238                                     ; preds = %231
  %239 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %240 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1031, %class.SysCArray1D* %239)
          to label %241 unwind label %103

; <label>:241                                     ; preds = %238
  br label %260

; <label>:242                                     ; preds = %231
  %243 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %244 = load i64* %243, align 8
  %245 = icmp eq i64 %244, 2
  %246 = zext i1 %245 to i8
  store i8 %246, i8* %cppVar_1036, align 1
  %247 = load i8* %cppVar_1036, align 1
  %248 = trunc i8 %247 to i1
  br i1 %248, label %249, label %253

; <label>:249                                     ; preds = %242
  %250 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %251 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1034, %class.SysCArray1D* %250)
          to label %252 unwind label %103

; <label>:252                                     ; preds = %249
  br label %257

; <label>:253                                     ; preds = %242
  %254 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %255 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1034, %class.SysCArray1D* %254)
          to label %256 unwind label %103

; <label>:256                                     ; preds = %253
  br label %257

; <label>:257                                     ; preds = %256, %252
  %258 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1031, %class.SysCArray1D* %cppVar_1034)
          to label %259 unwind label %103

; <label>:259                                     ; preds = %257
  br label %260

; <label>:260                                     ; preds = %259, %241
  %261 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_1031)
          to label %262 unwind label %103

; <label>:262                                     ; preds = %260
  br label %263

; <label>:263                                     ; preds = %262, %230
  store i1 true, i1* %15
  store i32 1, i32* %16
  %264 = load i1* %15
  br i1 %264, label %267, label %265

; <label>:265                                     ; preds = %263
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %agg.result)
          to label %266 unwind label %100

; <label>:266                                     ; preds = %265
  br label %267

; <label>:267                                     ; preds = %266, %263
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1031)
          to label %269 unwind label %97

; <label>:268                                     ; preds = %103
  br label %270

; <label>:269                                     ; preds = %267
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1034)
          to label %272 unwind label %94

; <label>:270                                     ; preds = %268, %100
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1031)
          to label %271 unwind label %288

; <label>:271                                     ; preds = %270
  br label %273

; <label>:272                                     ; preds = %269
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_994)
          to label %275 unwind label %91

; <label>:273                                     ; preds = %271, %97
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1034)
          to label %274 unwind label %288

; <label>:274                                     ; preds = %273
  br label %276

; <label>:275                                     ; preds = %272
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1030)
          to label %278 unwind label %88

; <label>:276                                     ; preds = %274, %94
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_994)
          to label %277 unwind label %288

; <label>:277                                     ; preds = %276
  br label %279

; <label>:278                                     ; preds = %275
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1000)
          to label %281 unwind label %85

; <label>:279                                     ; preds = %277, %91
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1030)
          to label %280 unwind label %288

; <label>:280                                     ; preds = %279
  br label %282

; <label>:281                                     ; preds = %278
  call void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1028)
  ret void

; <label>:282                                     ; preds = %280, %88
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1000)
          to label %283 unwind label %288

; <label>:283                                     ; preds = %282
  br label %284

; <label>:284                                     ; preds = %283, %85
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1028)
          to label %285 unwind label %288

; <label>:285                                     ; preds = %284
  br label %286

; <label>:286                                     ; preds = %285
  %287 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %287) noreturn
  unreachable

; <label>:288                                     ; preds = %284, %282, %279, %276, %273, %270, %103
  %289 = call i8* @llvm.eh.exception() nounwind
  %290 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %289, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr i64 @_ZN8type_memIhLj512EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = zext i8 %8 to i64
  ret i64 %9
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

define linkonce_odr void @_ZN8type_memIbLj128EE2wrEll(%class.SysCArray1D* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %class.SysCArray1D** %1
  %5 = load i64* %3, align 8
  %6 = icmp ne i64 %5, 0
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %class.SysCArray1D* %4, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = getelementptr inbounds i8* %9, i64 %7
  %11 = zext i1 %6 to i8
  store i8 %11, i8* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj128EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define i64 @_ZN11model_train18cppUpdateFun_indexElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_491 = alloca i64, align 8
  %cppVar_492 = alloca i8, align 1
  %cppVar_494 = alloca i64, align 8
  %cppVar_495 = alloca i8, align 1
  %cppVar_497 = alloca i64, align 8
  %cppVar_498 = alloca i8, align 1
  %cppVar_500 = alloca i8, align 1
  %cppVar_501 = alloca i8, align 1
  %cppVar_502 = alloca i8, align 1
  %cppVar_504 = alloca i64, align 8
  %cppVar_505 = alloca i64, align 8
  %cppVar_506 = alloca i8, align 1
  %cppVar_507 = alloca i8, align 1
  %cppVar_508 = alloca i8, align 1
  %cppVar_510 = alloca i64, align 8
  %cppVar_511 = alloca i64, align 8
  %cppVar_503 = alloca i64, align 8
  %cppVar_499 = alloca i64, align 8
  %cppVar_496 = alloca i64, align 8
  %cppVar_493 = alloca i64, align 8
  %cppVar_490 = alloca i64, align 8
  %cppVar_509 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_492, align 1
  %18 = load i8* %cppVar_492, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 5
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_490, align 8
  br label %116

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_495, align 1
  %28 = load i8* %cppVar_495, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 5
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_493, align 8
  br label %114

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_498, align 1
  %38 = load i8* %cppVar_498, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %109

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %44 = load i64* %43, align 8
  %45 = icmp eq i64 %42, %44
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %cppVar_500, align 1
  %47 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %48 = load i64* %47, align 8
  %49 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_501, align 1
  %53 = load i8* %cppVar_500, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %40
  %56 = load i8* %cppVar_501, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %40
  %59 = phi i1 [ false, %40 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_502, align 1
  %61 = load i8* %cppVar_502, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %104

; <label>:63                                      ; preds = %58
  %64 = getelementptr inbounds %class.model_train* %13, i32 0, i32 13
  %65 = load i64* %64, align 8
  %66 = sub nsw i64 %65, 1
  store i64 %66, i64* %cppVar_505, align 8
  %67 = load i64* %cppVar_505, align 8
  %68 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %69 = load i64* %68, align 8
  %70 = and i64 %67, %69
  store i64 %70, i64* %cppVar_505, align 8
  %71 = getelementptr inbounds %class.model_train* %13, i32 0, i32 5
  %72 = load i64* %71, align 8
  %73 = load i64* %cppVar_505, align 8
  %74 = icmp eq i64 %72, %73
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %cppVar_506, align 1
  %76 = getelementptr inbounds %class.model_train* %13, i32 0, i32 8
  %77 = load i64* %76, align 8
  %78 = getelementptr inbounds %class.model_train* %13, i32 0, i32 10
  %79 = load i64* %78, align 8
  %80 = icmp ne i64 %77, %79
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %cppVar_507, align 1
  %82 = load i8* %cppVar_506, align 1
  %83 = trunc i8 %82 to i1
  br i1 %83, label %84, label %87

; <label>:84                                      ; preds = %63
  %85 = load i8* %cppVar_507, align 1
  %86 = trunc i8 %85 to i1
  br label %87

; <label>:87                                      ; preds = %84, %63
  %88 = phi i1 [ false, %63 ], [ %86, %84 ]
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %cppVar_508, align 1
  %90 = load i8* %cppVar_508, align 1
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %87
  store i64 0, i64* %cppVar_503, align 8
  br label %102

; <label>:93                                      ; preds = %87
  %94 = getelementptr inbounds %class.model_train* %13, i32 0, i32 5
  %95 = load i64* %94, align 8
  %96 = add nsw i64 %95, 1
  store i64 %96, i64* %cppVar_511, align 8
  %97 = load i64* %cppVar_511, align 8
  %98 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %99 = load i64* %98, align 8
  %100 = and i64 %97, %99
  store i64 %100, i64* %cppVar_511, align 8
  %101 = load i64* %cppVar_511, align 8
  store i64 %101, i64* %cppVar_503, align 8
  br label %102

; <label>:102                                     ; preds = %93, %92
  %103 = load i64* %cppVar_503, align 8
  store i64 %103, i64* %cppVar_499, align 8
  br label %107

; <label>:104                                     ; preds = %58
  %105 = getelementptr inbounds %class.model_train* %13, i32 0, i32 5
  %106 = load i64* %105, align 8
  store i64 %106, i64* %cppVar_499, align 8
  br label %107

; <label>:107                                     ; preds = %104, %102
  %108 = load i64* %cppVar_499, align 8
  store i64 %108, i64* %cppVar_496, align 8
  br label %112

; <label>:109                                     ; preds = %33
  %110 = getelementptr inbounds %class.model_train* %13, i32 0, i32 5
  %111 = load i64* %110, align 8
  store i64 %111, i64* %cppVar_496, align 8
  br label %112

; <label>:112                                     ; preds = %109, %107
  %113 = load i64* %cppVar_496, align 8
  store i64 %113, i64* %cppVar_493, align 8
  br label %114

; <label>:114                                     ; preds = %112, %30
  %115 = load i64* %cppVar_493, align 8
  store i64 %115, i64* %cppVar_490, align 8
  br label %116

; <label>:116                                     ; preds = %114, %20
  %117 = load i64* %cppVar_490, align 8
  ret i64 %117
}

define i64 @_ZN11model_train19cppUpdateFun_jstateElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_514 = alloca i64, align 8
  %cppVar_515 = alloca i8, align 1
  %cppVar_518 = alloca i64, align 8
  %cppVar_519 = alloca i8, align 1
  %cppVar_547 = alloca i64, align 8
  %cppVar_548 = alloca i8, align 1
  %cppVar_525 = alloca i8, align 1
  %cppVar_527 = alloca i64, align 8
  %cppVar_528 = alloca i8, align 1
  %cppVar_521 = alloca i64, align 8
  %cppVar_522 = alloca i8, align 1
  %cppVar_523 = alloca i8, align 1
  %cppVar_532 = alloca i64, align 8
  %cppVar_533 = alloca i8, align 1
  %cppVar_534 = alloca i8, align 1
  %cppVar_539 = alloca i64, align 8
  %cppVar_540 = alloca i8, align 1
  %cppVar_541 = alloca i8, align 1
  %cppVar_543 = alloca i64, align 8
  %cppVar_544 = alloca i8, align 1
  %cppVar_545 = alloca i8, align 1
  %cppVar_529 = alloca i64, align 8
  %cppVar_530 = alloca i64, align 8
  %cppVar_526 = alloca i64, align 8
  %cppVar_524 = alloca i64, align 8
  %cppVar_536 = alloca i64, align 8
  %cppVar_537 = alloca i64, align 8
  %cppVar_535 = alloca i64, align 8
  %cppVar_542 = alloca i64, align 8
  %cppVar_538 = alloca i64, align 8
  %cppVar_531 = alloca i64, align 8
  %cppVar_520 = alloca i64, align 8
  %cppVar_546 = alloca i64, align 8
  %cppVar_517 = alloca i64, align 8
  %cppVar_513 = alloca i64, align 8
  %cppVar_516 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_515, align 1
  %18 = load i8* %cppVar_515, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_513, align 8
  br label %172

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_519, align 1
  %26 = load i8* %cppVar_519, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %155

; <label>:28                                      ; preds = %21
  %29 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %30 = load i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %cppVar_522, align 1
  %33 = load i8* %cppVar_519, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %28
  %36 = load i8* %cppVar_522, align 1
  %37 = trunc i8 %36 to i1
  br label %38

; <label>:38                                      ; preds = %35, %28
  %39 = phi i1 [ false, %28 ], [ %37, %35 ]
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %cppVar_523, align 1
  %41 = load i8* %cppVar_523, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %76

; <label>:43                                      ; preds = %38
  %44 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %45 = load i64* %44, align 8
  %46 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %47 = load i64* %46, align 8
  %48 = icmp eq i64 %45, %47
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %cppVar_525, align 1
  %50 = load i8* %cppVar_525, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %71

; <label>:52                                      ; preds = %43
  %53 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %54 = load i64* %53, align 8
  %55 = icmp eq i64 %54, 4
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_528, align 1
  %57 = load i8* %cppVar_528, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %60

; <label>:59                                      ; preds = %52
  store i64 0, i64* %cppVar_526, align 8
  br label %69

; <label>:60                                      ; preds = %52
  %61 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %62 = load i64* %61, align 8
  %63 = add nsw i64 %62, 1
  store i64 %63, i64* %cppVar_530, align 8
  %64 = load i64* %cppVar_530, align 8
  %65 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %66 = load i64* %65, align 8
  %67 = and i64 %64, %66
  store i64 %67, i64* %cppVar_530, align 8
  %68 = load i64* %cppVar_530, align 8
  store i64 %68, i64* %cppVar_526, align 8
  br label %69

; <label>:69                                      ; preds = %60, %59
  %70 = load i64* %cppVar_526, align 8
  store i64 %70, i64* %cppVar_524, align 8
  br label %74

; <label>:71                                      ; preds = %43
  %72 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %73 = load i64* %72, align 8
  store i64 %73, i64* %cppVar_524, align 8
  br label %74

; <label>:74                                      ; preds = %71, %69
  %75 = load i64* %cppVar_524, align 8
  store i64 %75, i64* %cppVar_520, align 8
  br label %153

; <label>:76                                      ; preds = %38
  %77 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %78 = load i64* %77, align 8
  %79 = icmp eq i64 %78, 1
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %cppVar_533, align 1
  %81 = load i8* %cppVar_519, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %86

; <label>:83                                      ; preds = %76
  %84 = load i8* %cppVar_533, align 1
  %85 = trunc i8 %84 to i1
  br label %86

; <label>:86                                      ; preds = %83, %76
  %87 = phi i1 [ false, %76 ], [ %85, %83 ]
  %88 = zext i1 %87 to i8
  store i8 %88, i8* %cppVar_534, align 1
  %89 = load i8* %cppVar_534, align 1
  %90 = trunc i8 %89 to i1
  br i1 %90, label %91, label %110

; <label>:91                                      ; preds = %86
  %92 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %93 = load i64* %92, align 8
  %94 = icmp eq i64 %93, 4
  %95 = zext i1 %94 to i8
  store i8 %95, i8* %cppVar_528, align 1
  %96 = load i8* %cppVar_528, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %99

; <label>:98                                      ; preds = %91
  store i64 0, i64* %cppVar_535, align 8
  br label %108

; <label>:99                                      ; preds = %91
  %100 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %101 = load i64* %100, align 8
  %102 = add nsw i64 %101, 1
  store i64 %102, i64* %cppVar_537, align 8
  %103 = load i64* %cppVar_537, align 8
  %104 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %105 = load i64* %104, align 8
  %106 = and i64 %103, %105
  store i64 %106, i64* %cppVar_537, align 8
  %107 = load i64* %cppVar_537, align 8
  store i64 %107, i64* %cppVar_535, align 8
  br label %108

; <label>:108                                     ; preds = %99, %98
  %109 = load i64* %cppVar_535, align 8
  store i64 %109, i64* %cppVar_531, align 8
  br label %151

; <label>:110                                     ; preds = %86
  %111 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %112 = load i64* %111, align 8
  %113 = icmp eq i64 %112, 2
  %114 = zext i1 %113 to i8
  store i8 %114, i8* %cppVar_540, align 1
  %115 = load i8* %cppVar_519, align 1
  %116 = trunc i8 %115 to i1
  br i1 %116, label %117, label %120

; <label>:117                                     ; preds = %110
  %118 = load i8* %cppVar_540, align 1
  %119 = trunc i8 %118 to i1
  br label %120

; <label>:120                                     ; preds = %117, %110
  %121 = phi i1 [ false, %110 ], [ %119, %117 ]
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %cppVar_541, align 1
  %123 = load i8* %cppVar_541, align 1
  %124 = trunc i8 %123 to i1
  br i1 %124, label %125, label %127

; <label>:125                                     ; preds = %120
  %126 = load i64* %cppVar_535, align 8
  store i64 %126, i64* %cppVar_538, align 8
  br label %149

; <label>:127                                     ; preds = %120
  %128 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %129 = load i64* %128, align 8
  %130 = icmp eq i64 %129, 3
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %cppVar_544, align 1
  %132 = load i8* %cppVar_519, align 1
  %133 = trunc i8 %132 to i1
  br i1 %133, label %134, label %137

; <label>:134                                     ; preds = %127
  %135 = load i8* %cppVar_544, align 1
  %136 = trunc i8 %135 to i1
  br label %137

; <label>:137                                     ; preds = %134, %127
  %138 = phi i1 [ false, %127 ], [ %136, %134 ]
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %cppVar_545, align 1
  %140 = load i8* %cppVar_545, align 1
  %141 = trunc i8 %140 to i1
  br i1 %141, label %142, label %144

; <label>:142                                     ; preds = %137
  %143 = load i64* %cppVar_535, align 8
  store i64 %143, i64* %cppVar_542, align 8
  br label %147

; <label>:144                                     ; preds = %137
  %145 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %146 = load i64* %145, align 8
  store i64 %146, i64* %cppVar_542, align 8
  br label %147

; <label>:147                                     ; preds = %144, %142
  %148 = load i64* %cppVar_542, align 8
  store i64 %148, i64* %cppVar_538, align 8
  br label %149

; <label>:149                                     ; preds = %147, %125
  %150 = load i64* %cppVar_538, align 8
  store i64 %150, i64* %cppVar_531, align 8
  br label %151

; <label>:151                                     ; preds = %149, %108
  %152 = load i64* %cppVar_531, align 8
  store i64 %152, i64* %cppVar_520, align 8
  br label %153

; <label>:153                                     ; preds = %151, %74
  %154 = load i64* %cppVar_520, align 8
  store i64 %154, i64* %cppVar_517, align 8
  br label %170

; <label>:155                                     ; preds = %21
  %156 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %157 = load i64* %156, align 8
  %158 = icmp eq i64 %157, 2
  %159 = zext i1 %158 to i8
  store i8 %159, i8* %cppVar_548, align 1
  %160 = load i8* %cppVar_548, align 1
  %161 = trunc i8 %160 to i1
  br i1 %161, label %162, label %165

; <label>:162                                     ; preds = %155
  %163 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %164 = load i64* %163, align 8
  store i64 %164, i64* %cppVar_546, align 8
  br label %168

; <label>:165                                     ; preds = %155
  %166 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %167 = load i64* %166, align 8
  store i64 %167, i64* %cppVar_546, align 8
  br label %168

; <label>:168                                     ; preds = %165, %162
  %169 = load i64* %cppVar_546, align 8
  store i64 %169, i64* %cppVar_517, align 8
  br label %170

; <label>:170                                     ; preds = %168, %153
  %171 = load i64* %cppVar_517, align 8
  store i64 %171, i64* %cppVar_513, align 8
  br label %172

; <label>:172                                     ; preds = %170, %20
  %173 = load i64* %cppVar_513, align 8
  ret i64 %173
}

define i64 @_ZN11model_train23cppUpdateFun_loop_countElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_551 = alloca i64, align 8
  %cppVar_552 = alloca i8, align 1
  %cppVar_554 = alloca i64, align 8
  %cppVar_555 = alloca i8, align 1
  %cppVar_557 = alloca i64, align 8
  %cppVar_558 = alloca i8, align 1
  %cppVar_560 = alloca i8, align 1
  %cppVar_561 = alloca i8, align 1
  %cppVar_562 = alloca i8, align 1
  %cppVar_563 = alloca i64, align 8
  %cppVar_564 = alloca i64, align 8
  %cppVar_565 = alloca i8, align 1
  %cppVar_566 = alloca i8, align 1
  %cppVar_567 = alloca i8, align 1
  %cppVar_568 = alloca i8, align 1
  %cppVar_569 = alloca i64, align 8
  %cppVar_570 = alloca i64, align 8
  %cppVar_559 = alloca i64, align 8
  %cppVar_556 = alloca i64, align 8
  %cppVar_553 = alloca i64, align 8
  %cppVar_550 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_552, align 1
  %18 = load i8* %cppVar_552, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 8
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_550, align 8
  br label %118

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_555, align 1
  %28 = load i8* %cppVar_555, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 8
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_553, align 8
  br label %116

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_558, align 1
  %38 = load i8* %cppVar_558, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %111

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %44 = load i64* %43, align 8
  %45 = icmp eq i64 %42, %44
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %cppVar_560, align 1
  %47 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %48 = load i64* %47, align 8
  %49 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_561, align 1
  %53 = load i8* %cppVar_560, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %40
  %56 = load i8* %cppVar_561, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %40
  %59 = phi i1 [ false, %40 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_562, align 1
  %61 = getelementptr inbounds %class.model_train* %13, i32 0, i32 13
  %62 = load i64* %61, align 8
  %63 = sub nsw i64 %62, 1
  store i64 %63, i64* %cppVar_564, align 8
  %64 = load i64* %cppVar_564, align 8
  %65 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %66 = load i64* %65, align 8
  %67 = and i64 %64, %66
  store i64 %67, i64* %cppVar_564, align 8
  %68 = getelementptr inbounds %class.model_train* %13, i32 0, i32 5
  %69 = load i64* %68, align 8
  %70 = load i64* %cppVar_564, align 8
  %71 = icmp eq i64 %69, %70
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %cppVar_565, align 1
  %73 = load i8* %cppVar_562, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %78

; <label>:75                                      ; preds = %58
  %76 = load i8* %cppVar_565, align 1
  %77 = trunc i8 %76 to i1
  br label %78

; <label>:78                                      ; preds = %75, %58
  %79 = phi i1 [ false, %58 ], [ %77, %75 ]
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %cppVar_566, align 1
  %81 = getelementptr inbounds %class.model_train* %13, i32 0, i32 8
  %82 = load i64* %81, align 8
  %83 = getelementptr inbounds %class.model_train* %13, i32 0, i32 10
  %84 = load i64* %83, align 8
  %85 = icmp ne i64 %82, %84
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %cppVar_567, align 1
  %87 = load i8* %cppVar_566, align 1
  %88 = trunc i8 %87 to i1
  br i1 %88, label %89, label %92

; <label>:89                                      ; preds = %78
  %90 = load i8* %cppVar_567, align 1
  %91 = trunc i8 %90 to i1
  br label %92

; <label>:92                                      ; preds = %89, %78
  %93 = phi i1 [ false, %78 ], [ %91, %89 ]
  %94 = zext i1 %93 to i8
  store i8 %94, i8* %cppVar_568, align 1
  %95 = load i8* %cppVar_568, align 1
  %96 = trunc i8 %95 to i1
  br i1 %96, label %97, label %106

; <label>:97                                      ; preds = %92
  %98 = getelementptr inbounds %class.model_train* %13, i32 0, i32 8
  %99 = load i64* %98, align 8
  %100 = add nsw i64 %99, 1
  store i64 %100, i64* %cppVar_570, align 8
  %101 = load i64* %cppVar_570, align 8
  %102 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %103 = load i64* %102, align 8
  %104 = and i64 %101, %103
  store i64 %104, i64* %cppVar_570, align 8
  %105 = load i64* %cppVar_570, align 8
  store i64 %105, i64* %cppVar_559, align 8
  br label %109

; <label>:106                                     ; preds = %92
  %107 = getelementptr inbounds %class.model_train* %13, i32 0, i32 8
  %108 = load i64* %107, align 8
  store i64 %108, i64* %cppVar_559, align 8
  br label %109

; <label>:109                                     ; preds = %106, %97
  %110 = load i64* %cppVar_559, align 8
  store i64 %110, i64* %cppVar_556, align 8
  br label %114

; <label>:111                                     ; preds = %33
  %112 = getelementptr inbounds %class.model_train* %13, i32 0, i32 8
  %113 = load i64* %112, align 8
  store i64 %113, i64* %cppVar_556, align 8
  br label %114

; <label>:114                                     ; preds = %111, %109
  %115 = load i64* %cppVar_556, align 8
  store i64 %115, i64* %cppVar_553, align 8
  br label %116

; <label>:116                                     ; preds = %114, %30
  %117 = load i64* %cppVar_553, align 8
  store i64 %117, i64* %cppVar_550, align 8
  br label %118

; <label>:118                                     ; preds = %116, %20
  %119 = load i64* %cppVar_550, align 8
  ret i64 %119
}

define i64 @_ZN11model_train21cppUpdateFun_per_v_pcElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_573 = alloca i64, align 8
  %cppVar_574 = alloca i8, align 1
  %cppVar_577 = alloca i64, align 8
  %cppVar_578 = alloca i8, align 1
  %cppVar_616 = alloca i64, align 8
  %cppVar_617 = alloca i8, align 1
  %cppVar_586 = alloca i8, align 1
  %cppVar_584 = alloca i64, align 8
  %cppVar_585 = alloca i8, align 1
  %cppVar_607 = alloca i64, align 8
  %cppVar_608 = alloca i64, align 8
  %cppVar_609 = alloca i8, align 1
  %cppVar_610 = alloca i64, align 8
  %cppVar_611 = alloca i64, align 8
  %cppVar_612 = alloca i64, align 8
  %cppVar_613 = alloca i8, align 1
  %cppVar_614 = alloca i8, align 1
  %cppVar_580 = alloca i64, align 8
  %cppVar_581 = alloca i8, align 1
  %cppVar_582 = alloca i8, align 1
  %cppVar_590 = alloca i64, align 8
  %cppVar_591 = alloca i8, align 1
  %cppVar_592 = alloca i8, align 1
  %cppVar_596 = alloca i64, align 8
  %cppVar_597 = alloca i8, align 1
  %cppVar_598 = alloca i8, align 1
  %cppVar_602 = alloca i64, align 8
  %cppVar_603 = alloca i8, align 1
  %cppVar_604 = alloca i8, align 1
  %cppVar_587 = alloca i8, align 1
  %cppVar_583 = alloca i64, align 8
  %cppVar_593 = alloca i64, align 8
  %cppVar_599 = alloca i64, align 8
  %cppVar_606 = alloca i64, align 8
  %cppVar_605 = alloca i64, align 8
  %cppVar_601 = alloca i64, align 8
  %cppVar_595 = alloca i64, align 8
  %cppVar_589 = alloca i64, align 8
  %cppVar_579 = alloca i64, align 8
  %cppVar_575 = alloca i64, align 8
  %cppVar_588 = alloca i64, align 8
  %cppVar_594 = alloca i64, align 8
  %cppVar_600 = alloca i64, align 8
  %cppVar_615 = alloca i64, align 8
  %cppVar_576 = alloca i64, align 8
  %cppVar_572 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_574, align 1
  %18 = load i8* %cppVar_574, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_572, align 8
  br label %210

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_578, align 1
  %26 = load i8* %cppVar_578, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %193

; <label>:28                                      ; preds = %21
  %29 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %30 = load i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %cppVar_581, align 1
  %33 = load i8* %cppVar_578, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %28
  %36 = load i8* %cppVar_581, align 1
  %37 = trunc i8 %36 to i1
  br label %38

; <label>:38                                      ; preds = %35, %28
  %39 = phi i1 [ false, %28 ], [ %37, %35 ]
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %cppVar_582, align 1
  %41 = load i8* %cppVar_582, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %70

; <label>:43                                      ; preds = %38
  %44 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %45 = load i64* %44, align 8
  %46 = icmp eq i64 %45, 4
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %cppVar_585, align 1
  %48 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %49 = load i64* %48, align 8
  %50 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %51 = load i64* %50, align 8
  %52 = icmp eq i64 %49, %51
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %cppVar_586, align 1
  %54 = load i8* %cppVar_585, align 1
  %55 = trunc i8 %54 to i1
  br i1 %55, label %56, label %59

; <label>:56                                      ; preds = %43
  %57 = load i8* %cppVar_586, align 1
  %58 = trunc i8 %57 to i1
  br label %59

; <label>:59                                      ; preds = %56, %43
  %60 = phi i1 [ false, %43 ], [ %58, %56 ]
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %cppVar_587, align 1
  %62 = load i8* %cppVar_587, align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %59
  store i64 1, i64* %cppVar_583, align 8
  br label %68

; <label>:65                                      ; preds = %59
  %66 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %67 = load i64* %66, align 8
  store i64 %67, i64* %cppVar_583, align 8
  br label %68

; <label>:68                                      ; preds = %65, %64
  %69 = load i64* %cppVar_583, align 8
  store i64 %69, i64* %cppVar_579, align 8
  br label %191

; <label>:70                                      ; preds = %38
  %71 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %72 = load i64* %71, align 8
  %73 = icmp eq i64 %72, 1
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_591, align 1
  %75 = load i8* %cppVar_578, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %80

; <label>:77                                      ; preds = %70
  %78 = load i8* %cppVar_591, align 1
  %79 = trunc i8 %78 to i1
  br label %80

; <label>:80                                      ; preds = %77, %70
  %81 = phi i1 [ false, %70 ], [ %79, %77 ]
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_592, align 1
  %83 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %84 = load i64* %83, align 8
  %85 = icmp eq i64 %84, 4
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %cppVar_585, align 1
  %87 = load i8* %cppVar_592, align 1
  %88 = trunc i8 %87 to i1
  br i1 %88, label %89, label %98

; <label>:89                                      ; preds = %80
  %90 = load i8* %cppVar_585, align 1
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %89
  store i64 2, i64* %cppVar_593, align 8
  br label %96

; <label>:93                                      ; preds = %89
  %94 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %95 = load i64* %94, align 8
  store i64 %95, i64* %cppVar_593, align 8
  br label %96

; <label>:96                                      ; preds = %93, %92
  %97 = load i64* %cppVar_593, align 8
  store i64 %97, i64* %cppVar_589, align 8
  br label %189

; <label>:98                                      ; preds = %80
  %99 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %100 = load i64* %99, align 8
  %101 = icmp eq i64 %100, 2
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %cppVar_597, align 1
  %103 = load i8* %cppVar_578, align 1
  %104 = trunc i8 %103 to i1
  br i1 %104, label %105, label %108

; <label>:105                                     ; preds = %98
  %106 = load i8* %cppVar_597, align 1
  %107 = trunc i8 %106 to i1
  br label %108

; <label>:108                                     ; preds = %105, %98
  %109 = phi i1 [ false, %98 ], [ %107, %105 ]
  %110 = zext i1 %109 to i8
  store i8 %110, i8* %cppVar_598, align 1
  %111 = load i8* %cppVar_598, align 1
  %112 = trunc i8 %111 to i1
  br i1 %112, label %113, label %122

; <label>:113                                     ; preds = %108
  %114 = load i8* %cppVar_585, align 1
  %115 = trunc i8 %114 to i1
  br i1 %115, label %116, label %117

; <label>:116                                     ; preds = %113
  store i64 3, i64* %cppVar_599, align 8
  br label %120

; <label>:117                                     ; preds = %113
  %118 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %119 = load i64* %118, align 8
  store i64 %119, i64* %cppVar_599, align 8
  br label %120

; <label>:120                                     ; preds = %117, %116
  %121 = load i64* %cppVar_599, align 8
  store i64 %121, i64* %cppVar_595, align 8
  br label %187

; <label>:122                                     ; preds = %108
  %123 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %124 = load i64* %123, align 8
  %125 = icmp eq i64 %124, 3
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %cppVar_603, align 1
  %127 = load i8* %cppVar_578, align 1
  %128 = trunc i8 %127 to i1
  br i1 %128, label %129, label %132

; <label>:129                                     ; preds = %122
  %130 = load i8* %cppVar_603, align 1
  %131 = trunc i8 %130 to i1
  br label %132

; <label>:132                                     ; preds = %129, %122
  %133 = phi i1 [ false, %122 ], [ %131, %129 ]
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %cppVar_604, align 1
  %135 = load i8* %cppVar_604, align 1
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %182

; <label>:137                                     ; preds = %132
  %138 = load i8* %cppVar_585, align 1
  %139 = trunc i8 %138 to i1
  br i1 %139, label %140, label %177

; <label>:140                                     ; preds = %137
  %141 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %142 = load i64* %141, align 8
  %143 = add nsw i64 %142, 5
  store i64 %143, i64* %cppVar_608, align 8
  %144 = load i64* %cppVar_608, align 8
  %145 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %146 = load i64* %145, align 8
  %147 = and i64 %144, %146
  store i64 %147, i64* %cppVar_608, align 8
  %148 = load i64* %cppVar_608, align 8
  %149 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %150 = load i64* %149, align 8
  %151 = icmp eq i64 %148, %150
  %152 = zext i1 %151 to i8
  store i8 %152, i8* %cppVar_609, align 1
  %153 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %154 = load i64* %153, align 8
  %155 = add nsw i64 %154, 5
  store i64 %155, i64* %cppVar_611, align 8
  %156 = load i64* %cppVar_611, align 8
  %157 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %158 = load i64* %157, align 8
  %159 = and i64 %156, %158
  store i64 %159, i64* %cppVar_611, align 8
  %160 = load i64* %cppVar_611, align 8
  %161 = icmp sge i64 %160, 500
  %162 = zext i1 %161 to i8
  store i8 %162, i8* %cppVar_613, align 1
  %163 = load i8* %cppVar_609, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %168, label %165

; <label>:165                                     ; preds = %140
  %166 = load i8* %cppVar_613, align 1
  %167 = trunc i8 %166 to i1
  br label %168

; <label>:168                                     ; preds = %165, %140
  %169 = phi i1 [ true, %140 ], [ %167, %165 ]
  %170 = zext i1 %169 to i8
  store i8 %170, i8* %cppVar_614, align 1
  %171 = load i8* %cppVar_614, align 1
  %172 = trunc i8 %171 to i1
  br i1 %172, label %173, label %174

; <label>:173                                     ; preds = %168
  store i64 0, i64* %cppVar_606, align 8
  br label %175

; <label>:174                                     ; preds = %168
  store i64 0, i64* %cppVar_606, align 8
  br label %175

; <label>:175                                     ; preds = %174, %173
  %176 = load i64* %cppVar_606, align 8
  store i64 %176, i64* %cppVar_605, align 8
  br label %180

; <label>:177                                     ; preds = %137
  %178 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %179 = load i64* %178, align 8
  store i64 %179, i64* %cppVar_605, align 8
  br label %180

; <label>:180                                     ; preds = %177, %175
  %181 = load i64* %cppVar_605, align 8
  store i64 %181, i64* %cppVar_601, align 8
  br label %185

; <label>:182                                     ; preds = %132
  %183 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %184 = load i64* %183, align 8
  store i64 %184, i64* %cppVar_601, align 8
  br label %185

; <label>:185                                     ; preds = %182, %180
  %186 = load i64* %cppVar_601, align 8
  store i64 %186, i64* %cppVar_595, align 8
  br label %187

; <label>:187                                     ; preds = %185, %120
  %188 = load i64* %cppVar_595, align 8
  store i64 %188, i64* %cppVar_589, align 8
  br label %189

; <label>:189                                     ; preds = %187, %96
  %190 = load i64* %cppVar_589, align 8
  store i64 %190, i64* %cppVar_579, align 8
  br label %191

; <label>:191                                     ; preds = %189, %68
  %192 = load i64* %cppVar_579, align 8
  store i64 %192, i64* %cppVar_576, align 8
  br label %208

; <label>:193                                     ; preds = %21
  %194 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %195 = load i64* %194, align 8
  %196 = icmp eq i64 %195, 2
  %197 = zext i1 %196 to i8
  store i8 %197, i8* %cppVar_617, align 1
  %198 = load i8* %cppVar_617, align 1
  %199 = trunc i8 %198 to i1
  br i1 %199, label %200, label %203

; <label>:200                                     ; preds = %193
  %201 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %202 = load i64* %201, align 8
  store i64 %202, i64* %cppVar_615, align 8
  br label %206

; <label>:203                                     ; preds = %193
  %204 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %205 = load i64* %204, align 8
  store i64 %205, i64* %cppVar_615, align 8
  br label %206

; <label>:206                                     ; preds = %203, %200
  %207 = load i64* %cppVar_615, align 8
  store i64 %207, i64* %cppVar_576, align 8
  br label %208

; <label>:208                                     ; preds = %206, %191
  %209 = load i64* %cppVar_576, align 8
  store i64 %209, i64* %cppVar_572, align 8
  br label %210

; <label>:210                                     ; preds = %208, %20
  %211 = load i64* %cppVar_572, align 8
  ret i64 %211
}

define void @_ZN11model_train16cppUpdateFun_posElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1039 = alloca i64, align 8
  %cppVar_1040 = alloca i8, align 1
  %cppVar_1045 = alloca i64, align 8
  %cppVar_1046 = alloca i64, align 8
  %cppVar_1047 = alloca i64, align 8
  %cppVar_1048 = alloca i8, align 1
  %cppVar_1044 = alloca i64, align 8
  %cppVar_1051 = alloca i64, align 8
  %cppVar_1052 = alloca i64, align 8
  %cppVar_1053 = alloca i64, align 8
  %cppVar_1041 = alloca i64, align 8
  %cppVar_1042 = alloca i64, align 8
  %cppVar_1043 = alloca i64, align 8
  %cppVar_1054 = alloca %class.SysCArray1D, align 8
  %cppVar_1050 = alloca i64, align 8
  %cppVar_1049 = alloca i64, align 8
  %13 = alloca i1
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_train** %1
  call void @_ZN8type_memIbLj65536EEC1Ev(%class.SysCArray1D* %cppVar_1054)
  store i1 false, i1* %13
  invoke void @_ZN8type_memIbLj65536EEC1Ev(%class.SysCArray1D* %agg.result)
          to label %18 unwind label %57

; <label>:18                                      ; preds = %0
  %19 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %20 = load i64* %19, align 8
  %21 = icmp eq i64 %20, 3
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %cppVar_1040, align 1
  %23 = load i8* %cppVar_1040, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %25, label %86

; <label>:25                                      ; preds = %18
  %26 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %27 = load i64* %26, align 8
  %28 = mul nsw i64 101, %27
  store i64 %28, i64* %cppVar_1042, align 8
  %29 = load i64* %cppVar_1042, align 8
  %30 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %31 = load i64* %30, align 8
  %32 = and i64 %29, %31
  store i64 %32, i64* %cppVar_1042, align 8
  %33 = load i64* %cppVar_1042, align 8
  %34 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %35 = load i64* %34, align 8
  %36 = add nsw i64 %33, %35
  store i64 %36, i64* %cppVar_1043, align 8
  %37 = load i64* %cppVar_1043, align 8
  %38 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %39 = load i64* %38, align 8
  %40 = and i64 %37, %39
  store i64 %40, i64* %cppVar_1043, align 8
  %41 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %42 = load i64* %41, align 8
  %43 = ashr i64 %42, 0
  %44 = getelementptr inbounds %class.model_train* %17, i32 0, i32 45
  %45 = load i64* %44, align 8
  %46 = and i64 %43, %45
  store i64 %46, i64* %cppVar_1045, align 8
  %47 = getelementptr inbounds %class.model_train* %17, i32 0, i32 0
  %48 = load i64* %cppVar_1045, align 8
  %49 = invoke i64 @_ZN8type_memIhLj512EE2rdEl(%class.SysCArray1D* %47, i64 %48)
          to label %50 unwind label %60

; <label>:50                                      ; preds = %25
  store i64 %49, i64* %cppVar_1046, align 8
  %51 = load i64* %cppVar_1046, align 8
  %52 = icmp ne i64 %51, 0
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %cppVar_1048, align 1
  %54 = load i8* %cppVar_1048, align 1
  %55 = trunc i8 %54 to i1
  br i1 %55, label %56, label %63

; <label>:56                                      ; preds = %50
  store i64 1, i64* %cppVar_1044, align 8
  br label %64

; <label>:57                                      ; preds = %92, %0
  %58 = call i8* @llvm.eh.exception() nounwind
  store i8* %58, i8** %14
  %59 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %58, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %15
  br label %96

; <label>:60                                      ; preds = %86, %83, %80, %74, %64, %25
  %61 = call i8* @llvm.eh.exception() nounwind
  store i8* %61, i8** %14
  %62 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %61, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %15
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %agg.result)
          to label %95 unwind label %100

; <label>:63                                      ; preds = %50
  store i64 0, i64* %cppVar_1044, align 8
  br label %64

; <label>:64                                      ; preds = %63, %56
  %65 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %66 = load i64* %65, align 8
  %67 = ashr i64 %66, 0
  %68 = getelementptr inbounds %class.model_train* %17, i32 0, i32 43
  %69 = load i64* %68, align 8
  %70 = and i64 %67, %69
  store i64 %70, i64* %cppVar_1051, align 8
  %71 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %72 = load i64* %cppVar_1051, align 8
  %73 = invoke i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %71, i64 %72)
          to label %74 unwind label %60

; <label>:74                                      ; preds = %64
  store i64 %73, i64* %cppVar_1052, align 8
  %75 = load i64* %cppVar_1044, align 8
  %76 = load i64* %cppVar_1052, align 8
  %77 = and i64 %75, %76
  store i64 %77, i64* %cppVar_1053, align 8
  %78 = getelementptr inbounds %class.model_train* %17, i32 0, i32 16
  %79 = invoke %class.SysCArray1D* @_ZN8type_memIbLj65536EEaSERKS0_(%class.SysCArray1D* %cppVar_1054, %class.SysCArray1D* %78)
          to label %80 unwind label %60

; <label>:80                                      ; preds = %74
  %81 = load i64* %cppVar_1043, align 8
  %82 = load i64* %cppVar_1053, align 8
  invoke void @_ZN8type_memIbLj65536EE2wrEll(%class.SysCArray1D* %cppVar_1054, i64 %81, i64 %82)
          to label %83 unwind label %60

; <label>:83                                      ; preds = %80
  %84 = invoke %class.SysCArray1D* @_ZN8type_memIbLj65536EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_1054)
          to label %85 unwind label %60

; <label>:85                                      ; preds = %83
  br label %90

; <label>:86                                      ; preds = %18
  %87 = getelementptr inbounds %class.model_train* %17, i32 0, i32 16
  %88 = invoke %class.SysCArray1D* @_ZN8type_memIbLj65536EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %87)
          to label %89 unwind label %60

; <label>:89                                      ; preds = %86
  br label %90

; <label>:90                                      ; preds = %89, %85
  store i1 true, i1* %13
  store i32 1, i32* %16
  %91 = load i1* %13
  br i1 %91, label %94, label %92

; <label>:92                                      ; preds = %90
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %agg.result)
          to label %93 unwind label %57

; <label>:93                                      ; preds = %92
  br label %94

; <label>:94                                      ; preds = %93, %90
  call void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %cppVar_1054)
  ret void

; <label>:95                                      ; preds = %60
  br label %96

; <label>:96                                      ; preds = %95, %57
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %cppVar_1054)
          to label %97 unwind label %100

; <label>:97                                      ; preds = %96
  br label %98

; <label>:98                                      ; preds = %97
  %99 = load i8** %14
  call void @_Unwind_Resume_or_Rethrow(i8* %99) noreturn
  unreachable

; <label>:100                                     ; preds = %96, %60
  %101 = call i8* @llvm.eh.exception() nounwind
  %102 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %101, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIbLj65536EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj65536EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIbLj65536EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

define linkonce_odr void @_ZN8type_memIbLj65536EE2wrEll(%class.SysCArray1D* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %class.SysCArray1D** %1
  %5 = load i64* %3, align 8
  %6 = icmp ne i64 %5, 0
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %class.SysCArray1D* %4, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = getelementptr inbounds i8* %9, i64 %7
  %11 = zext i1 %6 to i8
  store i8 %11, i8* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj65536EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define void @_ZN11model_train17cppUpdateFun_pow2Elllllllllll(%0* sret %agg.result, %class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1057 = alloca i64, align 8
  %cppVar_1058 = alloca i8, align 1
  %cppVar_1060 = alloca i64, align 8
  %cppVar_1061 = alloca i8, align 1
  %cppVar_1084 = alloca i64, align 8
  %cppVar_1085 = alloca i8, align 1
  %cppVar_1063 = alloca i64, align 8
  %cppVar_1064 = alloca i8, align 1
  %cppVar_1065 = alloca i8, align 1
  %cppVar_1067 = alloca i64, align 8
  %cppVar_1068 = alloca i8, align 1
  %cppVar_1069 = alloca i8, align 1
  %cppVar_1071 = alloca i64, align 8
  %cppVar_1072 = alloca i8, align 1
  %cppVar_1073 = alloca i8, align 1
  %cppVar_1080 = alloca i64, align 8
  %cppVar_1081 = alloca i8, align 1
  %cppVar_1082 = alloca i8, align 1
  %cppVar_1075 = alloca i64, align 8
  %cppVar_1076 = alloca i64, align 8
  %cppVar_1077 = alloca i64, align 8
  %cppVar_1074 = alloca i64, align 8
  %cppVar_1078 = alloca %0, align 8
  %cppVar_1079 = alloca %0, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_1070 = alloca %0, align 8
  %cppVar_1066 = alloca %0, align 8
  %cppVar_1062 = alloca %0, align 8
  %cppVar_1083 = alloca %0, align 8
  %cppVar_1059 = alloca %0, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_train** %1
  call void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_1078)
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_1079)
          to label %18 unwind label %35

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_1070)
          to label %19 unwind label %38

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_1066)
          to label %20 unwind label %41

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_1062)
          to label %21 unwind label %44

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_1083)
          to label %22 unwind label %47

; <label>:22                                      ; preds = %21
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_1059)
          to label %23 unwind label %50

; <label>:23                                      ; preds = %22
  store i1 false, i1* %15
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %agg.result)
          to label %24 unwind label %53

; <label>:24                                      ; preds = %23
  %25 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %26 = load i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %cppVar_1058, align 1
  %29 = load i8* %cppVar_1058, align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %59

; <label>:31                                      ; preds = %24
  %32 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %33 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %agg.result, %0* %32)
          to label %34 unwind label %56

; <label>:34                                      ; preds = %31
  br label %204

; <label>:35                                      ; preds = %222, %0
  %36 = call i8* @llvm.eh.exception() nounwind
  store i8* %36, i8** %13
  %37 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %36, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %228

; <label>:38                                      ; preds = %219, %18
  %39 = call i8* @llvm.eh.exception() nounwind
  store i8* %39, i8** %13
  %40 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %39, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %226

; <label>:41                                      ; preds = %216, %19
  %42 = call i8* @llvm.eh.exception() nounwind
  store i8* %42, i8** %13
  %43 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %42, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %223

; <label>:44                                      ; preds = %213, %20
  %45 = call i8* @llvm.eh.exception() nounwind
  store i8* %45, i8** %13
  %46 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %45, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %220

; <label>:47                                      ; preds = %210, %21
  %48 = call i8* @llvm.eh.exception() nounwind
  store i8* %48, i8** %13
  %49 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %48, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %217

; <label>:50                                      ; preds = %208, %22
  %51 = call i8* @llvm.eh.exception() nounwind
  store i8* %51, i8** %13
  %52 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %51, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %214

; <label>:53                                      ; preds = %206, %23
  %54 = call i8* @llvm.eh.exception() nounwind
  store i8* %54, i8** %13
  %55 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %54, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %211

; <label>:56                                      ; preds = %201, %198, %194, %190, %180, %177, %174, %171, %167, %163, %145, %142, %138, %135, %119, %100, %81, %31
  %57 = call i8* @llvm.eh.exception() nounwind
  store i8* %57, i8** %13
  %58 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %57, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %agg.result)
          to label %209 unwind label %232

; <label>:59                                      ; preds = %24
  %60 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %61 = load i64* %60, align 8
  %62 = icmp eq i64 %61, 1
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %cppVar_1061, align 1
  %64 = load i8* %cppVar_1061, align 1
  %65 = trunc i8 %64 to i1
  br i1 %65, label %66, label %183

; <label>:66                                      ; preds = %59
  %67 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %68 = load i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_1064, align 1
  %71 = load i8* %cppVar_1061, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %76

; <label>:73                                      ; preds = %66
  %74 = load i8* %cppVar_1064, align 1
  %75 = trunc i8 %74 to i1
  br label %76

; <label>:76                                      ; preds = %73, %66
  %77 = phi i1 [ false, %66 ], [ %75, %73 ]
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %cppVar_1065, align 1
  %79 = load i8* %cppVar_1065, align 1
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %85

; <label>:81                                      ; preds = %76
  %82 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %83 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1062, %0* %82)
          to label %84 unwind label %56

; <label>:84                                      ; preds = %81
  br label %180

; <label>:85                                      ; preds = %76
  %86 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %87 = load i64* %86, align 8
  %88 = icmp eq i64 %87, 1
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %cppVar_1068, align 1
  %90 = load i8* %cppVar_1061, align 1
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %95

; <label>:92                                      ; preds = %85
  %93 = load i8* %cppVar_1068, align 1
  %94 = trunc i8 %93 to i1
  br label %95

; <label>:95                                      ; preds = %92, %85
  %96 = phi i1 [ false, %85 ], [ %94, %92 ]
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %cppVar_1069, align 1
  %98 = load i8* %cppVar_1069, align 1
  %99 = trunc i8 %98 to i1
  br i1 %99, label %100, label %104

; <label>:100                                     ; preds = %95
  %101 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %102 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1066, %0* %101)
          to label %103 unwind label %56

; <label>:103                                     ; preds = %100
  br label %177

; <label>:104                                     ; preds = %95
  %105 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %106 = load i64* %105, align 8
  %107 = icmp eq i64 %106, 2
  %108 = zext i1 %107 to i8
  store i8 %108, i8* %cppVar_1072, align 1
  %109 = load i8* %cppVar_1061, align 1
  %110 = trunc i8 %109 to i1
  br i1 %110, label %111, label %114

; <label>:111                                     ; preds = %104
  %112 = load i8* %cppVar_1072, align 1
  %113 = trunc i8 %112 to i1
  br label %114

; <label>:114                                     ; preds = %111, %104
  %115 = phi i1 [ false, %104 ], [ %113, %111 ]
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %cppVar_1073, align 1
  %117 = load i8* %cppVar_1073, align 1
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %148

; <label>:119                                     ; preds = %114
  %120 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %121 = load i64* %120, align 8
  %122 = ashr i64 %121, 0
  %123 = getelementptr inbounds %class.model_train* %17, i32 0, i32 40
  %124 = load i64* %123, align 8
  %125 = and i64 %122, %124
  store i64 %125, i64* %cppVar_1074, align 8
  %126 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %127 = load i64* %126, align 8
  %128 = ashr i64 %127, 0
  %129 = getelementptr inbounds %class.model_train* %17, i32 0, i32 40
  %130 = load i64* %129, align 8
  %131 = and i64 %128, %130
  store i64 %131, i64* %cppVar_1075, align 8
  %132 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %133 = load i64* %cppVar_1075, align 8
  %134 = invoke i64 @_ZN8type_memItLj8EE2rdEl(%1* %132, i64 %133)
          to label %135 unwind label %56

; <label>:135                                     ; preds = %119
  store i64 %134, i64* %cppVar_1076, align 8
  %136 = load i64* %cppVar_1076, align 8
  %137 = invoke zeroext i16 @_Z10to_int_expl(i64 %136)
          to label %138 unwind label %56

; <label>:138                                     ; preds = %135
  %139 = zext i16 %137 to i64
  store i64 %139, i64* %cppVar_1077, align 8
  %140 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %141 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1078, %0* %140)
          to label %142 unwind label %56

; <label>:142                                     ; preds = %138
  %143 = load i64* %cppVar_1074, align 8
  %144 = load i64* %cppVar_1077, align 8
  invoke void @_ZN8type_memIjLj8EE2wrEll(%0* %cppVar_1078, i64 %143, i64 %144)
          to label %145 unwind label %56

; <label>:145                                     ; preds = %142
  %146 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1070, %0* %cppVar_1078)
          to label %147 unwind label %56

; <label>:147                                     ; preds = %145
  br label %174

; <label>:148                                     ; preds = %114
  %149 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %150 = load i64* %149, align 8
  %151 = icmp eq i64 %150, 3
  %152 = zext i1 %151 to i8
  store i8 %152, i8* %cppVar_1081, align 1
  %153 = load i8* %cppVar_1061, align 1
  %154 = trunc i8 %153 to i1
  br i1 %154, label %155, label %158

; <label>:155                                     ; preds = %148
  %156 = load i8* %cppVar_1081, align 1
  %157 = trunc i8 %156 to i1
  br label %158

; <label>:158                                     ; preds = %155, %148
  %159 = phi i1 [ false, %148 ], [ %157, %155 ]
  %160 = zext i1 %159 to i8
  store i8 %160, i8* %cppVar_1082, align 1
  %161 = load i8* %cppVar_1082, align 1
  %162 = trunc i8 %161 to i1
  br i1 %162, label %163, label %167

; <label>:163                                     ; preds = %158
  %164 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %165 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1079, %0* %164)
          to label %166 unwind label %56

; <label>:166                                     ; preds = %163
  br label %171

; <label>:167                                     ; preds = %158
  %168 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %169 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1079, %0* %168)
          to label %170 unwind label %56

; <label>:170                                     ; preds = %167
  br label %171

; <label>:171                                     ; preds = %170, %166
  %172 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1070, %0* %cppVar_1079)
          to label %173 unwind label %56

; <label>:173                                     ; preds = %171
  br label %174

; <label>:174                                     ; preds = %173, %147
  %175 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1066, %0* %cppVar_1070)
          to label %176 unwind label %56

; <label>:176                                     ; preds = %174
  br label %177

; <label>:177                                     ; preds = %176, %103
  %178 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1062, %0* %cppVar_1066)
          to label %179 unwind label %56

; <label>:179                                     ; preds = %177
  br label %180

; <label>:180                                     ; preds = %179, %84
  %181 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1059, %0* %cppVar_1062)
          to label %182 unwind label %56

; <label>:182                                     ; preds = %180
  br label %201

; <label>:183                                     ; preds = %59
  %184 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %185 = load i64* %184, align 8
  %186 = icmp eq i64 %185, 2
  %187 = zext i1 %186 to i8
  store i8 %187, i8* %cppVar_1085, align 1
  %188 = load i8* %cppVar_1085, align 1
  %189 = trunc i8 %188 to i1
  br i1 %189, label %190, label %194

; <label>:190                                     ; preds = %183
  %191 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %192 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1083, %0* %191)
          to label %193 unwind label %56

; <label>:193                                     ; preds = %190
  br label %198

; <label>:194                                     ; preds = %183
  %195 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %196 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1083, %0* %195)
          to label %197 unwind label %56

; <label>:197                                     ; preds = %194
  br label %198

; <label>:198                                     ; preds = %197, %193
  %199 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_1059, %0* %cppVar_1083)
          to label %200 unwind label %56

; <label>:200                                     ; preds = %198
  br label %201

; <label>:201                                     ; preds = %200, %182
  %202 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %agg.result, %0* %cppVar_1059)
          to label %203 unwind label %56

; <label>:203                                     ; preds = %201
  br label %204

; <label>:204                                     ; preds = %203, %34
  store i1 true, i1* %15
  store i32 1, i32* %16
  %205 = load i1* %15
  br i1 %205, label %208, label %206

; <label>:206                                     ; preds = %204
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %agg.result)
          to label %207 unwind label %53

; <label>:207                                     ; preds = %206
  br label %208

; <label>:208                                     ; preds = %207, %204
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1059)
          to label %210 unwind label %50

; <label>:209                                     ; preds = %56
  br label %211

; <label>:210                                     ; preds = %208
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1083)
          to label %213 unwind label %47

; <label>:211                                     ; preds = %209, %53
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1059)
          to label %212 unwind label %232

; <label>:212                                     ; preds = %211
  br label %214

; <label>:213                                     ; preds = %210
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1062)
          to label %216 unwind label %44

; <label>:214                                     ; preds = %212, %50
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1083)
          to label %215 unwind label %232

; <label>:215                                     ; preds = %214
  br label %217

; <label>:216                                     ; preds = %213
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1066)
          to label %219 unwind label %41

; <label>:217                                     ; preds = %215, %47
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1062)
          to label %218 unwind label %232

; <label>:218                                     ; preds = %217
  br label %220

; <label>:219                                     ; preds = %216
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1070)
          to label %222 unwind label %38

; <label>:220                                     ; preds = %218, %44
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1066)
          to label %221 unwind label %232

; <label>:221                                     ; preds = %220
  br label %223

; <label>:222                                     ; preds = %219
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1079)
          to label %225 unwind label %35

; <label>:223                                     ; preds = %221, %41
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1070)
          to label %224 unwind label %232

; <label>:224                                     ; preds = %223
  br label %226

; <label>:225                                     ; preds = %222
  call void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1078)
  ret void

; <label>:226                                     ; preds = %224, %38
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1079)
          to label %227 unwind label %232

; <label>:227                                     ; preds = %226
  br label %228

; <label>:228                                     ; preds = %227, %35
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1078)
          to label %229 unwind label %232

; <label>:229                                     ; preds = %228
  br label %230

; <label>:230                                     ; preds = %229
  %231 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %231) noreturn
  unreachable

; <label>:232                                     ; preds = %228, %226, %223, %220, %217, %214, %211, %56
  %233 = call i8* @llvm.eh.exception() nounwind
  %234 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %233, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIjLj8EEC1Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  call void @_ZN8type_memIjLj8EEC2Ev(%0* %2)
  ret void
}

define linkonce_odr %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %this, %0* %r) align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  store %0* %r, %0** %2, align 8
  %3 = load %0** %1
  %4 = getelementptr inbounds %0* %3, i32 0, i32 0
  %5 = load i32** %4, align 8
  %6 = bitcast i32* %5 to i8*
  %7 = load %0** %2
  %8 = getelementptr inbounds %0* %7, i32 0, i32 0
  %9 = load i32** %8, align 8
  %10 = bitcast i32* %9 to i8*
  call void @__CPROVER_array_copy(i8* %6, i8* %10)
  ret %0* %3
}

define linkonce_odr i64 @_ZN8type_memItLj8EE2rdEl(%1* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %1** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %1* %3, i32 0, i32 0
  %6 = load i16** %5, align 8
  %7 = getelementptr inbounds i16* %6, i64 %4
  %8 = load i16* %7
  %9 = zext i16 %8 to i64
  ret i64 %9
}

define linkonce_odr void @_ZN8type_memIjLj8EE2wrEll(%0* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %0** %1
  %5 = load i64* %3, align 8
  %6 = trunc i64 %5 to i32
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %0* %4, i32 0, i32 0
  %9 = load i32** %8, align 8
  %10 = getelementptr inbounds i32* %9, i64 %7
  store i32 %6, i32* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EED1Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  call void @_ZN8type_memIjLj8EED2Ev(%0* %2)
  ret void
}

define i64 @_ZN11model_train22cppUpdateFun_sumOfpow2Elllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_620 = alloca i64, align 8
  %cppVar_621 = alloca i8, align 1
  %cppVar_623 = alloca i64, align 8
  %cppVar_624 = alloca i8, align 1
  %cppVar_652 = alloca i64, align 8
  %cppVar_653 = alloca i8, align 1
  %cppVar_626 = alloca i64, align 8
  %cppVar_627 = alloca i8, align 1
  %cppVar_628 = alloca i8, align 1
  %cppVar_630 = alloca i64, align 8
  %cppVar_631 = alloca i8, align 1
  %cppVar_632 = alloca i8, align 1
  %cppVar_634 = alloca i64, align 8
  %cppVar_635 = alloca i8, align 1
  %cppVar_636 = alloca i8, align 1
  %cppVar_648 = alloca i64, align 8
  %cppVar_649 = alloca i8, align 1
  %cppVar_650 = alloca i8, align 1
  %cppVar_641 = alloca i64, align 8
  %cppVar_642 = alloca i64, align 8
  %cppVar_643 = alloca i64, align 8
  %cppVar_644 = alloca i64, align 8
  %cppVar_645 = alloca i64, align 8
  %cppVar_638 = alloca i64, align 8
  %cppVar_639 = alloca i8, align 1
  %cppVar_637 = alloca i64, align 8
  %cppVar_646 = alloca i64, align 8
  %cppVar_647 = alloca i64, align 8
  %cppVar_633 = alloca i64, align 8
  %cppVar_629 = alloca i64, align 8
  %cppVar_625 = alloca i64, align 8
  %cppVar_651 = alloca i64, align 8
  %cppVar_622 = alloca i64, align 8
  %cppVar_619 = alloca i64, align 8
  %cppVar_640 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_621, align 1
  %18 = load i8* %cppVar_621, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_619, align 8
  br label %168

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_624, align 1
  %28 = load i8* %cppVar_624, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %151

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %32 = load i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %cppVar_627, align 1
  %35 = load i8* %cppVar_624, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %40

; <label>:37                                      ; preds = %30
  %38 = load i8* %cppVar_627, align 1
  %39 = trunc i8 %38 to i1
  br label %40

; <label>:40                                      ; preds = %37, %30
  %41 = phi i1 [ false, %30 ], [ %39, %37 ]
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %cppVar_628, align 1
  %43 = load i8* %cppVar_628, align 1
  %44 = trunc i8 %43 to i1
  br i1 %44, label %45, label %48

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %47 = load i64* %46, align 8
  store i64 %47, i64* %cppVar_625, align 8
  br label %149

; <label>:48                                      ; preds = %40
  %49 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %50, 1
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_631, align 1
  %53 = load i8* %cppVar_624, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %48
  %56 = load i8* %cppVar_631, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %48
  %59 = phi i1 [ false, %48 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_632, align 1
  %61 = load i8* %cppVar_632, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %66

; <label>:63                                      ; preds = %58
  %64 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %65 = load i64* %64, align 8
  store i64 %65, i64* %cppVar_629, align 8
  br label %147

; <label>:66                                      ; preds = %58
  %67 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %68 = load i64* %67, align 8
  %69 = icmp eq i64 %68, 2
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_635, align 1
  %71 = load i8* %cppVar_624, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %76

; <label>:73                                      ; preds = %66
  %74 = load i8* %cppVar_635, align 1
  %75 = trunc i8 %74 to i1
  br label %76

; <label>:76                                      ; preds = %73, %66
  %77 = phi i1 [ false, %66 ], [ %75, %73 ]
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %cppVar_636, align 1
  %79 = load i8* %cppVar_636, align 1
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %122

; <label>:81                                      ; preds = %76
  %82 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %83 = load i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %cppVar_639, align 1
  %86 = load i8* %cppVar_639, align 1
  %87 = trunc i8 %86 to i1
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %81
  store i64 0, i64* %cppVar_637, align 8
  br label %92

; <label>:89                                      ; preds = %81
  %90 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %91 = load i64* %90, align 8
  store i64 %91, i64* %cppVar_637, align 8
  br label %92

; <label>:92                                      ; preds = %89, %88
  %93 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %94 = load i64* %93, align 8
  %95 = ashr i64 %94, 0
  %96 = getelementptr inbounds %class.model_train* %13, i32 0, i32 40
  %97 = load i64* %96, align 8
  %98 = and i64 %95, %97
  store i64 %98, i64* %cppVar_641, align 8
  %99 = getelementptr inbounds %class.model_train* %13, i32 0, i32 32
  %100 = load i64* %cppVar_641, align 8
  %101 = call i64 @_ZN8type_memItLj8EE2rdEl(%1* %99, i64 %100)
  store i64 %101, i64* %cppVar_642, align 8
  %102 = load i64* %cppVar_642, align 8
  %103 = call zeroext i16 @_Z10to_int_expl(i64 %102)
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %cppVar_643, align 8
  %105 = load i64* %cppVar_643, align 8
  %106 = ashr i64 %105, 0
  %107 = getelementptr inbounds %class.model_train* %13, i32 0, i32 41
  %108 = load i64* %107, align 8
  %109 = and i64 %106, %108
  store i64 %109, i64* %cppVar_644, align 8
  %110 = load i64* %cppVar_644, align 8
  %111 = getelementptr inbounds %class.model_train* %13, i32 0, i32 41
  %112 = load i64* %111, align 8
  %113 = and i64 %110, %112
  store i64 %113, i64* %cppVar_645, align 8
  %114 = load i64* %cppVar_637, align 8
  %115 = load i64* %cppVar_645, align 8
  %116 = add nsw i64 %114, %115
  store i64 %116, i64* %cppVar_646, align 8
  %117 = load i64* %cppVar_646, align 8
  %118 = getelementptr inbounds %class.model_train* %13, i32 0, i32 42
  %119 = load i64* %118, align 8
  %120 = and i64 %117, %119
  store i64 %120, i64* %cppVar_646, align 8
  %121 = load i64* %cppVar_646, align 8
  store i64 %121, i64* %cppVar_633, align 8
  br label %145

; <label>:122                                     ; preds = %76
  %123 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %124 = load i64* %123, align 8
  %125 = icmp eq i64 %124, 3
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %cppVar_649, align 1
  %127 = load i8* %cppVar_624, align 1
  %128 = trunc i8 %127 to i1
  br i1 %128, label %129, label %132

; <label>:129                                     ; preds = %122
  %130 = load i8* %cppVar_649, align 1
  %131 = trunc i8 %130 to i1
  br label %132

; <label>:132                                     ; preds = %129, %122
  %133 = phi i1 [ false, %122 ], [ %131, %129 ]
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %cppVar_650, align 1
  %135 = load i8* %cppVar_650, align 1
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %140

; <label>:137                                     ; preds = %132
  %138 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %139 = load i64* %138, align 8
  store i64 %139, i64* %cppVar_647, align 8
  br label %143

; <label>:140                                     ; preds = %132
  %141 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %142 = load i64* %141, align 8
  store i64 %142, i64* %cppVar_647, align 8
  br label %143

; <label>:143                                     ; preds = %140, %137
  %144 = load i64* %cppVar_647, align 8
  store i64 %144, i64* %cppVar_633, align 8
  br label %145

; <label>:145                                     ; preds = %143, %92
  %146 = load i64* %cppVar_633, align 8
  store i64 %146, i64* %cppVar_629, align 8
  br label %147

; <label>:147                                     ; preds = %145, %63
  %148 = load i64* %cppVar_629, align 8
  store i64 %148, i64* %cppVar_625, align 8
  br label %149

; <label>:149                                     ; preds = %147, %45
  %150 = load i64* %cppVar_625, align 8
  store i64 %150, i64* %cppVar_622, align 8
  br label %166

; <label>:151                                     ; preds = %23
  %152 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %153 = load i64* %152, align 8
  %154 = icmp eq i64 %153, 2
  %155 = zext i1 %154 to i8
  store i8 %155, i8* %cppVar_653, align 1
  %156 = load i8* %cppVar_653, align 1
  %157 = trunc i8 %156 to i1
  br i1 %157, label %158, label %161

; <label>:158                                     ; preds = %151
  %159 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %160 = load i64* %159, align 8
  store i64 %160, i64* %cppVar_651, align 8
  br label %164

; <label>:161                                     ; preds = %151
  %162 = getelementptr inbounds %class.model_train* %13, i32 0, i32 24
  %163 = load i64* %162, align 8
  store i64 %163, i64* %cppVar_651, align 8
  br label %164

; <label>:164                                     ; preds = %161, %158
  %165 = load i64* %cppVar_651, align 8
  store i64 %165, i64* %cppVar_622, align 8
  br label %166

; <label>:166                                     ; preds = %164, %149
  %167 = load i64* %cppVar_622, align 8
  store i64 %167, i64* %cppVar_619, align 8
  br label %168

; <label>:168                                     ; preds = %166, %20
  %169 = load i64* %cppVar_619, align 8
  ret i64 %169
}

define i64 @_ZN11model_train24cppUpdateFun_train_h_cntElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_656 = alloca i64, align 8
  %cppVar_657 = alloca i8, align 1
  %cppVar_668 = alloca i64, align 8
  %cppVar_669 = alloca i8, align 1
  %cppVar_691 = alloca i64, align 8
  %cppVar_692 = alloca i8, align 1
  %cppVar_698 = alloca i64, align 8
  %cppVar_699 = alloca i8, align 1
  %cppVar_659 = alloca i8, align 1
  %cppVar_661 = alloca i64, align 8
  %cppVar_662 = alloca i64, align 8
  %cppVar_663 = alloca i8, align 1
  %cppVar_665 = alloca i64, align 8
  %cppVar_666 = alloca i64, align 8
  %cppVar_660 = alloca i64, align 8
  %cppVar_658 = alloca i64, align 8
  %cppVar_675 = alloca i8, align 1
  %cppVar_671 = alloca i64, align 8
  %cppVar_672 = alloca i8, align 1
  %cppVar_673 = alloca i8, align 1
  %cppVar_679 = alloca i64, align 8
  %cppVar_680 = alloca i8, align 1
  %cppVar_681 = alloca i8, align 1
  %cppVar_683 = alloca i64, align 8
  %cppVar_684 = alloca i8, align 1
  %cppVar_685 = alloca i8, align 1
  %cppVar_687 = alloca i64, align 8
  %cppVar_688 = alloca i8, align 1
  %cppVar_689 = alloca i8, align 1
  %cppVar_676 = alloca i64, align 8
  %cppVar_677 = alloca i64, align 8
  %cppVar_674 = alloca i64, align 8
  %cppVar_686 = alloca i64, align 8
  %cppVar_682 = alloca i64, align 8
  %cppVar_678 = alloca i64, align 8
  %cppVar_670 = alloca i64, align 8
  %cppVar_694 = alloca i8, align 1
  %cppVar_695 = alloca i64, align 8
  %cppVar_696 = alloca i64, align 8
  %cppVar_693 = alloca i64, align 8
  %cppVar_701 = alloca i8, align 1
  %cppVar_702 = alloca i64, align 8
  %cppVar_703 = alloca i64, align 8
  %cppVar_700 = alloca i64, align 8
  %cppVar_697 = alloca i64, align 8
  %cppVar_690 = alloca i64, align 8
  %cppVar_667 = alloca i64, align 8
  %cppVar_655 = alloca i64, align 8
  %cppVar_664 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_657, align 1
  %18 = load i8* %cppVar_657, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %61

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %cppVar_659, align 1
  %27 = load i8* %cppVar_659, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %29, label %56

; <label>:29                                      ; preds = %20
  %30 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %31 = load i64* %30, align 8
  %32 = sub nsw i64 %31, 1
  store i64 %32, i64* %cppVar_662, align 8
  %33 = load i64* %cppVar_662, align 8
  %34 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %35 = load i64* %34, align 8
  %36 = and i64 %33, %35
  store i64 %36, i64* %cppVar_662, align 8
  %37 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %38 = load i64* %37, align 8
  %39 = load i64* %cppVar_662, align 8
  %40 = icmp eq i64 %38, %39
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %cppVar_663, align 1
  %42 = load i8* %cppVar_663, align 1
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %29
  store i64 0, i64* %cppVar_660, align 8
  br label %54

; <label>:45                                      ; preds = %29
  %46 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %47 = load i64* %46, align 8
  %48 = add nsw i64 %47, 1
  store i64 %48, i64* %cppVar_666, align 8
  %49 = load i64* %cppVar_666, align 8
  %50 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %51 = load i64* %50, align 8
  %52 = and i64 %49, %51
  store i64 %52, i64* %cppVar_666, align 8
  %53 = load i64* %cppVar_666, align 8
  store i64 %53, i64* %cppVar_660, align 8
  br label %54

; <label>:54                                      ; preds = %45, %44
  %55 = load i64* %cppVar_660, align 8
  store i64 %55, i64* %cppVar_658, align 8
  br label %59

; <label>:56                                      ; preds = %20
  %57 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %58 = load i64* %57, align 8
  store i64 %58, i64* %cppVar_658, align 8
  br label %59

; <label>:59                                      ; preds = %56, %54
  %60 = load i64* %cppVar_658, align 8
  store i64 %60, i64* %cppVar_655, align 8
  br label %234

; <label>:61                                      ; preds = %0
  %62 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %63 = load i64* %62, align 8
  %64 = icmp eq i64 %63, 1
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %cppVar_669, align 1
  %66 = load i8* %cppVar_669, align 1
  %67 = trunc i8 %66 to i1
  br i1 %67, label %68, label %169

; <label>:68                                      ; preds = %61
  %69 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %70 = load i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %cppVar_672, align 1
  %73 = load i8* %cppVar_669, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %78

; <label>:75                                      ; preds = %68
  %76 = load i8* %cppVar_672, align 1
  %77 = trunc i8 %76 to i1
  br label %78

; <label>:78                                      ; preds = %75, %68
  %79 = phi i1 [ false, %68 ], [ %77, %75 ]
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %cppVar_673, align 1
  %81 = load i8* %cppVar_673, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %104

; <label>:83                                      ; preds = %78
  %84 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %85 = load i64* %84, align 8
  %86 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %87 = load i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %cppVar_675, align 1
  %90 = load i8* %cppVar_675, align 1
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %83
  store i64 0, i64* %cppVar_674, align 8
  br label %102

; <label>:93                                      ; preds = %83
  %94 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %95 = load i64* %94, align 8
  %96 = add nsw i64 %95, 1
  store i64 %96, i64* %cppVar_677, align 8
  %97 = load i64* %cppVar_677, align 8
  %98 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %99 = load i64* %98, align 8
  %100 = and i64 %97, %99
  store i64 %100, i64* %cppVar_677, align 8
  %101 = load i64* %cppVar_677, align 8
  store i64 %101, i64* %cppVar_674, align 8
  br label %102

; <label>:102                                     ; preds = %93, %92
  %103 = load i64* %cppVar_674, align 8
  store i64 %103, i64* %cppVar_670, align 8
  br label %167

; <label>:104                                     ; preds = %78
  %105 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %106 = load i64* %105, align 8
  %107 = icmp eq i64 %106, 1
  %108 = zext i1 %107 to i8
  store i8 %108, i8* %cppVar_680, align 1
  %109 = load i8* %cppVar_669, align 1
  %110 = trunc i8 %109 to i1
  br i1 %110, label %111, label %114

; <label>:111                                     ; preds = %104
  %112 = load i8* %cppVar_680, align 1
  %113 = trunc i8 %112 to i1
  br label %114

; <label>:114                                     ; preds = %111, %104
  %115 = phi i1 [ false, %104 ], [ %113, %111 ]
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %cppVar_681, align 1
  %117 = load i8* %cppVar_681, align 1
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %122

; <label>:119                                     ; preds = %114
  %120 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %121 = load i64* %120, align 8
  store i64 %121, i64* %cppVar_678, align 8
  br label %165

; <label>:122                                     ; preds = %114
  %123 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %124 = load i64* %123, align 8
  %125 = icmp eq i64 %124, 2
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %cppVar_684, align 1
  %127 = load i8* %cppVar_669, align 1
  %128 = trunc i8 %127 to i1
  br i1 %128, label %129, label %132

; <label>:129                                     ; preds = %122
  %130 = load i8* %cppVar_684, align 1
  %131 = trunc i8 %130 to i1
  br label %132

; <label>:132                                     ; preds = %129, %122
  %133 = phi i1 [ false, %122 ], [ %131, %129 ]
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %cppVar_685, align 1
  %135 = load i8* %cppVar_685, align 1
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %140

; <label>:137                                     ; preds = %132
  %138 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %139 = load i64* %138, align 8
  store i64 %139, i64* %cppVar_682, align 8
  br label %163

; <label>:140                                     ; preds = %132
  %141 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %142 = load i64* %141, align 8
  %143 = icmp eq i64 %142, 3
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %cppVar_688, align 1
  %145 = load i8* %cppVar_669, align 1
  %146 = trunc i8 %145 to i1
  br i1 %146, label %147, label %150

; <label>:147                                     ; preds = %140
  %148 = load i8* %cppVar_688, align 1
  %149 = trunc i8 %148 to i1
  br label %150

; <label>:150                                     ; preds = %147, %140
  %151 = phi i1 [ false, %140 ], [ %149, %147 ]
  %152 = zext i1 %151 to i8
  store i8 %152, i8* %cppVar_689, align 1
  %153 = load i8* %cppVar_689, align 1
  %154 = trunc i8 %153 to i1
  br i1 %154, label %155, label %158

; <label>:155                                     ; preds = %150
  %156 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %157 = load i64* %156, align 8
  store i64 %157, i64* %cppVar_686, align 8
  br label %161

; <label>:158                                     ; preds = %150
  %159 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %160 = load i64* %159, align 8
  store i64 %160, i64* %cppVar_686, align 8
  br label %161

; <label>:161                                     ; preds = %158, %155
  %162 = load i64* %cppVar_686, align 8
  store i64 %162, i64* %cppVar_682, align 8
  br label %163

; <label>:163                                     ; preds = %161, %137
  %164 = load i64* %cppVar_682, align 8
  store i64 %164, i64* %cppVar_678, align 8
  br label %165

; <label>:165                                     ; preds = %163, %119
  %166 = load i64* %cppVar_678, align 8
  store i64 %166, i64* %cppVar_670, align 8
  br label %167

; <label>:167                                     ; preds = %165, %102
  %168 = load i64* %cppVar_670, align 8
  store i64 %168, i64* %cppVar_667, align 8
  br label %232

; <label>:169                                     ; preds = %61
  %170 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %171 = load i64* %170, align 8
  %172 = icmp eq i64 %171, 3
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %cppVar_692, align 1
  %174 = load i8* %cppVar_692, align 1
  %175 = trunc i8 %174 to i1
  br i1 %175, label %176, label %197

; <label>:176                                     ; preds = %169
  %177 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %178 = load i64* %177, align 8
  %179 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %180 = load i64* %179, align 8
  %181 = icmp eq i64 %178, %180
  %182 = zext i1 %181 to i8
  store i8 %182, i8* %cppVar_694, align 1
  %183 = load i8* %cppVar_694, align 1
  %184 = trunc i8 %183 to i1
  br i1 %184, label %185, label %186

; <label>:185                                     ; preds = %176
  store i64 0, i64* %cppVar_693, align 8
  br label %195

; <label>:186                                     ; preds = %176
  %187 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %188 = load i64* %187, align 8
  %189 = add nsw i64 %188, 1
  store i64 %189, i64* %cppVar_696, align 8
  %190 = load i64* %cppVar_696, align 8
  %191 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %192 = load i64* %191, align 8
  %193 = and i64 %190, %192
  store i64 %193, i64* %cppVar_696, align 8
  %194 = load i64* %cppVar_696, align 8
  store i64 %194, i64* %cppVar_693, align 8
  br label %195

; <label>:195                                     ; preds = %186, %185
  %196 = load i64* %cppVar_693, align 8
  store i64 %196, i64* %cppVar_690, align 8
  br label %230

; <label>:197                                     ; preds = %169
  %198 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %199 = load i64* %198, align 8
  %200 = icmp eq i64 %199, 2
  %201 = zext i1 %200 to i8
  store i8 %201, i8* %cppVar_699, align 1
  %202 = load i8* %cppVar_699, align 1
  %203 = trunc i8 %202 to i1
  br i1 %203, label %204, label %225

; <label>:204                                     ; preds = %197
  %205 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %206 = load i64* %205, align 8
  %207 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %208 = load i64* %207, align 8
  %209 = icmp eq i64 %206, %208
  %210 = zext i1 %209 to i8
  store i8 %210, i8* %cppVar_701, align 1
  %211 = load i8* %cppVar_701, align 1
  %212 = trunc i8 %211 to i1
  br i1 %212, label %213, label %214

; <label>:213                                     ; preds = %204
  store i64 0, i64* %cppVar_700, align 8
  br label %223

; <label>:214                                     ; preds = %204
  %215 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %216 = load i64* %215, align 8
  %217 = add nsw i64 %216, 1
  store i64 %217, i64* %cppVar_703, align 8
  %218 = load i64* %cppVar_703, align 8
  %219 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %220 = load i64* %219, align 8
  %221 = and i64 %218, %220
  store i64 %221, i64* %cppVar_703, align 8
  %222 = load i64* %cppVar_703, align 8
  store i64 %222, i64* %cppVar_700, align 8
  br label %223

; <label>:223                                     ; preds = %214, %213
  %224 = load i64* %cppVar_700, align 8
  store i64 %224, i64* %cppVar_697, align 8
  br label %228

; <label>:225                                     ; preds = %197
  %226 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %227 = load i64* %226, align 8
  store i64 %227, i64* %cppVar_697, align 8
  br label %228

; <label>:228                                     ; preds = %225, %223
  %229 = load i64* %cppVar_697, align 8
  store i64 %229, i64* %cppVar_690, align 8
  br label %230

; <label>:230                                     ; preds = %228, %195
  %231 = load i64* %cppVar_690, align 8
  store i64 %231, i64* %cppVar_667, align 8
  br label %232

; <label>:232                                     ; preds = %230, %167
  %233 = load i64* %cppVar_667, align 8
  store i64 %233, i64* %cppVar_655, align 8
  br label %234

; <label>:234                                     ; preds = %232, %59
  %235 = load i64* %cppVar_655, align 8
  ret i64 %235
}

define i64 @_ZN11model_train29cppUpdateFun_train_input_doneElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_706 = alloca i64, align 8
  %cppVar_707 = alloca i8, align 1
  %cppVar_709 = alloca i64, align 8
  %cppVar_710 = alloca i8, align 1
  %cppVar_712 = alloca i64, align 8
  %cppVar_713 = alloca i8, align 1
  %cppVar_718 = alloca i64, align 8
  %cppVar_715 = alloca i8, align 1
  %cppVar_716 = alloca i8, align 1
  %cppVar_717 = alloca i8, align 1
  %cppVar_714 = alloca i64, align 8
  %cppVar_711 = alloca i64, align 8
  %cppVar_708 = alloca i64, align 8
  %cppVar_705 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_707, align 1
  %18 = load i8* %cppVar_707, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 26
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_705, align 8
  br label %76

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_710, align 1
  %28 = load i8* %cppVar_710, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 26
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_708, align 8
  br label %74

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_713, align 1
  %38 = load i8* %cppVar_713, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %69

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %44 = load i64* %43, align 8
  %45 = icmp eq i64 %42, %44
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %cppVar_715, align 1
  %47 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %48 = load i64* %47, align 8
  %49 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_716, align 1
  %53 = load i8* %cppVar_715, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %40
  %56 = load i8* %cppVar_716, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %40
  %59 = phi i1 [ false, %40 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_717, align 1
  %61 = load i8* %cppVar_717, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %58
  store i64 0, i64* %cppVar_714, align 8
  br label %67

; <label>:64                                      ; preds = %58
  %65 = getelementptr inbounds %class.model_train* %13, i32 0, i32 26
  %66 = load i64* %65, align 8
  store i64 %66, i64* %cppVar_714, align 8
  br label %67

; <label>:67                                      ; preds = %64, %63
  %68 = load i64* %cppVar_714, align 8
  store i64 %68, i64* %cppVar_711, align 8
  br label %72

; <label>:69                                      ; preds = %33
  %70 = getelementptr inbounds %class.model_train* %13, i32 0, i32 26
  %71 = load i64* %70, align 8
  store i64 %71, i64* %cppVar_711, align 8
  br label %72

; <label>:72                                      ; preds = %69, %67
  %73 = load i64* %cppVar_711, align 8
  store i64 %73, i64* %cppVar_708, align 8
  br label %74

; <label>:74                                      ; preds = %72, %30
  %75 = load i64* %cppVar_708, align 8
  store i64 %75, i64* %cppVar_705, align 8
  br label %76

; <label>:76                                      ; preds = %74, %20
  %77 = load i64* %cppVar_705, align 8
  ret i64 %77
}

define i64 @_ZN11model_train22cppUpdateFun_train_maxElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_721 = alloca i64, align 8
  %cppVar_722 = alloca i8, align 1
  %cppVar_724 = alloca i64, align 8
  %cppVar_725 = alloca i8, align 1
  %cppVar_775 = alloca i64, align 8
  %cppVar_776 = alloca i8, align 1
  %cppVar_742 = alloca i64, align 8
  %cppVar_743 = alloca i64, align 8
  %cppVar_744 = alloca i64, align 8
  %cppVar_731 = alloca i8, align 1
  %cppVar_727 = alloca i64, align 8
  %cppVar_728 = alloca i8, align 1
  %cppVar_729 = alloca i8, align 1
  %cppVar_758 = alloca i64, align 8
  %cppVar_759 = alloca i8, align 1
  %cppVar_760 = alloca i8, align 1
  %cppVar_767 = alloca i64, align 8
  %cppVar_768 = alloca i8, align 1
  %cppVar_769 = alloca i8, align 1
  %cppVar_771 = alloca i64, align 8
  %cppVar_772 = alloca i8, align 1
  %cppVar_773 = alloca i8, align 1
  %cppVar_734 = alloca i64, align 8
  %cppVar_735 = alloca i8, align 1
  %cppVar_733 = alloca i64, align 8
  %cppVar_738 = alloca i64, align 8
  %cppVar_739 = alloca i64, align 8
  %cppVar_740 = alloca i64, align 8
  %cppVar_741 = alloca i8, align 1
  %cppVar_745 = alloca i64, align 8
  %cppVar_746 = alloca i64, align 8
  %cppVar_747 = alloca i64, align 8
  %cppVar_748 = alloca i64, align 8
  %cppVar_749 = alloca i64, align 8
  %cppVar_737 = alloca i64, align 8
  %cppVar_750 = alloca i64, align 8
  %cppVar_752 = alloca i64, align 8
  %cppVar_753 = alloca i8, align 1
  %cppVar_754 = alloca i64, align 8
  %cppVar_755 = alloca i64, align 8
  %cppVar_751 = alloca i64, align 8
  %cppVar_756 = alloca i8, align 1
  %cppVar_732 = alloca i64, align 8
  %cppVar_730 = alloca i64, align 8
  %cppVar_764 = alloca i64, align 8
  %cppVar_762 = alloca i64, align 8
  %cppVar_763 = alloca i8, align 1
  %cppVar_765 = alloca i64, align 8
  %cppVar_761 = alloca i64, align 8
  %cppVar_770 = alloca i64, align 8
  %cppVar_766 = alloca i64, align 8
  %cppVar_757 = alloca i64, align 8
  %cppVar_726 = alloca i64, align 8
  %cppVar_774 = alloca i64, align 8
  %cppVar_723 = alloca i64, align 8
  %cppVar_720 = alloca i64, align 8
  %cppVar_736 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_722, align 1
  %18 = load i8* %cppVar_722, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_720, align 8
  br label %296

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_725, align 1
  %28 = load i8* %cppVar_725, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %279

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %32 = load i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %cppVar_728, align 1
  %35 = load i8* %cppVar_725, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %40

; <label>:37                                      ; preds = %30
  %38 = load i8* %cppVar_728, align 1
  %39 = trunc i8 %38 to i1
  br label %40

; <label>:40                                      ; preds = %37, %30
  %41 = phi i1 [ false, %30 ], [ %39, %37 ]
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %cppVar_729, align 1
  %43 = load i8* %cppVar_729, align 1
  %44 = trunc i8 %43 to i1
  br i1 %44, label %45, label %196

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %47 = load i64* %46, align 8
  %48 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %49 = load i64* %48, align 8
  %50 = icmp eq i64 %47, %49
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %cppVar_731, align 1
  %52 = load i8* %cppVar_731, align 1
  %53 = trunc i8 %52 to i1
  br i1 %53, label %54, label %191

; <label>:54                                      ; preds = %45
  %55 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %56 = load i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %cppVar_735, align 1
  %59 = load i8* %cppVar_735, align 1
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %54
  store i64 0, i64* %cppVar_733, align 8
  br label %65

; <label>:62                                      ; preds = %54
  %63 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %64 = load i64* %63, align 8
  store i64 %64, i64* %cppVar_733, align 8
  br label %65

; <label>:65                                      ; preds = %62, %61
  %66 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %67 = load i64* %66, align 8
  %68 = ashr i64 %67, 0
  %69 = getelementptr inbounds %class.model_train* %13, i32 0, i32 43
  %70 = load i64* %69, align 8
  %71 = and i64 %68, %70
  store i64 %71, i64* %cppVar_738, align 8
  %72 = getelementptr inbounds %class.model_train* %13, i32 0, i32 4
  %73 = load i64* %cppVar_738, align 8
  %74 = call i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %72, i64 %73)
  store i64 %74, i64* %cppVar_739, align 8
  %75 = load i64* %cppVar_739, align 8
  %76 = icmp eq i64 %75, 1
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %cppVar_741, align 1
  %78 = load i8* %cppVar_741, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %132

; <label>:80                                      ; preds = %65
  %81 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %82 = load i64* %81, align 8
  %83 = mul nsw i64 101, %82
  store i64 %83, i64* %cppVar_743, align 8
  %84 = load i64* %cppVar_743, align 8
  %85 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %86 = load i64* %85, align 8
  %87 = and i64 %84, %86
  store i64 %87, i64* %cppVar_743, align 8
  %88 = load i64* %cppVar_743, align 8
  %89 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %90 = load i64* %89, align 8
  %91 = add nsw i64 %88, %90
  store i64 %91, i64* %cppVar_744, align 8
  %92 = load i64* %cppVar_744, align 8
  %93 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %94 = load i64* %93, align 8
  %95 = and i64 %92, %94
  store i64 %95, i64* %cppVar_744, align 8
  %96 = getelementptr inbounds %class.model_train* %13, i32 0, i32 3
  %97 = load i64* %cppVar_744, align 8
  %98 = call i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %96, i64 %97)
  store i64 %98, i64* %cppVar_745, align 8
  %99 = load i64* %cppVar_745, align 8
  %100 = ashr i64 %99, 1
  %101 = getelementptr inbounds %class.model_train* %13, i32 0, i32 43
  %102 = load i64* %101, align 8
  %103 = and i64 %100, %102
  store i64 %103, i64* %cppVar_746, align 8
  %104 = load i64* %cppVar_746, align 8
  %105 = getelementptr inbounds %class.model_train* %13, i32 0, i32 47
  %106 = load i64* %105, align 8
  %107 = and i64 %104, %106
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %114

; <label>:109                                     ; preds = %80
  %110 = load i64* %cppVar_746, align 8
  %111 = getelementptr inbounds %class.model_train* %13, i32 0, i32 49
  %112 = load i64* %111, align 8
  %113 = or i64 %110, %112
  br label %116

; <label>:114                                     ; preds = %80
  %115 = load i64* %cppVar_746, align 8
  br label %116

; <label>:116                                     ; preds = %114, %109
  %117 = phi i64 [ %113, %109 ], [ %115, %114 ]
  store i64 %117, i64* %cppVar_747, align 8
  %118 = load i64* %cppVar_745, align 8
  %119 = ashr i64 %118, 0
  %120 = getelementptr inbounds %class.model_train* %13, i32 0, i32 38
  %121 = load i64* %120, align 8
  %122 = and i64 %119, %121
  store i64 %122, i64* %cppVar_748, align 8
  %123 = load i64* %cppVar_747, align 8
  %124 = shl i64 %123, 1
  %125 = load i64* %cppVar_748, align 8
  %126 = or i64 %124, %125
  store i64 %126, i64* %cppVar_749, align 8
  %127 = load i64* %cppVar_749, align 8
  %128 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %129 = load i64* %128, align 8
  %130 = and i64 %127, %129
  store i64 %130, i64* %cppVar_749, align 8
  %131 = load i64* %cppVar_749, align 8
  store i64 %131, i64* %cppVar_737, align 8
  br label %133

; <label>:132                                     ; preds = %65
  store i64 0, i64* %cppVar_737, align 8
  br label %133

; <label>:133                                     ; preds = %132, %116
  %134 = load i64* %cppVar_733, align 8
  %135 = load i64* %cppVar_737, align 8
  %136 = add nsw i64 %134, %135
  store i64 %136, i64* %cppVar_750, align 8
  %137 = load i64* %cppVar_750, align 8
  %138 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %139 = load i64* %138, align 8
  %140 = and i64 %137, %139
  store i64 %140, i64* %cppVar_750, align 8
  %141 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %142 = load i64* %141, align 8
  %143 = icmp eq i64 %142, 0
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %cppVar_753, align 1
  %145 = load i8* %cppVar_753, align 1
  %146 = trunc i8 %145 to i1
  br i1 %146, label %147, label %149

; <label>:147                                     ; preds = %133
  store i64 -1000, i64* %cppVar_755, align 8
  %148 = load i64* %cppVar_755, align 8
  store i64 %148, i64* %cppVar_751, align 8
  br label %152

; <label>:149                                     ; preds = %133
  %150 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %151 = load i64* %150, align 8
  store i64 %151, i64* %cppVar_751, align 8
  br label %152

; <label>:152                                     ; preds = %149, %147
  %153 = load i64* %cppVar_750, align 8
  %154 = getelementptr inbounds %class.model_train* %13, i32 0, i32 46
  %155 = load i64* %154, align 8
  %156 = and i64 %153, %155
  %157 = icmp ne i64 %156, 0
  br i1 %157, label %158, label %163

; <label>:158                                     ; preds = %152
  %159 = load i64* %cppVar_750, align 8
  %160 = getelementptr inbounds %class.model_train* %13, i32 0, i32 48
  %161 = load i64* %160, align 8
  %162 = or i64 %159, %161
  br label %165

; <label>:163                                     ; preds = %152
  %164 = load i64* %cppVar_750, align 8
  br label %165

; <label>:165                                     ; preds = %163, %158
  %166 = phi i64 [ %162, %158 ], [ %164, %163 ]
  %167 = load i64* %cppVar_751, align 8
  %168 = getelementptr inbounds %class.model_train* %13, i32 0, i32 46
  %169 = load i64* %168, align 8
  %170 = and i64 %167, %169
  %171 = icmp ne i64 %170, 0
  br i1 %171, label %172, label %177

; <label>:172                                     ; preds = %165
  %173 = load i64* %cppVar_751, align 8
  %174 = getelementptr inbounds %class.model_train* %13, i32 0, i32 48
  %175 = load i64* %174, align 8
  %176 = or i64 %173, %175
  br label %179

; <label>:177                                     ; preds = %165
  %178 = load i64* %cppVar_751, align 8
  br label %179

; <label>:179                                     ; preds = %177, %172
  %180 = phi i64 [ %176, %172 ], [ %178, %177 ]
  %181 = icmp sgt i64 %166, %180
  %182 = zext i1 %181 to i8
  store i8 %182, i8* %cppVar_756, align 1
  %183 = load i8* %cppVar_756, align 1
  %184 = trunc i8 %183 to i1
  br i1 %184, label %185, label %187

; <label>:185                                     ; preds = %179
  %186 = load i64* %cppVar_750, align 8
  store i64 %186, i64* %cppVar_732, align 8
  br label %189

; <label>:187                                     ; preds = %179
  %188 = load i64* %cppVar_751, align 8
  store i64 %188, i64* %cppVar_732, align 8
  br label %189

; <label>:189                                     ; preds = %187, %185
  %190 = load i64* %cppVar_732, align 8
  store i64 %190, i64* %cppVar_730, align 8
  br label %194

; <label>:191                                     ; preds = %45
  %192 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %193 = load i64* %192, align 8
  store i64 %193, i64* %cppVar_730, align 8
  br label %194

; <label>:194                                     ; preds = %191, %189
  %195 = load i64* %cppVar_730, align 8
  store i64 %195, i64* %cppVar_726, align 8
  br label %277

; <label>:196                                     ; preds = %40
  %197 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %198 = load i64* %197, align 8
  %199 = icmp eq i64 %198, 1
  %200 = zext i1 %199 to i8
  store i8 %200, i8* %cppVar_759, align 1
  %201 = load i8* %cppVar_725, align 1
  %202 = trunc i8 %201 to i1
  br i1 %202, label %203, label %206

; <label>:203                                     ; preds = %196
  %204 = load i8* %cppVar_759, align 1
  %205 = trunc i8 %204 to i1
  br label %206

; <label>:206                                     ; preds = %203, %196
  %207 = phi i1 [ false, %196 ], [ %205, %203 ]
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %cppVar_760, align 1
  %209 = load i8* %cppVar_760, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %211, label %232

; <label>:211                                     ; preds = %206
  %212 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %213 = load i64* %212, align 8
  %214 = icmp eq i64 %213, 0
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %cppVar_763, align 1
  %216 = load i8* %cppVar_763, align 1
  %217 = trunc i8 %216 to i1
  br i1 %217, label %218, label %227

; <label>:218                                     ; preds = %211
  %219 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %220 = load i64* %219, align 8
  %221 = sub nsw i64 %220, 62
  store i64 %221, i64* %cppVar_765, align 8
  %222 = load i64* %cppVar_765, align 8
  %223 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %224 = load i64* %223, align 8
  %225 = and i64 %222, %224
  store i64 %225, i64* %cppVar_765, align 8
  %226 = load i64* %cppVar_765, align 8
  store i64 %226, i64* %cppVar_761, align 8
  br label %230

; <label>:227                                     ; preds = %211
  %228 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %229 = load i64* %228, align 8
  store i64 %229, i64* %cppVar_761, align 8
  br label %230

; <label>:230                                     ; preds = %227, %218
  %231 = load i64* %cppVar_761, align 8
  store i64 %231, i64* %cppVar_757, align 8
  br label %275

; <label>:232                                     ; preds = %206
  %233 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %234 = load i64* %233, align 8
  %235 = icmp eq i64 %234, 2
  %236 = zext i1 %235 to i8
  store i8 %236, i8* %cppVar_768, align 1
  %237 = load i8* %cppVar_725, align 1
  %238 = trunc i8 %237 to i1
  br i1 %238, label %239, label %242

; <label>:239                                     ; preds = %232
  %240 = load i8* %cppVar_768, align 1
  %241 = trunc i8 %240 to i1
  br label %242

; <label>:242                                     ; preds = %239, %232
  %243 = phi i1 [ false, %232 ], [ %241, %239 ]
  %244 = zext i1 %243 to i8
  store i8 %244, i8* %cppVar_769, align 1
  %245 = load i8* %cppVar_769, align 1
  %246 = trunc i8 %245 to i1
  br i1 %246, label %247, label %250

; <label>:247                                     ; preds = %242
  %248 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %249 = load i64* %248, align 8
  store i64 %249, i64* %cppVar_766, align 8
  br label %273

; <label>:250                                     ; preds = %242
  %251 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %252 = load i64* %251, align 8
  %253 = icmp eq i64 %252, 3
  %254 = zext i1 %253 to i8
  store i8 %254, i8* %cppVar_772, align 1
  %255 = load i8* %cppVar_725, align 1
  %256 = trunc i8 %255 to i1
  br i1 %256, label %257, label %260

; <label>:257                                     ; preds = %250
  %258 = load i8* %cppVar_772, align 1
  %259 = trunc i8 %258 to i1
  br label %260

; <label>:260                                     ; preds = %257, %250
  %261 = phi i1 [ false, %250 ], [ %259, %257 ]
  %262 = zext i1 %261 to i8
  store i8 %262, i8* %cppVar_773, align 1
  %263 = load i8* %cppVar_773, align 1
  %264 = trunc i8 %263 to i1
  br i1 %264, label %265, label %268

; <label>:265                                     ; preds = %260
  %266 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %267 = load i64* %266, align 8
  store i64 %267, i64* %cppVar_770, align 8
  br label %271

; <label>:268                                     ; preds = %260
  %269 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %270 = load i64* %269, align 8
  store i64 %270, i64* %cppVar_770, align 8
  br label %271

; <label>:271                                     ; preds = %268, %265
  %272 = load i64* %cppVar_770, align 8
  store i64 %272, i64* %cppVar_766, align 8
  br label %273

; <label>:273                                     ; preds = %271, %247
  %274 = load i64* %cppVar_766, align 8
  store i64 %274, i64* %cppVar_757, align 8
  br label %275

; <label>:275                                     ; preds = %273, %230
  %276 = load i64* %cppVar_757, align 8
  store i64 %276, i64* %cppVar_726, align 8
  br label %277

; <label>:277                                     ; preds = %275, %194
  %278 = load i64* %cppVar_726, align 8
  store i64 %278, i64* %cppVar_723, align 8
  br label %294

; <label>:279                                     ; preds = %23
  %280 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %281 = load i64* %280, align 8
  %282 = icmp eq i64 %281, 2
  %283 = zext i1 %282 to i8
  store i8 %283, i8* %cppVar_776, align 1
  %284 = load i8* %cppVar_776, align 1
  %285 = trunc i8 %284 to i1
  br i1 %285, label %286, label %289

; <label>:286                                     ; preds = %279
  %287 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %288 = load i64* %287, align 8
  store i64 %288, i64* %cppVar_774, align 8
  br label %292

; <label>:289                                     ; preds = %279
  %290 = getelementptr inbounds %class.model_train* %13, i32 0, i32 27
  %291 = load i64* %290, align 8
  store i64 %291, i64* %cppVar_774, align 8
  br label %292

; <label>:292                                     ; preds = %289, %286
  %293 = load i64* %cppVar_774, align 8
  store i64 %293, i64* %cppVar_723, align 8
  br label %294

; <label>:294                                     ; preds = %292, %277
  %295 = load i64* %cppVar_723, align 8
  store i64 %295, i64* %cppVar_720, align 8
  br label %296

; <label>:296                                     ; preds = %294, %20
  %297 = load i64* %cppVar_720, align 8
  ret i64 %297
}

define i64 @_ZN11model_train22cppUpdateFun_train_sumElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_779 = alloca i64, align 8
  %cppVar_780 = alloca i8, align 1
  %cppVar_801 = alloca i64, align 8
  %cppVar_802 = alloca i8, align 1
  %cppVar_835 = alloca i64, align 8
  %cppVar_836 = alloca i8, align 1
  %cppVar_790 = alloca i64, align 8
  %cppVar_791 = alloca i64, align 8
  %cppVar_792 = alloca i64, align 8
  %cppVar_782 = alloca i64, align 8
  %cppVar_783 = alloca i8, align 1
  %cppVar_784 = alloca i64, align 8
  %cppVar_781 = alloca i64, align 8
  %cppVar_786 = alloca i64, align 8
  %cppVar_787 = alloca i64, align 8
  %cppVar_788 = alloca i64, align 8
  %cppVar_789 = alloca i8, align 1
  %cppVar_793 = alloca i64, align 8
  %cppVar_794 = alloca i64, align 8
  %cppVar_795 = alloca i64, align 8
  %cppVar_796 = alloca i64, align 8
  %cppVar_797 = alloca i64, align 8
  %cppVar_798 = alloca i64, align 8
  %cppVar_785 = alloca i64, align 8
  %cppVar_799 = alloca i64, align 8
  %cppVar_804 = alloca i64, align 8
  %cppVar_805 = alloca i8, align 1
  %cppVar_806 = alloca i8, align 1
  %cppVar_823 = alloca i64, align 8
  %cppVar_824 = alloca i8, align 1
  %cppVar_825 = alloca i8, align 1
  %cppVar_827 = alloca i64, align 8
  %cppVar_828 = alloca i8, align 1
  %cppVar_829 = alloca i8, align 1
  %cppVar_831 = alloca i64, align 8
  %cppVar_832 = alloca i8, align 1
  %cppVar_833 = alloca i8, align 1
  %cppVar_808 = alloca i64, align 8
  %cppVar_809 = alloca i8, align 1
  %cppVar_807 = alloca i64, align 8
  %cppVar_812 = alloca i64, align 8
  %cppVar_813 = alloca i64, align 8
  %cppVar_814 = alloca i64, align 8
  %cppVar_815 = alloca i8, align 1
  %cppVar_816 = alloca i64, align 8
  %cppVar_817 = alloca i64, align 8
  %cppVar_818 = alloca i64, align 8
  %cppVar_819 = alloca i64, align 8
  %cppVar_820 = alloca i64, align 8
  %cppVar_811 = alloca i64, align 8
  %cppVar_821 = alloca i64, align 8
  %cppVar_830 = alloca i64, align 8
  %cppVar_826 = alloca i64, align 8
  %cppVar_822 = alloca i64, align 8
  %cppVar_803 = alloca i64, align 8
  %cppVar_834 = alloca i64, align 8
  %cppVar_800 = alloca i64, align 8
  %cppVar_778 = alloca i64, align 8
  %cppVar_810 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_780, align 1
  %18 = load i8* %cppVar_780, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %108

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %22 = load i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %cppVar_783, align 1
  %25 = load i8* %cppVar_783, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %20
  store i64 0, i64* %cppVar_781, align 8
  br label %31

; <label>:28                                      ; preds = %20
  %29 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %30 = load i64* %29, align 8
  store i64 %30, i64* %cppVar_781, align 8
  br label %31

; <label>:31                                      ; preds = %28, %27
  %32 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %33 = load i64* %32, align 8
  %34 = ashr i64 %33, 0
  %35 = getelementptr inbounds %class.model_train* %13, i32 0, i32 45
  %36 = load i64* %35, align 8
  %37 = and i64 %34, %36
  store i64 %37, i64* %cppVar_786, align 8
  %38 = getelementptr inbounds %class.model_train* %13, i32 0, i32 0
  %39 = load i64* %cppVar_786, align 8
  %40 = call i64 @_ZN8type_memIhLj512EE2rdEl(%class.SysCArray1D* %38, i64 %39)
  store i64 %40, i64* %cppVar_787, align 8
  %41 = load i64* %cppVar_787, align 8
  %42 = icmp eq i64 %41, 1
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %cppVar_789, align 1
  %44 = load i8* %cppVar_789, align 1
  %45 = trunc i8 %44 to i1
  br i1 %45, label %46, label %98

; <label>:46                                      ; preds = %31
  %47 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %48 = load i64* %47, align 8
  %49 = mul nsw i64 101, %48
  store i64 %49, i64* %cppVar_791, align 8
  %50 = load i64* %cppVar_791, align 8
  %51 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %52 = load i64* %51, align 8
  %53 = and i64 %50, %52
  store i64 %53, i64* %cppVar_791, align 8
  %54 = load i64* %cppVar_791, align 8
  %55 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %56 = load i64* %55, align 8
  %57 = add nsw i64 %54, %56
  store i64 %57, i64* %cppVar_792, align 8
  %58 = load i64* %cppVar_792, align 8
  %59 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %60 = load i64* %59, align 8
  %61 = and i64 %58, %60
  store i64 %61, i64* %cppVar_792, align 8
  %62 = getelementptr inbounds %class.model_train* %13, i32 0, i32 3
  %63 = load i64* %cppVar_792, align 8
  %64 = call i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %62, i64 %63)
  store i64 %64, i64* %cppVar_793, align 8
  %65 = load i64* %cppVar_793, align 8
  %66 = ashr i64 %65, 1
  %67 = getelementptr inbounds %class.model_train* %13, i32 0, i32 43
  %68 = load i64* %67, align 8
  %69 = and i64 %66, %68
  store i64 %69, i64* %cppVar_794, align 8
  %70 = load i64* %cppVar_794, align 8
  %71 = getelementptr inbounds %class.model_train* %13, i32 0, i32 47
  %72 = load i64* %71, align 8
  %73 = and i64 %70, %72
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %80

; <label>:75                                      ; preds = %46
  %76 = load i64* %cppVar_794, align 8
  %77 = getelementptr inbounds %class.model_train* %13, i32 0, i32 49
  %78 = load i64* %77, align 8
  %79 = or i64 %76, %78
  br label %82

; <label>:80                                      ; preds = %46
  %81 = load i64* %cppVar_794, align 8
  br label %82

; <label>:82                                      ; preds = %80, %75
  %83 = phi i64 [ %79, %75 ], [ %81, %80 ]
  store i64 %83, i64* %cppVar_795, align 8
  %84 = load i64* %cppVar_793, align 8
  %85 = ashr i64 %84, 0
  %86 = getelementptr inbounds %class.model_train* %13, i32 0, i32 38
  %87 = load i64* %86, align 8
  %88 = and i64 %85, %87
  store i64 %88, i64* %cppVar_796, align 8
  %89 = load i64* %cppVar_795, align 8
  %90 = shl i64 %89, 1
  %91 = load i64* %cppVar_796, align 8
  %92 = or i64 %90, %91
  store i64 %92, i64* %cppVar_797, align 8
  %93 = load i64* %cppVar_797, align 8
  %94 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %95 = load i64* %94, align 8
  %96 = and i64 %93, %95
  store i64 %96, i64* %cppVar_797, align 8
  %97 = load i64* %cppVar_797, align 8
  store i64 %97, i64* %cppVar_785, align 8
  br label %99

; <label>:98                                      ; preds = %31
  store i64 0, i64* %cppVar_785, align 8
  br label %99

; <label>:99                                      ; preds = %98, %82
  %100 = load i64* %cppVar_781, align 8
  %101 = load i64* %cppVar_785, align 8
  %102 = add nsw i64 %100, %101
  store i64 %102, i64* %cppVar_799, align 8
  %103 = load i64* %cppVar_799, align 8
  %104 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %105 = load i64* %104, align 8
  %106 = and i64 %103, %105
  store i64 %106, i64* %cppVar_799, align 8
  %107 = load i64* %cppVar_799, align 8
  store i64 %107, i64* %cppVar_778, align 8
  br label %285

; <label>:108                                     ; preds = %0
  %109 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %110 = load i64* %109, align 8
  %111 = icmp eq i64 %110, 1
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %cppVar_802, align 1
  %113 = load i8* %cppVar_802, align 1
  %114 = trunc i8 %113 to i1
  br i1 %114, label %115, label %268

; <label>:115                                     ; preds = %108
  %116 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %117 = load i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %cppVar_805, align 1
  %120 = load i8* %cppVar_802, align 1
  %121 = trunc i8 %120 to i1
  br i1 %121, label %122, label %125

; <label>:122                                     ; preds = %115
  %123 = load i8* %cppVar_805, align 1
  %124 = trunc i8 %123 to i1
  br label %125

; <label>:125                                     ; preds = %122, %115
  %126 = phi i1 [ false, %115 ], [ %124, %122 ]
  %127 = zext i1 %126 to i8
  store i8 %127, i8* %cppVar_806, align 1
  %128 = load i8* %cppVar_806, align 1
  %129 = trunc i8 %128 to i1
  br i1 %129, label %130, label %203

; <label>:130                                     ; preds = %125
  %131 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %132 = load i64* %131, align 8
  %133 = icmp eq i64 %132, 0
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %cppVar_809, align 1
  %135 = load i8* %cppVar_809, align 1
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %138

; <label>:137                                     ; preds = %130
  store i64 0, i64* %cppVar_807, align 8
  br label %141

; <label>:138                                     ; preds = %130
  %139 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %140 = load i64* %139, align 8
  store i64 %140, i64* %cppVar_807, align 8
  br label %141

; <label>:141                                     ; preds = %138, %137
  %142 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %143 = load i64* %142, align 8
  %144 = ashr i64 %143, 0
  %145 = getelementptr inbounds %class.model_train* %13, i32 0, i32 43
  %146 = load i64* %145, align 8
  %147 = and i64 %144, %146
  store i64 %147, i64* %cppVar_812, align 8
  %148 = getelementptr inbounds %class.model_train* %13, i32 0, i32 4
  %149 = load i64* %cppVar_812, align 8
  %150 = call i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %148, i64 %149)
  store i64 %150, i64* %cppVar_813, align 8
  %151 = load i64* %cppVar_813, align 8
  %152 = icmp eq i64 %151, 1
  %153 = zext i1 %152 to i8
  store i8 %153, i8* %cppVar_815, align 1
  %154 = load i8* %cppVar_815, align 1
  %155 = trunc i8 %154 to i1
  br i1 %155, label %156, label %193

; <label>:156                                     ; preds = %141
  %157 = getelementptr inbounds %class.model_train* %13, i32 0, i32 3
  %158 = load i64* %cppVar_792, align 8
  %159 = call i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %157, i64 %158)
  store i64 %159, i64* %cppVar_816, align 8
  %160 = load i64* %cppVar_816, align 8
  %161 = ashr i64 %160, 1
  %162 = getelementptr inbounds %class.model_train* %13, i32 0, i32 43
  %163 = load i64* %162, align 8
  %164 = and i64 %161, %163
  store i64 %164, i64* %cppVar_817, align 8
  %165 = load i64* %cppVar_817, align 8
  %166 = getelementptr inbounds %class.model_train* %13, i32 0, i32 47
  %167 = load i64* %166, align 8
  %168 = and i64 %165, %167
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %175

; <label>:170                                     ; preds = %156
  %171 = load i64* %cppVar_817, align 8
  %172 = getelementptr inbounds %class.model_train* %13, i32 0, i32 49
  %173 = load i64* %172, align 8
  %174 = or i64 %171, %173
  br label %177

; <label>:175                                     ; preds = %156
  %176 = load i64* %cppVar_817, align 8
  br label %177

; <label>:177                                     ; preds = %175, %170
  %178 = phi i64 [ %174, %170 ], [ %176, %175 ]
  store i64 %178, i64* %cppVar_818, align 8
  %179 = load i64* %cppVar_816, align 8
  %180 = ashr i64 %179, 0
  %181 = getelementptr inbounds %class.model_train* %13, i32 0, i32 38
  %182 = load i64* %181, align 8
  %183 = and i64 %180, %182
  store i64 %183, i64* %cppVar_819, align 8
  %184 = load i64* %cppVar_818, align 8
  %185 = shl i64 %184, 1
  %186 = load i64* %cppVar_819, align 8
  %187 = or i64 %185, %186
  store i64 %187, i64* %cppVar_820, align 8
  %188 = load i64* %cppVar_820, align 8
  %189 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %190 = load i64* %189, align 8
  %191 = and i64 %188, %190
  store i64 %191, i64* %cppVar_820, align 8
  %192 = load i64* %cppVar_820, align 8
  store i64 %192, i64* %cppVar_811, align 8
  br label %194

; <label>:193                                     ; preds = %141
  store i64 0, i64* %cppVar_811, align 8
  br label %194

; <label>:194                                     ; preds = %193, %177
  %195 = load i64* %cppVar_807, align 8
  %196 = load i64* %cppVar_811, align 8
  %197 = add nsw i64 %195, %196
  store i64 %197, i64* %cppVar_821, align 8
  %198 = load i64* %cppVar_821, align 8
  %199 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %200 = load i64* %199, align 8
  %201 = and i64 %198, %200
  store i64 %201, i64* %cppVar_821, align 8
  %202 = load i64* %cppVar_821, align 8
  store i64 %202, i64* %cppVar_803, align 8
  br label %266

; <label>:203                                     ; preds = %125
  %204 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %205 = load i64* %204, align 8
  %206 = icmp eq i64 %205, 1
  %207 = zext i1 %206 to i8
  store i8 %207, i8* %cppVar_824, align 1
  %208 = load i8* %cppVar_802, align 1
  %209 = trunc i8 %208 to i1
  br i1 %209, label %210, label %213

; <label>:210                                     ; preds = %203
  %211 = load i8* %cppVar_824, align 1
  %212 = trunc i8 %211 to i1
  br label %213

; <label>:213                                     ; preds = %210, %203
  %214 = phi i1 [ false, %203 ], [ %212, %210 ]
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %cppVar_825, align 1
  %216 = load i8* %cppVar_825, align 1
  %217 = trunc i8 %216 to i1
  br i1 %217, label %218, label %221

; <label>:218                                     ; preds = %213
  %219 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %220 = load i64* %219, align 8
  store i64 %220, i64* %cppVar_822, align 8
  br label %264

; <label>:221                                     ; preds = %213
  %222 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %223 = load i64* %222, align 8
  %224 = icmp eq i64 %223, 2
  %225 = zext i1 %224 to i8
  store i8 %225, i8* %cppVar_828, align 1
  %226 = load i8* %cppVar_802, align 1
  %227 = trunc i8 %226 to i1
  br i1 %227, label %228, label %231

; <label>:228                                     ; preds = %221
  %229 = load i8* %cppVar_828, align 1
  %230 = trunc i8 %229 to i1
  br label %231

; <label>:231                                     ; preds = %228, %221
  %232 = phi i1 [ false, %221 ], [ %230, %228 ]
  %233 = zext i1 %232 to i8
  store i8 %233, i8* %cppVar_829, align 1
  %234 = load i8* %cppVar_829, align 1
  %235 = trunc i8 %234 to i1
  br i1 %235, label %236, label %239

; <label>:236                                     ; preds = %231
  %237 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %238 = load i64* %237, align 8
  store i64 %238, i64* %cppVar_826, align 8
  br label %262

; <label>:239                                     ; preds = %231
  %240 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %241 = load i64* %240, align 8
  %242 = icmp eq i64 %241, 3
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %cppVar_832, align 1
  %244 = load i8* %cppVar_802, align 1
  %245 = trunc i8 %244 to i1
  br i1 %245, label %246, label %249

; <label>:246                                     ; preds = %239
  %247 = load i8* %cppVar_832, align 1
  %248 = trunc i8 %247 to i1
  br label %249

; <label>:249                                     ; preds = %246, %239
  %250 = phi i1 [ false, %239 ], [ %248, %246 ]
  %251 = zext i1 %250 to i8
  store i8 %251, i8* %cppVar_833, align 1
  %252 = load i8* %cppVar_833, align 1
  %253 = trunc i8 %252 to i1
  br i1 %253, label %254, label %257

; <label>:254                                     ; preds = %249
  %255 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %256 = load i64* %255, align 8
  store i64 %256, i64* %cppVar_830, align 8
  br label %260

; <label>:257                                     ; preds = %249
  %258 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %259 = load i64* %258, align 8
  store i64 %259, i64* %cppVar_830, align 8
  br label %260

; <label>:260                                     ; preds = %257, %254
  %261 = load i64* %cppVar_830, align 8
  store i64 %261, i64* %cppVar_826, align 8
  br label %262

; <label>:262                                     ; preds = %260, %236
  %263 = load i64* %cppVar_826, align 8
  store i64 %263, i64* %cppVar_822, align 8
  br label %264

; <label>:264                                     ; preds = %262, %218
  %265 = load i64* %cppVar_822, align 8
  store i64 %265, i64* %cppVar_803, align 8
  br label %266

; <label>:266                                     ; preds = %264, %194
  %267 = load i64* %cppVar_803, align 8
  store i64 %267, i64* %cppVar_800, align 8
  br label %283

; <label>:268                                     ; preds = %108
  %269 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %270 = load i64* %269, align 8
  %271 = icmp eq i64 %270, 2
  %272 = zext i1 %271 to i8
  store i8 %272, i8* %cppVar_836, align 1
  %273 = load i8* %cppVar_836, align 1
  %274 = trunc i8 %273 to i1
  br i1 %274, label %275, label %278

; <label>:275                                     ; preds = %268
  %276 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %277 = load i64* %276, align 8
  store i64 %277, i64* %cppVar_834, align 8
  br label %281

; <label>:278                                     ; preds = %268
  %279 = getelementptr inbounds %class.model_train* %13, i32 0, i32 28
  %280 = load i64* %279, align 8
  store i64 %280, i64* %cppVar_834, align 8
  br label %281

; <label>:281                                     ; preds = %278, %275
  %282 = load i64* %cppVar_834, align 8
  store i64 %282, i64* %cppVar_800, align 8
  br label %283

; <label>:283                                     ; preds = %281, %266
  %284 = load i64* %cppVar_800, align 8
  store i64 %284, i64* %cppVar_778, align 8
  br label %285

; <label>:285                                     ; preds = %283, %99
  %286 = load i64* %cppVar_778, align 8
  ret i64 %286
}

define i64 @_ZN11model_train22cppUpdateFun_train_upcElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_839 = alloca i64, align 8
  %cppVar_840 = alloca i8, align 1
  %cppVar_848 = alloca i64, align 8
  %cppVar_850 = alloca i64, align 8
  %cppVar_851 = alloca i8, align 1
  %cppVar_847 = alloca i64, align 8
  %cppVar_870 = alloca i64, align 8
  %cppVar_871 = alloca i8, align 1
  %cppVar_868 = alloca i64, align 8
  %cppVar_878 = alloca i64, align 8
  %cppVar_879 = alloca i8, align 1
  %cppVar_876 = alloca i64, align 8
  %cppVar_842 = alloca i8, align 1
  %cppVar_843 = alloca i64, align 8
  %cppVar_844 = alloca i64, align 8
  %cppVar_845 = alloca i8, align 1
  %cppVar_846 = alloca i8, align 1
  %cppVar_841 = alloca i64, align 8
  %cppVar_856 = alloca i64, align 8
  %cppVar_857 = alloca i8, align 1
  %cppVar_859 = alloca i64, align 8
  %cppVar_860 = alloca i64, align 8
  %cppVar_861 = alloca i8, align 1
  %cppVar_862 = alloca i64, align 8
  %cppVar_863 = alloca i64, align 8
  %cppVar_864 = alloca i64, align 8
  %cppVar_865 = alloca i8, align 1
  %cppVar_866 = alloca i8, align 1
  %cppVar_853 = alloca i64, align 8
  %cppVar_854 = alloca i8, align 1
  %cppVar_855 = alloca i8, align 1
  %cppVar_858 = alloca i8, align 1
  %cppVar_867 = alloca i8, align 1
  %cppVar_852 = alloca i64, align 8
  %cppVar_873 = alloca i8, align 1
  %cppVar_874 = alloca i8, align 1
  %cppVar_875 = alloca i8, align 1
  %cppVar_872 = alloca i64, align 8
  %cppVar_881 = alloca i8, align 1
  %cppVar_882 = alloca i8, align 1
  %cppVar_883 = alloca i8, align 1
  %cppVar_880 = alloca i64, align 8
  %cppVar_877 = alloca i64, align 8
  %cppVar_869 = alloca i64, align 8
  %cppVar_849 = alloca i64, align 8
  %cppVar_838 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_840, align 1
  %18 = load i8* %cppVar_840, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %53

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %cppVar_842, align 1
  %27 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %28 = load i64* %27, align 8
  %29 = sub nsw i64 %28, 1
  store i64 %29, i64* %cppVar_844, align 8
  %30 = load i64* %cppVar_844, align 8
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %32 = load i64* %31, align 8
  %33 = and i64 %30, %32
  store i64 %33, i64* %cppVar_844, align 8
  %34 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %35 = load i64* %34, align 8
  %36 = load i64* %cppVar_844, align 8
  %37 = icmp eq i64 %35, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %cppVar_845, align 1
  %39 = load i8* %cppVar_842, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %20
  %42 = load i8* %cppVar_845, align 1
  %43 = trunc i8 %42 to i1
  br label %44

; <label>:44                                      ; preds = %41, %20
  %45 = phi i1 [ false, %20 ], [ %43, %41 ]
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %cppVar_846, align 1
  %47 = load i8* %cppVar_846, align 1
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %44
  store i64 1, i64* %cppVar_841, align 8
  br label %51

; <label>:50                                      ; preds = %44
  store i64 0, i64* %cppVar_841, align 8
  br label %51

; <label>:51                                      ; preds = %50, %49
  %52 = load i64* %cppVar_841, align 8
  store i64 %52, i64* %cppVar_838, align 8
  br label %206

; <label>:53                                      ; preds = %0
  %54 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %55 = load i64* %54, align 8
  %56 = icmp eq i64 %55, 1
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %cppVar_851, align 1
  %58 = load i8* %cppVar_851, align 1
  %59 = trunc i8 %58 to i1
  br i1 %59, label %60, label %129

; <label>:60                                      ; preds = %53
  %61 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %62 = load i64* %61, align 8
  %63 = icmp eq i64 %62, 3
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %cppVar_854, align 1
  %65 = load i8* %cppVar_851, align 1
  %66 = trunc i8 %65 to i1
  br i1 %66, label %67, label %70

; <label>:67                                      ; preds = %60
  %68 = load i8* %cppVar_854, align 1
  %69 = trunc i8 %68 to i1
  br label %70

; <label>:70                                      ; preds = %67, %60
  %71 = phi i1 [ false, %60 ], [ %69, %67 ]
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %cppVar_855, align 1
  %73 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %74 = load i64* %73, align 8
  %75 = icmp eq i64 %74, 4
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %cppVar_857, align 1
  %77 = load i8* %cppVar_855, align 1
  %78 = trunc i8 %77 to i1
  br i1 %78, label %79, label %82

; <label>:79                                      ; preds = %70
  %80 = load i8* %cppVar_857, align 1
  %81 = trunc i8 %80 to i1
  br label %82

; <label>:82                                      ; preds = %79, %70
  %83 = phi i1 [ false, %70 ], [ %81, %79 ]
  %84 = zext i1 %83 to i8
  store i8 %84, i8* %cppVar_858, align 1
  %85 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %86 = load i64* %85, align 8
  %87 = add nsw i64 %86, 5
  store i64 %87, i64* %cppVar_860, align 8
  %88 = load i64* %cppVar_860, align 8
  %89 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %90 = load i64* %89, align 8
  %91 = and i64 %88, %90
  store i64 %91, i64* %cppVar_860, align 8
  %92 = load i64* %cppVar_860, align 8
  %93 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %94 = load i64* %93, align 8
  %95 = icmp eq i64 %92, %94
  %96 = zext i1 %95 to i8
  store i8 %96, i8* %cppVar_861, align 1
  %97 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %98 = load i64* %97, align 8
  %99 = add nsw i64 %98, 5
  store i64 %99, i64* %cppVar_863, align 8
  %100 = load i64* %cppVar_863, align 8
  %101 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %102 = load i64* %101, align 8
  %103 = and i64 %100, %102
  store i64 %103, i64* %cppVar_863, align 8
  %104 = load i64* %cppVar_863, align 8
  %105 = icmp sge i64 %104, 500
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %cppVar_865, align 1
  %107 = load i8* %cppVar_861, align 1
  %108 = trunc i8 %107 to i1
  br i1 %108, label %112, label %109

; <label>:109                                     ; preds = %82
  %110 = load i8* %cppVar_865, align 1
  %111 = trunc i8 %110 to i1
  br label %112

; <label>:112                                     ; preds = %109, %82
  %113 = phi i1 [ true, %82 ], [ %111, %109 ]
  %114 = zext i1 %113 to i8
  store i8 %114, i8* %cppVar_866, align 1
  %115 = load i8* %cppVar_858, align 1
  %116 = trunc i8 %115 to i1
  br i1 %116, label %117, label %120

; <label>:117                                     ; preds = %112
  %118 = load i8* %cppVar_866, align 1
  %119 = trunc i8 %118 to i1
  br label %120

; <label>:120                                     ; preds = %117, %112
  %121 = phi i1 [ false, %112 ], [ %119, %117 ]
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %cppVar_867, align 1
  %123 = load i8* %cppVar_867, align 1
  %124 = trunc i8 %123 to i1
  br i1 %124, label %125, label %126

; <label>:125                                     ; preds = %120
  store i64 3, i64* %cppVar_852, align 8
  br label %127

; <label>:126                                     ; preds = %120
  store i64 1, i64* %cppVar_852, align 8
  br label %127

; <label>:127                                     ; preds = %126, %125
  %128 = load i64* %cppVar_852, align 8
  store i64 %128, i64* %cppVar_849, align 8
  br label %204

; <label>:129                                     ; preds = %53
  %130 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %131 = load i64* %130, align 8
  %132 = icmp eq i64 %131, 3
  %133 = zext i1 %132 to i8
  store i8 %133, i8* %cppVar_871, align 1
  %134 = load i8* %cppVar_871, align 1
  %135 = trunc i8 %134 to i1
  br i1 %135, label %136, label %163

; <label>:136                                     ; preds = %129
  %137 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %138 = load i64* %137, align 8
  %139 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %140 = load i64* %139, align 8
  %141 = icmp eq i64 %138, %140
  %142 = zext i1 %141 to i8
  store i8 %142, i8* %cppVar_873, align 1
  %143 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %144 = load i64* %143, align 8
  %145 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %146 = load i64* %145, align 8
  %147 = icmp eq i64 %144, %146
  %148 = zext i1 %147 to i8
  store i8 %148, i8* %cppVar_874, align 1
  %149 = load i8* %cppVar_873, align 1
  %150 = trunc i8 %149 to i1
  br i1 %150, label %151, label %154

; <label>:151                                     ; preds = %136
  %152 = load i8* %cppVar_874, align 1
  %153 = trunc i8 %152 to i1
  br label %154

; <label>:154                                     ; preds = %151, %136
  %155 = phi i1 [ false, %136 ], [ %153, %151 ]
  %156 = zext i1 %155 to i8
  store i8 %156, i8* %cppVar_875, align 1
  %157 = load i8* %cppVar_875, align 1
  %158 = trunc i8 %157 to i1
  br i1 %158, label %159, label %160

; <label>:159                                     ; preds = %154
  store i64 2, i64* %cppVar_872, align 8
  br label %161

; <label>:160                                     ; preds = %154
  store i64 3, i64* %cppVar_872, align 8
  br label %161

; <label>:161                                     ; preds = %160, %159
  %162 = load i64* %cppVar_872, align 8
  store i64 %162, i64* %cppVar_869, align 8
  br label %202

; <label>:163                                     ; preds = %129
  %164 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %165 = load i64* %164, align 8
  %166 = icmp eq i64 %165, 2
  %167 = zext i1 %166 to i8
  store i8 %167, i8* %cppVar_879, align 1
  %168 = load i8* %cppVar_879, align 1
  %169 = trunc i8 %168 to i1
  br i1 %169, label %170, label %197

; <label>:170                                     ; preds = %163
  %171 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %172 = load i64* %171, align 8
  %173 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %174 = load i64* %173, align 8
  %175 = icmp eq i64 %172, %174
  %176 = zext i1 %175 to i8
  store i8 %176, i8* %cppVar_881, align 1
  %177 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %178 = load i64* %177, align 8
  %179 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %180 = load i64* %179, align 8
  %181 = icmp eq i64 %178, %180
  %182 = zext i1 %181 to i8
  store i8 %182, i8* %cppVar_882, align 1
  %183 = load i8* %cppVar_881, align 1
  %184 = trunc i8 %183 to i1
  br i1 %184, label %185, label %188

; <label>:185                                     ; preds = %170
  %186 = load i8* %cppVar_882, align 1
  %187 = trunc i8 %186 to i1
  br label %188

; <label>:188                                     ; preds = %185, %170
  %189 = phi i1 [ false, %170 ], [ %187, %185 ]
  %190 = zext i1 %189 to i8
  store i8 %190, i8* %cppVar_883, align 1
  %191 = load i8* %cppVar_883, align 1
  %192 = trunc i8 %191 to i1
  br i1 %192, label %193, label %194

; <label>:193                                     ; preds = %188
  store i64 2, i64* %cppVar_880, align 8
  br label %195

; <label>:194                                     ; preds = %188
  store i64 2, i64* %cppVar_880, align 8
  br label %195

; <label>:195                                     ; preds = %194, %193
  %196 = load i64* %cppVar_880, align 8
  store i64 %196, i64* %cppVar_877, align 8
  br label %200

; <label>:197                                     ; preds = %163
  %198 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %199 = load i64* %198, align 8
  store i64 %199, i64* %cppVar_877, align 8
  br label %200

; <label>:200                                     ; preds = %197, %195
  %201 = load i64* %cppVar_877, align 8
  store i64 %201, i64* %cppVar_869, align 8
  br label %202

; <label>:202                                     ; preds = %200, %161
  %203 = load i64* %cppVar_869, align 8
  store i64 %203, i64* %cppVar_849, align 8
  br label %204

; <label>:204                                     ; preds = %202, %127
  %205 = load i64* %cppVar_849, align 8
  store i64 %205, i64* %cppVar_838, align 8
  br label %206

; <label>:206                                     ; preds = %204, %51
  %207 = load i64* %cppVar_838, align 8
  ret i64 %207
}

define i64 @_ZN11model_train24cppUpdateFun_train_v_cntElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_886 = alloca i64, align 8
  %cppVar_887 = alloca i8, align 1
  %cppVar_894 = alloca i64, align 8
  %cppVar_895 = alloca i8, align 1
  %cppVar_915 = alloca i64, align 8
  %cppVar_916 = alloca i8, align 1
  %cppVar_924 = alloca i64, align 8
  %cppVar_925 = alloca i8, align 1
  %cppVar_889 = alloca i8, align 1
  %cppVar_891 = alloca i64, align 8
  %cppVar_892 = alloca i64, align 8
  %cppVar_888 = alloca i64, align 8
  %cppVar_900 = alloca i64, align 8
  %cppVar_901 = alloca i8, align 1
  %cppVar_904 = alloca i64, align 8
  %cppVar_905 = alloca i64, align 8
  %cppVar_906 = alloca i8, align 1
  %cppVar_907 = alloca i64, align 8
  %cppVar_908 = alloca i64, align 8
  %cppVar_909 = alloca i64, align 8
  %cppVar_910 = alloca i8, align 1
  %cppVar_911 = alloca i8, align 1
  %cppVar_897 = alloca i64, align 8
  %cppVar_898 = alloca i8, align 1
  %cppVar_899 = alloca i8, align 1
  %cppVar_902 = alloca i8, align 1
  %cppVar_912 = alloca i64, align 8
  %cppVar_913 = alloca i64, align 8
  %cppVar_903 = alloca i64, align 8
  %cppVar_896 = alloca i64, align 8
  %cppVar_918 = alloca i8, align 1
  %cppVar_920 = alloca i8, align 1
  %cppVar_921 = alloca i64, align 8
  %cppVar_922 = alloca i64, align 8
  %cppVar_919 = alloca i64, align 8
  %cppVar_917 = alloca i64, align 8
  %cppVar_927 = alloca i8, align 1
  %cppVar_929 = alloca i8, align 1
  %cppVar_930 = alloca i64, align 8
  %cppVar_931 = alloca i64, align 8
  %cppVar_928 = alloca i64, align 8
  %cppVar_926 = alloca i64, align 8
  %cppVar_923 = alloca i64, align 8
  %cppVar_914 = alloca i64, align 8
  %cppVar_893 = alloca i64, align 8
  %cppVar_885 = alloca i64, align 8
  %cppVar_890 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_887, align 1
  %18 = load i8* %cppVar_887, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %41

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %cppVar_889, align 1
  %27 = load i8* %cppVar_889, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %20
  store i64 0, i64* %cppVar_888, align 8
  br label %39

; <label>:30                                      ; preds = %20
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %32 = load i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %cppVar_892, align 8
  %34 = load i64* %cppVar_892, align 8
  %35 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %36 = load i64* %35, align 8
  %37 = and i64 %34, %36
  store i64 %37, i64* %cppVar_892, align 8
  %38 = load i64* %cppVar_892, align 8
  store i64 %38, i64* %cppVar_888, align 8
  br label %39

; <label>:39                                      ; preds = %30, %29
  %40 = load i64* %cppVar_888, align 8
  store i64 %40, i64* %cppVar_885, align 8
  br label %220

; <label>:41                                      ; preds = %0
  %42 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %43 = load i64* %42, align 8
  %44 = icmp eq i64 %43, 1
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %cppVar_895, align 1
  %46 = load i8* %cppVar_895, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %125

; <label>:48                                      ; preds = %41
  %49 = getelementptr inbounds %class.model_train* %13, i32 0, i32 15
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %50, 3
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_898, align 1
  %53 = load i8* %cppVar_895, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %48
  %56 = load i8* %cppVar_898, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %48
  %59 = phi i1 [ false, %48 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_899, align 1
  %61 = getelementptr inbounds %class.model_train* %13, i32 0, i32 7
  %62 = load i64* %61, align 8
  %63 = icmp eq i64 %62, 4
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %cppVar_901, align 1
  %65 = load i8* %cppVar_899, align 1
  %66 = trunc i8 %65 to i1
  br i1 %66, label %67, label %70

; <label>:67                                      ; preds = %58
  %68 = load i8* %cppVar_901, align 1
  %69 = trunc i8 %68 to i1
  br label %70

; <label>:70                                      ; preds = %67, %58
  %71 = phi i1 [ false, %58 ], [ %69, %67 ]
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %cppVar_902, align 1
  %73 = load i8* %cppVar_902, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %120

; <label>:75                                      ; preds = %70
  %76 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %77 = load i64* %76, align 8
  %78 = add nsw i64 %77, 5
  store i64 %78, i64* %cppVar_905, align 8
  %79 = load i64* %cppVar_905, align 8
  %80 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %81 = load i64* %80, align 8
  %82 = and i64 %79, %81
  store i64 %82, i64* %cppVar_905, align 8
  %83 = load i64* %cppVar_905, align 8
  %84 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %85 = load i64* %84, align 8
  %86 = icmp eq i64 %83, %85
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %cppVar_906, align 1
  %88 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %89 = load i64* %88, align 8
  %90 = add nsw i64 %89, 5
  store i64 %90, i64* %cppVar_908, align 8
  %91 = load i64* %cppVar_908, align 8
  %92 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %93 = load i64* %92, align 8
  %94 = and i64 %91, %93
  store i64 %94, i64* %cppVar_908, align 8
  %95 = load i64* %cppVar_908, align 8
  %96 = icmp sge i64 %95, 500
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %cppVar_910, align 1
  %98 = load i8* %cppVar_906, align 1
  %99 = trunc i8 %98 to i1
  br i1 %99, label %103, label %100

; <label>:100                                     ; preds = %75
  %101 = load i8* %cppVar_910, align 1
  %102 = trunc i8 %101 to i1
  br label %103

; <label>:103                                     ; preds = %100, %75
  %104 = phi i1 [ true, %75 ], [ %102, %100 ]
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %cppVar_911, align 1
  %106 = load i8* %cppVar_911, align 1
  %107 = trunc i8 %106 to i1
  br i1 %107, label %108, label %109

; <label>:108                                     ; preds = %103
  store i64 0, i64* %cppVar_903, align 8
  br label %118

; <label>:109                                     ; preds = %103
  %110 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %111 = load i64* %110, align 8
  %112 = add nsw i64 %111, 5
  store i64 %112, i64* %cppVar_913, align 8
  %113 = load i64* %cppVar_913, align 8
  %114 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %115 = load i64* %114, align 8
  %116 = and i64 %113, %115
  store i64 %116, i64* %cppVar_913, align 8
  %117 = load i64* %cppVar_913, align 8
  store i64 %117, i64* %cppVar_903, align 8
  br label %118

; <label>:118                                     ; preds = %109, %108
  %119 = load i64* %cppVar_903, align 8
  store i64 %119, i64* %cppVar_896, align 8
  br label %123

; <label>:120                                     ; preds = %70
  %121 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %122 = load i64* %121, align 8
  store i64 %122, i64* %cppVar_896, align 8
  br label %123

; <label>:123                                     ; preds = %120, %118
  %124 = load i64* %cppVar_896, align 8
  store i64 %124, i64* %cppVar_893, align 8
  br label %218

; <label>:125                                     ; preds = %41
  %126 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %127 = load i64* %126, align 8
  %128 = icmp eq i64 %127, 3
  %129 = zext i1 %128 to i8
  store i8 %129, i8* %cppVar_916, align 1
  %130 = load i8* %cppVar_916, align 1
  %131 = trunc i8 %130 to i1
  br i1 %131, label %132, label %167

; <label>:132                                     ; preds = %125
  %133 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %134 = load i64* %133, align 8
  %135 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %136 = load i64* %135, align 8
  %137 = icmp eq i64 %134, %136
  %138 = zext i1 %137 to i8
  store i8 %138, i8* %cppVar_918, align 1
  %139 = load i8* %cppVar_918, align 1
  %140 = trunc i8 %139 to i1
  br i1 %140, label %141, label %162

; <label>:141                                     ; preds = %132
  %142 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %143 = load i64* %142, align 8
  %144 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %145 = load i64* %144, align 8
  %146 = icmp eq i64 %143, %145
  %147 = zext i1 %146 to i8
  store i8 %147, i8* %cppVar_920, align 1
  %148 = load i8* %cppVar_920, align 1
  %149 = trunc i8 %148 to i1
  br i1 %149, label %150, label %151

; <label>:150                                     ; preds = %141
  store i64 0, i64* %cppVar_919, align 8
  br label %160

; <label>:151                                     ; preds = %141
  %152 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %153 = load i64* %152, align 8
  %154 = add nsw i64 %153, 1
  store i64 %154, i64* %cppVar_922, align 8
  %155 = load i64* %cppVar_922, align 8
  %156 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %157 = load i64* %156, align 8
  %158 = and i64 %155, %157
  store i64 %158, i64* %cppVar_922, align 8
  %159 = load i64* %cppVar_922, align 8
  store i64 %159, i64* %cppVar_919, align 8
  br label %160

; <label>:160                                     ; preds = %151, %150
  %161 = load i64* %cppVar_919, align 8
  store i64 %161, i64* %cppVar_917, align 8
  br label %165

; <label>:162                                     ; preds = %132
  %163 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %164 = load i64* %163, align 8
  store i64 %164, i64* %cppVar_917, align 8
  br label %165

; <label>:165                                     ; preds = %162, %160
  %166 = load i64* %cppVar_917, align 8
  store i64 %166, i64* %cppVar_914, align 8
  br label %216

; <label>:167                                     ; preds = %125
  %168 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %169 = load i64* %168, align 8
  %170 = icmp eq i64 %169, 2
  %171 = zext i1 %170 to i8
  store i8 %171, i8* %cppVar_925, align 1
  %172 = load i8* %cppVar_925, align 1
  %173 = trunc i8 %172 to i1
  br i1 %173, label %174, label %211

; <label>:174                                     ; preds = %167
  %175 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %176 = load i64* %175, align 8
  %177 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %178 = load i64* %177, align 8
  %179 = icmp eq i64 %176, %178
  %180 = zext i1 %179 to i8
  store i8 %180, i8* %cppVar_927, align 1
  %181 = load i8* %cppVar_927, align 1
  %182 = trunc i8 %181 to i1
  br i1 %182, label %183, label %206

; <label>:183                                     ; preds = %174
  %184 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %185 = load i64* %184, align 8
  %186 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %187 = load i64* %186, align 8
  %188 = icmp eq i64 %185, %187
  %189 = zext i1 %188 to i8
  store i8 %189, i8* %cppVar_929, align 1
  %190 = load i8* %cppVar_929, align 1
  %191 = trunc i8 %190 to i1
  br i1 %191, label %192, label %195

; <label>:192                                     ; preds = %183
  %193 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %194 = load i64* %193, align 8
  store i64 %194, i64* %cppVar_928, align 8
  br label %204

; <label>:195                                     ; preds = %183
  %196 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %197 = load i64* %196, align 8
  %198 = add nsw i64 %197, 1
  store i64 %198, i64* %cppVar_931, align 8
  %199 = load i64* %cppVar_931, align 8
  %200 = getelementptr inbounds %class.model_train* %13, i32 0, i32 39
  %201 = load i64* %200, align 8
  %202 = and i64 %199, %201
  store i64 %202, i64* %cppVar_931, align 8
  %203 = load i64* %cppVar_931, align 8
  store i64 %203, i64* %cppVar_928, align 8
  br label %204

; <label>:204                                     ; preds = %195, %192
  %205 = load i64* %cppVar_928, align 8
  store i64 %205, i64* %cppVar_926, align 8
  br label %209

; <label>:206                                     ; preds = %174
  %207 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %208 = load i64* %207, align 8
  store i64 %208, i64* %cppVar_926, align 8
  br label %209

; <label>:209                                     ; preds = %206, %204
  %210 = load i64* %cppVar_926, align 8
  store i64 %210, i64* %cppVar_923, align 8
  br label %214

; <label>:211                                     ; preds = %167
  %212 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %213 = load i64* %212, align 8
  store i64 %213, i64* %cppVar_923, align 8
  br label %214

; <label>:214                                     ; preds = %211, %209
  %215 = load i64* %cppVar_923, align 8
  store i64 %215, i64* %cppVar_914, align 8
  br label %216

; <label>:216                                     ; preds = %214, %165
  %217 = load i64* %cppVar_914, align 8
  store i64 %217, i64* %cppVar_893, align 8
  br label %218

; <label>:218                                     ; preds = %216, %123
  %219 = load i64* %cppVar_893, align 8
  store i64 %219, i64* %cppVar_885, align 8
  br label %220

; <label>:220                                     ; preds = %218, %39
  %221 = load i64* %cppVar_885, align 8
  ret i64 %221
}

define i64 @_ZN11model_train16cppUpdateFun_upcElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_946 = alloca i64, align 8
  %cppVar_934 = alloca i64, align 8
  %cppVar_935 = alloca i8, align 1
  %cppVar_937 = alloca i64, align 8
  %cppVar_938 = alloca i8, align 1
  %cppVar_940 = alloca i64, align 8
  %cppVar_941 = alloca i8, align 1
  %cppVar_943 = alloca i8, align 1
  %cppVar_944 = alloca i8, align 1
  %cppVar_945 = alloca i8, align 1
  %cppVar_942 = alloca i64, align 8
  %cppVar_939 = alloca i64, align 8
  %cppVar_936 = alloca i64, align 8
  %cppVar_933 = alloca i64, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_train** %1
  %14 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_935, align 1
  %18 = load i8* %cppVar_935, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_train* %13, i32 0, i32 31
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_933, align 8
  br label %76

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_938, align 1
  %28 = load i8* %cppVar_938, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_train* %13, i32 0, i32 31
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_936, align 8
  br label %74

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_train* %13, i32 0, i32 29
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_941, align 1
  %38 = load i8* %cppVar_941, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %69

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_train* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = getelementptr inbounds %class.model_train* %13, i32 0, i32 9
  %44 = load i64* %43, align 8
  %45 = icmp eq i64 %42, %44
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %cppVar_943, align 1
  %47 = getelementptr inbounds %class.model_train* %13, i32 0, i32 30
  %48 = load i64* %47, align 8
  %49 = getelementptr inbounds %class.model_train* %13, i32 0, i32 14
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_944, align 1
  %53 = load i8* %cppVar_943, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %40
  %56 = load i8* %cppVar_944, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %40
  %59 = phi i1 [ false, %40 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_945, align 1
  %61 = load i8* %cppVar_945, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %58
  store i64 0, i64* %cppVar_942, align 8
  br label %67

; <label>:64                                      ; preds = %58
  %65 = getelementptr inbounds %class.model_train* %13, i32 0, i32 31
  %66 = load i64* %65, align 8
  store i64 %66, i64* %cppVar_942, align 8
  br label %67

; <label>:67                                      ; preds = %64, %63
  %68 = load i64* %cppVar_942, align 8
  store i64 %68, i64* %cppVar_939, align 8
  br label %72

; <label>:69                                      ; preds = %33
  %70 = getelementptr inbounds %class.model_train* %13, i32 0, i32 31
  %71 = load i64* %70, align 8
  store i64 %71, i64* %cppVar_939, align 8
  br label %72

; <label>:72                                      ; preds = %69, %67
  %73 = load i64* %cppVar_939, align 8
  store i64 %73, i64* %cppVar_936, align 8
  br label %74

; <label>:74                                      ; preds = %72, %30
  %75 = load i64* %cppVar_936, align 8
  store i64 %75, i64* %cppVar_933, align 8
  br label %76

; <label>:76                                      ; preds = %74, %20
  %77 = load i64* %cppVar_933, align 8
  ret i64 %77
}

define void @_ZN11model_train28cppUpdateFun_visibleEnergiesElllllllllll(%1* sret %agg.result, %class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1088 = alloca i64, align 8
  %cppVar_1089 = alloca i8, align 1
  %cppVar_1091 = alloca i64, align 8
  %cppVar_1092 = alloca i8, align 1
  %cppVar_1142 = alloca i64, align 8
  %cppVar_1143 = alloca i8, align 1
  %cppVar_1109 = alloca i64, align 8
  %cppVar_1110 = alloca i64, align 8
  %cppVar_1111 = alloca i64, align 8
  %cppVar_1098 = alloca i8, align 1
  %cppVar_1094 = alloca i64, align 8
  %cppVar_1095 = alloca i8, align 1
  %cppVar_1096 = alloca i8, align 1
  %cppVar_1120 = alloca i64, align 8
  %cppVar_1121 = alloca i8, align 1
  %cppVar_1122 = alloca i8, align 1
  %cppVar_1134 = alloca i64, align 8
  %cppVar_1135 = alloca i8, align 1
  %cppVar_1136 = alloca i8, align 1
  %cppVar_1138 = alloca i64, align 8
  %cppVar_1139 = alloca i8, align 1
  %cppVar_1140 = alloca i8, align 1
  %cppVar_1101 = alloca i64, align 8
  %cppVar_1102 = alloca i8, align 1
  %cppVar_1100 = alloca i64, align 8
  %cppVar_1105 = alloca i64, align 8
  %cppVar_1106 = alloca i64, align 8
  %cppVar_1107 = alloca i64, align 8
  %cppVar_1108 = alloca i8, align 1
  %cppVar_1112 = alloca i64, align 8
  %cppVar_1113 = alloca i64, align 8
  %cppVar_1114 = alloca i64, align 8
  %cppVar_1115 = alloca i64, align 8
  %cppVar_1116 = alloca i64, align 8
  %cppVar_1104 = alloca i64, align 8
  %cppVar_1117 = alloca i64, align 8
  %cppVar_1099 = alloca i64, align 8
  %cppVar_1118 = alloca %1, align 8
  %cppVar_1097 = alloca %1, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_1129 = alloca i64, align 8
  %cppVar_1127 = alloca i64, align 8
  %cppVar_1128 = alloca i8, align 1
  %cppVar_1130 = alloca i64, align 8
  %cppVar_1126 = alloca i64, align 8
  %cppVar_1124 = alloca i64, align 8
  %cppVar_1125 = alloca i64, align 8
  %cppVar_1131 = alloca i64, align 8
  %cppVar_1123 = alloca i64, align 8
  %cppVar_1132 = alloca %1, align 8
  %cppVar_1137 = alloca %1, align 8
  %cppVar_1133 = alloca %1, align 8
  %cppVar_1119 = alloca %1, align 8
  %cppVar_1093 = alloca %1, align 8
  %cppVar_1141 = alloca %1, align 8
  %cppVar_1090 = alloca %1, align 8
  %15 = alloca i1
  %cppVar_1103 = alloca i64, align 8
  %16 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_train** %1
  call void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1118)
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1097)
          to label %18 unwind label %37

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1132)
          to label %19 unwind label %40

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1137)
          to label %20 unwind label %43

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1133)
          to label %21 unwind label %46

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1119)
          to label %22 unwind label %49

; <label>:22                                      ; preds = %21
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1093)
          to label %23 unwind label %52

; <label>:23                                      ; preds = %22
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1141)
          to label %24 unwind label %55

; <label>:24                                      ; preds = %23
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_1090)
          to label %25 unwind label %58

; <label>:25                                      ; preds = %24
  store i1 false, i1* %15
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %agg.result)
          to label %26 unwind label %61

; <label>:26                                      ; preds = %25
  %27 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %28 = load i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %cppVar_1089, align 1
  %31 = load i8* %cppVar_1089, align 1
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %67

; <label>:33                                      ; preds = %26
  %34 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %35 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %agg.result, %1* %34)
          to label %36 unwind label %64

; <label>:36                                      ; preds = %33
  br label %349

; <label>:37                                      ; preds = %373, %0
  %38 = call i8* @llvm.eh.exception() nounwind
  store i8* %38, i8** %13
  %39 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %38, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %379

; <label>:40                                      ; preds = %370, %18
  %41 = call i8* @llvm.eh.exception() nounwind
  store i8* %41, i8** %13
  %42 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %41, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %377

; <label>:43                                      ; preds = %367, %19
  %44 = call i8* @llvm.eh.exception() nounwind
  store i8* %44, i8** %13
  %45 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %44, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %374

; <label>:46                                      ; preds = %364, %20
  %47 = call i8* @llvm.eh.exception() nounwind
  store i8* %47, i8** %13
  %48 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %47, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %371

; <label>:49                                      ; preds = %361, %21
  %50 = call i8* @llvm.eh.exception() nounwind
  store i8* %50, i8** %13
  %51 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %50, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %368

; <label>:52                                      ; preds = %358, %22
  %53 = call i8* @llvm.eh.exception() nounwind
  store i8* %53, i8** %13
  %54 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %53, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %365

; <label>:55                                      ; preds = %355, %23
  %56 = call i8* @llvm.eh.exception() nounwind
  store i8* %56, i8** %13
  %57 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %56, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %362

; <label>:58                                      ; preds = %353, %24
  %59 = call i8* @llvm.eh.exception() nounwind
  store i8* %59, i8** %13
  %60 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %59, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %359

; <label>:61                                      ; preds = %351, %25
  %62 = call i8* @llvm.eh.exception() nounwind
  store i8* %62, i8** %13
  %63 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %62, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %356

; <label>:64                                      ; preds = %346, %343, %339, %335, %325, %322, %319, %316, %312, %308, %289, %271, %268, %258, %223, %205, %201, %198, %195, %185, %131, %115, %33
  %65 = call i8* @llvm.eh.exception() nounwind
  store i8* %65, i8** %13
  %66 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %65, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %agg.result)
          to label %354 unwind label %383

; <label>:67                                      ; preds = %26
  %68 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %69 = load i64* %68, align 8
  %70 = icmp eq i64 %69, 1
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %cppVar_1092, align 1
  %72 = load i8* %cppVar_1092, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %328

; <label>:74                                      ; preds = %67
  %75 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %76 = load i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %cppVar_1095, align 1
  %79 = load i8* %cppVar_1092, align 1
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %84

; <label>:81                                      ; preds = %74
  %82 = load i8* %cppVar_1095, align 1
  %83 = trunc i8 %82 to i1
  br label %84

; <label>:84                                      ; preds = %81, %74
  %85 = phi i1 [ false, %74 ], [ %83, %81 ]
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %cppVar_1096, align 1
  %87 = load i8* %cppVar_1096, align 1
  %88 = trunc i8 %87 to i1
  br i1 %88, label %89, label %208

; <label>:89                                      ; preds = %84
  %90 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %91 = load i64* %90, align 8
  %92 = getelementptr inbounds %class.model_train* %17, i32 0, i32 9
  %93 = load i64* %92, align 8
  %94 = icmp eq i64 %91, %93
  %95 = zext i1 %94 to i8
  store i8 %95, i8* %cppVar_1098, align 1
  %96 = load i8* %cppVar_1098, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %201

; <label>:98                                      ; preds = %89
  %99 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %100 = load i64* %99, align 8
  %101 = ashr i64 %100, 0
  %102 = getelementptr inbounds %class.model_train* %17, i32 0, i32 40
  %103 = load i64* %102, align 8
  %104 = and i64 %101, %103
  store i64 %104, i64* %cppVar_1099, align 8
  %105 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %106 = load i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  %108 = zext i1 %107 to i8
  store i8 %108, i8* %cppVar_1102, align 1
  %109 = load i8* %cppVar_1102, align 1
  %110 = trunc i8 %109 to i1
  br i1 %110, label %111, label %112

; <label>:111                                     ; preds = %98
  store i64 0, i64* %cppVar_1100, align 8
  br label %115

; <label>:112                                     ; preds = %98
  %113 = getelementptr inbounds %class.model_train* %17, i32 0, i32 28
  %114 = load i64* %113, align 8
  store i64 %114, i64* %cppVar_1100, align 8
  br label %115

; <label>:115                                     ; preds = %112, %111
  %116 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %117 = load i64* %116, align 8
  %118 = ashr i64 %117, 0
  %119 = getelementptr inbounds %class.model_train* %17, i32 0, i32 43
  %120 = load i64* %119, align 8
  %121 = and i64 %118, %120
  store i64 %121, i64* %cppVar_1105, align 8
  %122 = getelementptr inbounds %class.model_train* %17, i32 0, i32 4
  %123 = load i64* %cppVar_1105, align 8
  %124 = invoke i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %122, i64 %123)
          to label %125 unwind label %64

; <label>:125                                     ; preds = %115
  store i64 %124, i64* %cppVar_1106, align 8
  %126 = load i64* %cppVar_1106, align 8
  %127 = icmp eq i64 %126, 1
  %128 = zext i1 %127 to i8
  store i8 %128, i8* %cppVar_1108, align 1
  %129 = load i8* %cppVar_1108, align 1
  %130 = trunc i8 %129 to i1
  br i1 %130, label %131, label %184

; <label>:131                                     ; preds = %125
  %132 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %133 = load i64* %132, align 8
  %134 = mul nsw i64 101, %133
  store i64 %134, i64* %cppVar_1110, align 8
  %135 = load i64* %cppVar_1110, align 8
  %136 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %137 = load i64* %136, align 8
  %138 = and i64 %135, %137
  store i64 %138, i64* %cppVar_1110, align 8
  %139 = load i64* %cppVar_1110, align 8
  %140 = getelementptr inbounds %class.model_train* %17, i32 0, i32 25
  %141 = load i64* %140, align 8
  %142 = add nsw i64 %139, %141
  store i64 %142, i64* %cppVar_1111, align 8
  %143 = load i64* %cppVar_1111, align 8
  %144 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %145 = load i64* %144, align 8
  %146 = and i64 %143, %145
  store i64 %146, i64* %cppVar_1111, align 8
  %147 = getelementptr inbounds %class.model_train* %17, i32 0, i32 3
  %148 = load i64* %cppVar_1111, align 8
  %149 = invoke i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %147, i64 %148)
          to label %150 unwind label %64

; <label>:150                                     ; preds = %131
  store i64 %149, i64* %cppVar_1112, align 8
  %151 = load i64* %cppVar_1112, align 8
  %152 = ashr i64 %151, 1
  %153 = getelementptr inbounds %class.model_train* %17, i32 0, i32 43
  %154 = load i64* %153, align 8
  %155 = and i64 %152, %154
  store i64 %155, i64* %cppVar_1113, align 8
  %156 = load i64* %cppVar_1113, align 8
  %157 = getelementptr inbounds %class.model_train* %17, i32 0, i32 47
  %158 = load i64* %157, align 8
  %159 = and i64 %156, %158
  %160 = icmp ne i64 %159, 0
  br i1 %160, label %161, label %166

; <label>:161                                     ; preds = %150
  %162 = load i64* %cppVar_1113, align 8
  %163 = getelementptr inbounds %class.model_train* %17, i32 0, i32 49
  %164 = load i64* %163, align 8
  %165 = or i64 %162, %164
  br label %168

; <label>:166                                     ; preds = %150
  %167 = load i64* %cppVar_1113, align 8
  br label %168

; <label>:168                                     ; preds = %166, %161
  %169 = phi i64 [ %165, %161 ], [ %167, %166 ]
  store i64 %169, i64* %cppVar_1114, align 8
  %170 = load i64* %cppVar_1112, align 8
  %171 = ashr i64 %170, 0
  %172 = getelementptr inbounds %class.model_train* %17, i32 0, i32 38
  %173 = load i64* %172, align 8
  %174 = and i64 %171, %173
  store i64 %174, i64* %cppVar_1115, align 8
  %175 = load i64* %cppVar_1114, align 8
  %176 = shl i64 %175, 1
  %177 = load i64* %cppVar_1115, align 8
  %178 = or i64 %176, %177
  store i64 %178, i64* %cppVar_1116, align 8
  %179 = load i64* %cppVar_1116, align 8
  %180 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %181 = load i64* %180, align 8
  %182 = and i64 %179, %181
  store i64 %182, i64* %cppVar_1116, align 8
  %183 = load i64* %cppVar_1116, align 8
  store i64 %183, i64* %cppVar_1104, align 8
  br label %185

; <label>:184                                     ; preds = %125
  store i64 0, i64* %cppVar_1104, align 8
  br label %185

; <label>:185                                     ; preds = %184, %168
  %186 = load i64* %cppVar_1100, align 8
  %187 = load i64* %cppVar_1104, align 8
  %188 = add nsw i64 %186, %187
  store i64 %188, i64* %cppVar_1117, align 8
  %189 = load i64* %cppVar_1117, align 8
  %190 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %191 = load i64* %190, align 8
  %192 = and i64 %189, %191
  store i64 %192, i64* %cppVar_1117, align 8
  %193 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %194 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1118, %1* %193)
          to label %195 unwind label %64

; <label>:195                                     ; preds = %185
  %196 = load i64* %cppVar_1099, align 8
  %197 = load i64* %cppVar_1117, align 8
  invoke void @_ZN8type_memItLj8EE2wrEll(%1* %cppVar_1118, i64 %196, i64 %197)
          to label %198 unwind label %64

; <label>:198                                     ; preds = %195
  %199 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1097, %1* %cppVar_1118)
          to label %200 unwind label %64

; <label>:200                                     ; preds = %198
  br label %205

; <label>:201                                     ; preds = %89
  %202 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %203 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1097, %1* %202)
          to label %204 unwind label %64

; <label>:204                                     ; preds = %201
  br label %205

; <label>:205                                     ; preds = %204, %200
  %206 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1093, %1* %cppVar_1097)
          to label %207 unwind label %64

; <label>:207                                     ; preds = %205
  br label %325

; <label>:208                                     ; preds = %84
  %209 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %210 = load i64* %209, align 8
  %211 = icmp eq i64 %210, 1
  %212 = zext i1 %211 to i8
  store i8 %212, i8* %cppVar_1121, align 1
  %213 = load i8* %cppVar_1092, align 1
  %214 = trunc i8 %213 to i1
  br i1 %214, label %215, label %218

; <label>:215                                     ; preds = %208
  %216 = load i8* %cppVar_1121, align 1
  %217 = trunc i8 %216 to i1
  br label %218

; <label>:218                                     ; preds = %215, %208
  %219 = phi i1 [ false, %208 ], [ %217, %215 ]
  %220 = zext i1 %219 to i8
  store i8 %220, i8* %cppVar_1122, align 1
  %221 = load i8* %cppVar_1122, align 1
  %222 = trunc i8 %221 to i1
  br i1 %222, label %223, label %274

; <label>:223                                     ; preds = %218
  %224 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %225 = load i64* %224, align 8
  %226 = ashr i64 %225, 0
  %227 = getelementptr inbounds %class.model_train* %17, i32 0, i32 40
  %228 = load i64* %227, align 8
  %229 = and i64 %226, %228
  store i64 %229, i64* %cppVar_1123, align 8
  %230 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %231 = load i64* %230, align 8
  %232 = ashr i64 %231, 0
  %233 = getelementptr inbounds %class.model_train* %17, i32 0, i32 40
  %234 = load i64* %233, align 8
  %235 = and i64 %232, %234
  store i64 %235, i64* %cppVar_1124, align 8
  %236 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %237 = load i64* %cppVar_1124, align 8
  %238 = invoke i64 @_ZN8type_memItLj8EE2rdEl(%1* %236, i64 %237)
          to label %239 unwind label %64

; <label>:239                                     ; preds = %223
  store i64 %238, i64* %cppVar_1125, align 8
  %240 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %241 = load i64* %240, align 8
  %242 = icmp eq i64 %241, 0
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %cppVar_1128, align 1
  %244 = load i8* %cppVar_1128, align 1
  %245 = trunc i8 %244 to i1
  br i1 %245, label %246, label %255

; <label>:246                                     ; preds = %239
  %247 = getelementptr inbounds %class.model_train* %17, i32 0, i32 27
  %248 = load i64* %247, align 8
  %249 = sub nsw i64 %248, 62
  store i64 %249, i64* %cppVar_1130, align 8
  %250 = load i64* %cppVar_1130, align 8
  %251 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %252 = load i64* %251, align 8
  %253 = and i64 %250, %252
  store i64 %253, i64* %cppVar_1130, align 8
  %254 = load i64* %cppVar_1130, align 8
  store i64 %254, i64* %cppVar_1126, align 8
  br label %258

; <label>:255                                     ; preds = %239
  %256 = getelementptr inbounds %class.model_train* %17, i32 0, i32 27
  %257 = load i64* %256, align 8
  store i64 %257, i64* %cppVar_1126, align 8
  br label %258

; <label>:258                                     ; preds = %255, %246
  %259 = load i64* %cppVar_1125, align 8
  %260 = load i64* %cppVar_1126, align 8
  %261 = sub nsw i64 %259, %260
  store i64 %261, i64* %cppVar_1131, align 8
  %262 = load i64* %cppVar_1131, align 8
  %263 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %264 = load i64* %263, align 8
  %265 = and i64 %262, %264
  store i64 %265, i64* %cppVar_1131, align 8
  %266 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %267 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1132, %1* %266)
          to label %268 unwind label %64

; <label>:268                                     ; preds = %258
  %269 = load i64* %cppVar_1123, align 8
  %270 = load i64* %cppVar_1131, align 8
  invoke void @_ZN8type_memItLj8EE2wrEll(%1* %cppVar_1132, i64 %269, i64 %270)
          to label %271 unwind label %64

; <label>:271                                     ; preds = %268
  %272 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1119, %1* %cppVar_1132)
          to label %273 unwind label %64

; <label>:273                                     ; preds = %271
  br label %322

; <label>:274                                     ; preds = %218
  %275 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %276 = load i64* %275, align 8
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  store i8 %278, i8* %cppVar_1135, align 1
  %279 = load i8* %cppVar_1092, align 1
  %280 = trunc i8 %279 to i1
  br i1 %280, label %281, label %284

; <label>:281                                     ; preds = %274
  %282 = load i8* %cppVar_1135, align 1
  %283 = trunc i8 %282 to i1
  br label %284

; <label>:284                                     ; preds = %281, %274
  %285 = phi i1 [ false, %274 ], [ %283, %281 ]
  %286 = zext i1 %285 to i8
  store i8 %286, i8* %cppVar_1136, align 1
  %287 = load i8* %cppVar_1136, align 1
  %288 = trunc i8 %287 to i1
  br i1 %288, label %289, label %293

; <label>:289                                     ; preds = %284
  %290 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %291 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1133, %1* %290)
          to label %292 unwind label %64

; <label>:292                                     ; preds = %289
  br label %319

; <label>:293                                     ; preds = %284
  %294 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %295 = load i64* %294, align 8
  %296 = icmp eq i64 %295, 3
  %297 = zext i1 %296 to i8
  store i8 %297, i8* %cppVar_1139, align 1
  %298 = load i8* %cppVar_1092, align 1
  %299 = trunc i8 %298 to i1
  br i1 %299, label %300, label %303

; <label>:300                                     ; preds = %293
  %301 = load i8* %cppVar_1139, align 1
  %302 = trunc i8 %301 to i1
  br label %303

; <label>:303                                     ; preds = %300, %293
  %304 = phi i1 [ false, %293 ], [ %302, %300 ]
  %305 = zext i1 %304 to i8
  store i8 %305, i8* %cppVar_1140, align 1
  %306 = load i8* %cppVar_1140, align 1
  %307 = trunc i8 %306 to i1
  br i1 %307, label %308, label %312

; <label>:308                                     ; preds = %303
  %309 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %310 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1137, %1* %309)
          to label %311 unwind label %64

; <label>:311                                     ; preds = %308
  br label %316

; <label>:312                                     ; preds = %303
  %313 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %314 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1137, %1* %313)
          to label %315 unwind label %64

; <label>:315                                     ; preds = %312
  br label %316

; <label>:316                                     ; preds = %315, %311
  %317 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1133, %1* %cppVar_1137)
          to label %318 unwind label %64

; <label>:318                                     ; preds = %316
  br label %319

; <label>:319                                     ; preds = %318, %292
  %320 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1119, %1* %cppVar_1133)
          to label %321 unwind label %64

; <label>:321                                     ; preds = %319
  br label %322

; <label>:322                                     ; preds = %321, %273
  %323 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1093, %1* %cppVar_1119)
          to label %324 unwind label %64

; <label>:324                                     ; preds = %322
  br label %325

; <label>:325                                     ; preds = %324, %207
  %326 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1090, %1* %cppVar_1093)
          to label %327 unwind label %64

; <label>:327                                     ; preds = %325
  br label %346

; <label>:328                                     ; preds = %67
  %329 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %330 = load i64* %329, align 8
  %331 = icmp eq i64 %330, 2
  %332 = zext i1 %331 to i8
  store i8 %332, i8* %cppVar_1143, align 1
  %333 = load i8* %cppVar_1143, align 1
  %334 = trunc i8 %333 to i1
  br i1 %334, label %335, label %339

; <label>:335                                     ; preds = %328
  %336 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %337 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1141, %1* %336)
          to label %338 unwind label %64

; <label>:338                                     ; preds = %335
  br label %343

; <label>:339                                     ; preds = %328
  %340 = getelementptr inbounds %class.model_train* %17, i32 0, i32 32
  %341 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1141, %1* %340)
          to label %342 unwind label %64

; <label>:342                                     ; preds = %339
  br label %343

; <label>:343                                     ; preds = %342, %338
  %344 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_1090, %1* %cppVar_1141)
          to label %345 unwind label %64

; <label>:345                                     ; preds = %343
  br label %346

; <label>:346                                     ; preds = %345, %327
  %347 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %agg.result, %1* %cppVar_1090)
          to label %348 unwind label %64

; <label>:348                                     ; preds = %346
  br label %349

; <label>:349                                     ; preds = %348, %36
  store i1 true, i1* %15
  store i32 1, i32* %16
  %350 = load i1* %15
  br i1 %350, label %353, label %351

; <label>:351                                     ; preds = %349
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %agg.result)
          to label %352 unwind label %61

; <label>:352                                     ; preds = %351
  br label %353

; <label>:353                                     ; preds = %352, %349
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1090)
          to label %355 unwind label %58

; <label>:354                                     ; preds = %64
  br label %356

; <label>:355                                     ; preds = %353
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1141)
          to label %358 unwind label %55

; <label>:356                                     ; preds = %354, %61
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1090)
          to label %357 unwind label %383

; <label>:357                                     ; preds = %356
  br label %359

; <label>:358                                     ; preds = %355
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1093)
          to label %361 unwind label %52

; <label>:359                                     ; preds = %357, %58
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1141)
          to label %360 unwind label %383

; <label>:360                                     ; preds = %359
  br label %362

; <label>:361                                     ; preds = %358
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1119)
          to label %364 unwind label %49

; <label>:362                                     ; preds = %360, %55
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1093)
          to label %363 unwind label %383

; <label>:363                                     ; preds = %362
  br label %365

; <label>:364                                     ; preds = %361
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1133)
          to label %367 unwind label %46

; <label>:365                                     ; preds = %363, %52
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1119)
          to label %366 unwind label %383

; <label>:366                                     ; preds = %365
  br label %368

; <label>:367                                     ; preds = %364
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1137)
          to label %370 unwind label %43

; <label>:368                                     ; preds = %366, %49
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1133)
          to label %369 unwind label %383

; <label>:369                                     ; preds = %368
  br label %371

; <label>:370                                     ; preds = %367
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1132)
          to label %373 unwind label %40

; <label>:371                                     ; preds = %369, %46
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1137)
          to label %372 unwind label %383

; <label>:372                                     ; preds = %371
  br label %374

; <label>:373                                     ; preds = %370
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1097)
          to label %376 unwind label %37

; <label>:374                                     ; preds = %372, %43
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1132)
          to label %375 unwind label %383

; <label>:375                                     ; preds = %374
  br label %377

; <label>:376                                     ; preds = %373
  call void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1118)
  ret void

; <label>:377                                     ; preds = %375, %40
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1097)
          to label %378 unwind label %383

; <label>:378                                     ; preds = %377
  br label %379

; <label>:379                                     ; preds = %378, %37
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1118)
          to label %380 unwind label %383

; <label>:380                                     ; preds = %379
  br label %381

; <label>:381                                     ; preds = %380
  %382 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %382) noreturn
  unreachable

; <label>:383                                     ; preds = %379, %377, %374, %371, %368, %365, %362, %359, %356, %64
  %384 = call i8* @llvm.eh.exception() nounwind
  %385 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %384, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memItLj8EEC1Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  call void @_ZN8type_memItLj8EEC2Ev(%1* %2)
  ret void
}

define linkonce_odr %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %this, %1* %r) align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  store %1* %r, %1** %2, align 8
  %3 = load %1** %1
  %4 = getelementptr inbounds %1* %3, i32 0, i32 0
  %5 = load i16** %4, align 8
  %6 = bitcast i16* %5 to i8*
  %7 = load %1** %2
  %8 = getelementptr inbounds %1* %7, i32 0, i32 0
  %9 = load i16** %8, align 8
  %10 = bitcast i16* %9 to i8*
  call void @__CPROVER_array_copy(i8* %6, i8* %10)
  ret %1* %3
}

define linkonce_odr void @_ZN8type_memItLj8EE2wrEll(%1* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %1** %1
  %5 = load i64* %3, align 8
  %6 = trunc i64 %5 to i16
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %1* %4, i32 0, i32 0
  %9 = load i16** %8, align 8
  %10 = getelementptr inbounds i16* %9, i64 %7
  store i16 %6, i16* %10
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EED1Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  call void @_ZN8type_memItLj8EED2Ev(%1* %2)
  ret void
}

define void @_ZN11model_train25cppUpdateFun_visible_unitElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1146 = alloca i64, align 8
  %cppVar_1147 = alloca i8, align 1
  %cppVar_1149 = alloca i64, align 8
  %cppVar_1150 = alloca i8, align 1
  %cppVar_1193 = alloca i64, align 8
  %cppVar_1194 = alloca i8, align 1
  %cppVar_1168 = alloca i64, align 8
  %cppVar_1169 = alloca i8, align 1
  %cppVar_1170 = alloca i64, align 8
  %cppVar_1171 = alloca i64, align 8
  %cppVar_1172 = alloca i8, align 1
  %cppVar_1173 = alloca i64, align 8
  %cppVar_1174 = alloca i64, align 8
  %cppVar_1175 = alloca i64, align 8
  %cppVar_1176 = alloca i8, align 1
  %cppVar_1177 = alloca i8, align 1
  %cppVar_1152 = alloca i64, align 8
  %cppVar_1153 = alloca i8, align 1
  %cppVar_1154 = alloca i8, align 1
  %cppVar_1156 = alloca i64, align 8
  %cppVar_1157 = alloca i8, align 1
  %cppVar_1158 = alloca i8, align 1
  %cppVar_1160 = alloca i64, align 8
  %cppVar_1161 = alloca i8, align 1
  %cppVar_1162 = alloca i8, align 1
  %cppVar_1164 = alloca i64, align 8
  %cppVar_1165 = alloca i8, align 1
  %cppVar_1166 = alloca i8, align 1
  %cppVar_1182 = alloca i64, align 8
  %cppVar_1183 = alloca i64, align 8
  %cppVar_1184 = alloca i64, align 8
  %cppVar_1185 = alloca i64, align 8
  %cppVar_1186 = alloca i8, align 1
  %cppVar_1181 = alloca i64, align 8
  %cppVar_1179 = alloca i64, align 8
  %cppVar_1180 = alloca i64, align 8
  %cppVar_1189 = alloca %class.SysCArray1D, align 8
  %cppVar_1178 = alloca i8, align 1
  %cppVar_1190 = alloca i64, align 8
  %cppVar_1191 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_1167 = alloca %class.SysCArray1D, align 8
  %cppVar_1163 = alloca %class.SysCArray1D, align 8
  %cppVar_1159 = alloca %class.SysCArray1D, align 8
  %cppVar_1155 = alloca %class.SysCArray1D, align 8
  %cppVar_1151 = alloca %class.SysCArray1D, align 8
  %cppVar_1188 = alloca i64, align 8
  %cppVar_1187 = alloca i64, align 8
  %cppVar_1192 = alloca %class.SysCArray1D, align 8
  %cppVar_1148 = alloca %class.SysCArray1D, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_train** %1
  call void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1189)
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1191)
          to label %18 unwind label %37

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1167)
          to label %19 unwind label %40

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1163)
          to label %20 unwind label %43

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1159)
          to label %21 unwind label %46

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1155)
          to label %22 unwind label %49

; <label>:22                                      ; preds = %21
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1151)
          to label %23 unwind label %52

; <label>:23                                      ; preds = %22
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1192)
          to label %24 unwind label %55

; <label>:24                                      ; preds = %23
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_1148)
          to label %25 unwind label %58

; <label>:25                                      ; preds = %24
  store i1 false, i1* %15
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %agg.result)
          to label %26 unwind label %61

; <label>:26                                      ; preds = %25
  %27 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %28 = load i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %cppVar_1147, align 1
  %31 = load i8* %cppVar_1147, align 1
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %67

; <label>:33                                      ; preds = %26
  %34 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %35 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %34)
          to label %36 unwind label %64

; <label>:36                                      ; preds = %33
  br label %295

; <label>:37                                      ; preds = %319, %0
  %38 = call i8* @llvm.eh.exception() nounwind
  store i8* %38, i8** %13
  %39 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %38, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %325

; <label>:40                                      ; preds = %316, %18
  %41 = call i8* @llvm.eh.exception() nounwind
  store i8* %41, i8** %13
  %42 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %41, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %323

; <label>:43                                      ; preds = %313, %19
  %44 = call i8* @llvm.eh.exception() nounwind
  store i8* %44, i8** %13
  %45 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %44, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %320

; <label>:46                                      ; preds = %310, %20
  %47 = call i8* @llvm.eh.exception() nounwind
  store i8* %47, i8** %13
  %48 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %47, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %317

; <label>:49                                      ; preds = %307, %21
  %50 = call i8* @llvm.eh.exception() nounwind
  store i8* %50, i8** %13
  %51 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %50, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %314

; <label>:52                                      ; preds = %304, %22
  %53 = call i8* @llvm.eh.exception() nounwind
  store i8* %53, i8** %13
  %54 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %53, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %311

; <label>:55                                      ; preds = %301, %23
  %56 = call i8* @llvm.eh.exception() nounwind
  store i8* %56, i8** %13
  %57 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %56, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %308

; <label>:58                                      ; preds = %299, %24
  %59 = call i8* @llvm.eh.exception() nounwind
  store i8* %59, i8** %13
  %60 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %59, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %305

; <label>:61                                      ; preds = %297, %25
  %62 = call i8* @llvm.eh.exception() nounwind
  store i8* %62, i8** %13
  %63 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %62, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %302

; <label>:64                                      ; preds = %292, %289, %285, %281, %271, %268, %265, %262, %258, %255, %252, %249, %247, %239, %236, %233, %220, %215, %191, %127, %108, %89, %33
  %65 = call i8* @llvm.eh.exception() nounwind
  store i8* %65, i8** %13
  %66 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %65, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %agg.result)
          to label %300 unwind label %329

; <label>:67                                      ; preds = %26
  %68 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %69 = load i64* %68, align 8
  %70 = icmp eq i64 %69, 1
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %cppVar_1150, align 1
  %72 = load i8* %cppVar_1150, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %274

; <label>:74                                      ; preds = %67
  %75 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %76 = load i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %cppVar_1153, align 1
  %79 = load i8* %cppVar_1150, align 1
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %84

; <label>:81                                      ; preds = %74
  %82 = load i8* %cppVar_1153, align 1
  %83 = trunc i8 %82 to i1
  br label %84

; <label>:84                                      ; preds = %81, %74
  %85 = phi i1 [ false, %74 ], [ %83, %81 ]
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %cppVar_1154, align 1
  %87 = load i8* %cppVar_1154, align 1
  %88 = trunc i8 %87 to i1
  br i1 %88, label %89, label %93

; <label>:89                                      ; preds = %84
  %90 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %91 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1151, %class.SysCArray1D* %90)
          to label %92 unwind label %64

; <label>:92                                      ; preds = %89
  br label %271

; <label>:93                                      ; preds = %84
  %94 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %95 = load i64* %94, align 8
  %96 = icmp eq i64 %95, 1
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %cppVar_1157, align 1
  %98 = load i8* %cppVar_1150, align 1
  %99 = trunc i8 %98 to i1
  br i1 %99, label %100, label %103

; <label>:100                                     ; preds = %93
  %101 = load i8* %cppVar_1157, align 1
  %102 = trunc i8 %101 to i1
  br label %103

; <label>:103                                     ; preds = %100, %93
  %104 = phi i1 [ false, %93 ], [ %102, %100 ]
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %cppVar_1158, align 1
  %106 = load i8* %cppVar_1158, align 1
  %107 = trunc i8 %106 to i1
  br i1 %107, label %108, label %112

; <label>:108                                     ; preds = %103
  %109 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %110 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1155, %class.SysCArray1D* %109)
          to label %111 unwind label %64

; <label>:111                                     ; preds = %108
  br label %268

; <label>:112                                     ; preds = %103
  %113 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %114 = load i64* %113, align 8
  %115 = icmp eq i64 %114, 2
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %cppVar_1161, align 1
  %117 = load i8* %cppVar_1150, align 1
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %122

; <label>:119                                     ; preds = %112
  %120 = load i8* %cppVar_1161, align 1
  %121 = trunc i8 %120 to i1
  br label %122

; <label>:122                                     ; preds = %119, %112
  %123 = phi i1 [ false, %112 ], [ %121, %119 ]
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %cppVar_1162, align 1
  %125 = load i8* %cppVar_1162, align 1
  %126 = trunc i8 %125 to i1
  br i1 %126, label %127, label %131

; <label>:127                                     ; preds = %122
  %128 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %129 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1159, %class.SysCArray1D* %128)
          to label %130 unwind label %64

; <label>:130                                     ; preds = %127
  br label %265

; <label>:131                                     ; preds = %122
  %132 = getelementptr inbounds %class.model_train* %17, i32 0, i32 15
  %133 = load i64* %132, align 8
  %134 = icmp eq i64 %133, 3
  %135 = zext i1 %134 to i8
  store i8 %135, i8* %cppVar_1165, align 1
  %136 = load i8* %cppVar_1150, align 1
  %137 = trunc i8 %136 to i1
  br i1 %137, label %138, label %141

; <label>:138                                     ; preds = %131
  %139 = load i8* %cppVar_1165, align 1
  %140 = trunc i8 %139 to i1
  br label %141

; <label>:141                                     ; preds = %138, %131
  %142 = phi i1 [ false, %131 ], [ %140, %138 ]
  %143 = zext i1 %142 to i8
  store i8 %143, i8* %cppVar_1166, align 1
  %144 = load i8* %cppVar_1166, align 1
  %145 = trunc i8 %144 to i1
  br i1 %145, label %146, label %258

; <label>:146                                     ; preds = %141
  %147 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %148 = load i64* %147, align 8
  %149 = icmp eq i64 %148, 4
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %cppVar_1169, align 1
  %151 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %152 = load i64* %151, align 8
  %153 = add nsw i64 %152, 5
  store i64 %153, i64* %cppVar_1171, align 8
  %154 = load i64* %cppVar_1171, align 8
  %155 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %156 = load i64* %155, align 8
  %157 = and i64 %154, %156
  store i64 %157, i64* %cppVar_1171, align 8
  %158 = load i64* %cppVar_1171, align 8
  %159 = getelementptr inbounds %class.model_train* %17, i32 0, i32 14
  %160 = load i64* %159, align 8
  %161 = icmp eq i64 %158, %160
  %162 = zext i1 %161 to i8
  store i8 %162, i8* %cppVar_1172, align 1
  %163 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %164 = load i64* %163, align 8
  %165 = add nsw i64 %164, 5
  store i64 %165, i64* %cppVar_1174, align 8
  %166 = load i64* %cppVar_1174, align 8
  %167 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %168 = load i64* %167, align 8
  %169 = and i64 %166, %168
  store i64 %169, i64* %cppVar_1174, align 8
  %170 = load i64* %cppVar_1174, align 8
  %171 = icmp sge i64 %170, 500
  %172 = zext i1 %171 to i8
  store i8 %172, i8* %cppVar_1176, align 1
  %173 = load i8* %cppVar_1172, align 1
  %174 = trunc i8 %173 to i1
  br i1 %174, label %178, label %175

; <label>:175                                     ; preds = %146
  %176 = load i8* %cppVar_1176, align 1
  %177 = trunc i8 %176 to i1
  br label %178

; <label>:178                                     ; preds = %175, %146
  %179 = phi i1 [ true, %146 ], [ %177, %175 ]
  %180 = zext i1 %179 to i8
  store i8 %180, i8* %cppVar_1177, align 1
  %181 = load i8* %cppVar_1169, align 1
  %182 = trunc i8 %181 to i1
  br i1 %182, label %183, label %186

; <label>:183                                     ; preds = %178
  %184 = load i8* %cppVar_1177, align 1
  %185 = trunc i8 %184 to i1
  br label %186

; <label>:186                                     ; preds = %183, %178
  %187 = phi i1 [ false, %178 ], [ %185, %183 ]
  %188 = zext i1 %187 to i8
  store i8 %188, i8* %cppVar_1178, align 1
  %189 = load i8* %cppVar_1178, align 1
  %190 = trunc i8 %189 to i1
  br i1 %190, label %191, label %252

; <label>:191                                     ; preds = %186
  %192 = getelementptr inbounds %class.model_train* %17, i32 0, i32 30
  %193 = load i64* %192, align 8
  %194 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %195 = load i64* %194, align 8
  %196 = add nsw i64 %193, %195
  store i64 %196, i64* %cppVar_1179, align 8
  %197 = load i64* %cppVar_1179, align 8
  %198 = getelementptr inbounds %class.model_train* %17, i32 0, i32 39
  %199 = load i64* %198, align 8
  %200 = and i64 %197, %199
  store i64 %200, i64* %cppVar_1179, align 8
  %201 = load i64* %cppVar_1179, align 8
  %202 = ashr i64 %201, 0
  %203 = getelementptr inbounds %class.model_train* %17, i32 0, i32 45
  %204 = load i64* %203, align 8
  %205 = and i64 %202, %204
  store i64 %205, i64* %cppVar_1180, align 8
  %206 = getelementptr inbounds %class.model_train* %17, i32 0, i32 7
  %207 = load i64* %206, align 8
  %208 = ashr i64 %207, 0
  %209 = getelementptr inbounds %class.model_train* %17, i32 0, i32 40
  %210 = load i64* %209, align 8
  %211 = and i64 %208, %210
  store i64 %211, i64* %cppVar_1182, align 8
  %212 = getelementptr inbounds %class.model_train* %17, i32 0, i32 17
  %213 = load i64* %cppVar_1182, align 8
  %214 = invoke i64 @_ZN8type_memIjLj8EE2rdEl(%0* %212, i64 %213)
          to label %215 unwind label %64

; <label>:215                                     ; preds = %191
  store i64 %214, i64* %cppVar_1183, align 8
  %216 = load i64* %cppVar_1183, align 8
  %217 = getelementptr inbounds %class.model_train* %17, i32 0, i32 24
  %218 = load i64* %217, align 8
  %219 = invoke zeroext i16 @_Z6dividell(i64 %216, i64 %218)
          to label %220 unwind label %64

; <label>:220                                     ; preds = %215
  %221 = zext i16 %219 to i64
  store i64 %221, i64* %cppVar_1184, align 8
  %222 = invoke zeroext i16 @_Z4randv()
          to label %223 unwind label %64

; <label>:223                                     ; preds = %220
  %224 = zext i16 %222 to i64
  store i64 %224, i64* %cppVar_1185, align 8
  %225 = load i64* %cppVar_1184, align 8
  %226 = load i64* %cppVar_1185, align 8
  %227 = icmp sgt i64 %225, %226
  %228 = zext i1 %227 to i8
  store i8 %228, i8* %cppVar_1186, align 1
  %229 = load i8* %cppVar_1186, align 1
  %230 = trunc i8 %229 to i1
  br i1 %230, label %231, label %232

; <label>:231                                     ; preds = %223
  store i64 1, i64* %cppVar_1181, align 8
  br label %233

; <label>:232                                     ; preds = %223
  store i64 0, i64* %cppVar_1181, align 8
  br label %233

; <label>:233                                     ; preds = %232, %231
  %234 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %235 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1189, %class.SysCArray1D* %234)
          to label %236 unwind label %64

; <label>:236                                     ; preds = %233
  %237 = load i64* %cppVar_1180, align 8
  %238 = load i64* %cppVar_1181, align 8
  invoke void @_ZN8type_memIbLj512EE2wrEll(%class.SysCArray1D* %cppVar_1189, i64 %237, i64 %238)
          to label %239 unwind label %64

; <label>:239                                     ; preds = %236
  %240 = getelementptr inbounds %class.model_train* %17, i32 0, i32 14
  %241 = load i64* %240, align 8
  %242 = ashr i64 %241, 0
  %243 = getelementptr inbounds %class.model_train* %17, i32 0, i32 45
  %244 = load i64* %243, align 8
  %245 = and i64 %242, %244
  store i64 %245, i64* %cppVar_1190, align 8
  %246 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1191, %class.SysCArray1D* %cppVar_1189)
          to label %247 unwind label %64

; <label>:247                                     ; preds = %239
  %248 = load i64* %cppVar_1190, align 8
  invoke void @_ZN8type_memIbLj512EE2wrEll(%class.SysCArray1D* %cppVar_1191, i64 %248, i64 1)
          to label %249 unwind label %64

; <label>:249                                     ; preds = %247
  %250 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1167, %class.SysCArray1D* %cppVar_1191)
          to label %251 unwind label %64

; <label>:251                                     ; preds = %249
  br label %255

; <label>:252                                     ; preds = %186
  %253 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1167, %class.SysCArray1D* %cppVar_1189)
          to label %254 unwind label %64

; <label>:254                                     ; preds = %252
  br label %255

; <label>:255                                     ; preds = %254, %251
  %256 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1163, %class.SysCArray1D* %cppVar_1167)
          to label %257 unwind label %64

; <label>:257                                     ; preds = %255
  br label %262

; <label>:258                                     ; preds = %141
  %259 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %260 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1163, %class.SysCArray1D* %259)
          to label %261 unwind label %64

; <label>:261                                     ; preds = %258
  br label %262

; <label>:262                                     ; preds = %261, %257
  %263 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1159, %class.SysCArray1D* %cppVar_1163)
          to label %264 unwind label %64

; <label>:264                                     ; preds = %262
  br label %265

; <label>:265                                     ; preds = %264, %130
  %266 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1155, %class.SysCArray1D* %cppVar_1159)
          to label %267 unwind label %64

; <label>:267                                     ; preds = %265
  br label %268

; <label>:268                                     ; preds = %267, %111
  %269 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1151, %class.SysCArray1D* %cppVar_1155)
          to label %270 unwind label %64

; <label>:270                                     ; preds = %268
  br label %271

; <label>:271                                     ; preds = %270, %92
  %272 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1148, %class.SysCArray1D* %cppVar_1151)
          to label %273 unwind label %64

; <label>:273                                     ; preds = %271
  br label %292

; <label>:274                                     ; preds = %67
  %275 = getelementptr inbounds %class.model_train* %17, i32 0, i32 29
  %276 = load i64* %275, align 8
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  store i8 %278, i8* %cppVar_1194, align 1
  %279 = load i8* %cppVar_1194, align 1
  %280 = trunc i8 %279 to i1
  br i1 %280, label %281, label %285

; <label>:281                                     ; preds = %274
  %282 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %283 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1192, %class.SysCArray1D* %282)
          to label %284 unwind label %64

; <label>:284                                     ; preds = %281
  br label %289

; <label>:285                                     ; preds = %274
  %286 = getelementptr inbounds %class.model_train* %17, i32 0, i32 33
  %287 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1192, %class.SysCArray1D* %286)
          to label %288 unwind label %64

; <label>:288                                     ; preds = %285
  br label %289

; <label>:289                                     ; preds = %288, %284
  %290 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_1148, %class.SysCArray1D* %cppVar_1192)
          to label %291 unwind label %64

; <label>:291                                     ; preds = %289
  br label %292

; <label>:292                                     ; preds = %291, %273
  %293 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_1148)
          to label %294 unwind label %64

; <label>:294                                     ; preds = %292
  br label %295

; <label>:295                                     ; preds = %294, %36
  store i1 true, i1* %15
  store i32 1, i32* %16
  %296 = load i1* %15
  br i1 %296, label %299, label %297

; <label>:297                                     ; preds = %295
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %agg.result)
          to label %298 unwind label %61

; <label>:298                                     ; preds = %297
  br label %299

; <label>:299                                     ; preds = %298, %295
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1148)
          to label %301 unwind label %58

; <label>:300                                     ; preds = %64
  br label %302

; <label>:301                                     ; preds = %299
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1192)
          to label %304 unwind label %55

; <label>:302                                     ; preds = %300, %61
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1148)
          to label %303 unwind label %329

; <label>:303                                     ; preds = %302
  br label %305

; <label>:304                                     ; preds = %301
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1151)
          to label %307 unwind label %52

; <label>:305                                     ; preds = %303, %58
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1192)
          to label %306 unwind label %329

; <label>:306                                     ; preds = %305
  br label %308

; <label>:307                                     ; preds = %304
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1155)
          to label %310 unwind label %49

; <label>:308                                     ; preds = %306, %55
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1151)
          to label %309 unwind label %329

; <label>:309                                     ; preds = %308
  br label %311

; <label>:310                                     ; preds = %307
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1159)
          to label %313 unwind label %46

; <label>:311                                     ; preds = %309, %52
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1155)
          to label %312 unwind label %329

; <label>:312                                     ; preds = %311
  br label %314

; <label>:313                                     ; preds = %310
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1163)
          to label %316 unwind label %43

; <label>:314                                     ; preds = %312, %49
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1159)
          to label %315 unwind label %329

; <label>:315                                     ; preds = %314
  br label %317

; <label>:316                                     ; preds = %313
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1167)
          to label %319 unwind label %40

; <label>:317                                     ; preds = %315, %46
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1163)
          to label %318 unwind label %329

; <label>:318                                     ; preds = %317
  br label %320

; <label>:319                                     ; preds = %316
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1191)
          to label %322 unwind label %37

; <label>:320                                     ; preds = %318, %43
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1167)
          to label %321 unwind label %329

; <label>:321                                     ; preds = %320
  br label %323

; <label>:322                                     ; preds = %319
  call void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1189)
  ret void

; <label>:323                                     ; preds = %321, %40
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1191)
          to label %324 unwind label %329

; <label>:324                                     ; preds = %323
  br label %325

; <label>:325                                     ; preds = %324, %37
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1189)
          to label %326 unwind label %329

; <label>:326                                     ; preds = %325
  br label %327

; <label>:327                                     ; preds = %326
  %328 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %328) noreturn
  unreachable

; <label>:329                                     ; preds = %325, %323, %320, %317, %314, %311, %308, %305, %302, %64
  %330 = call i8* @llvm.eh.exception() nounwind
  %331 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %330, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj512EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

define linkonce_odr i64 @_ZN8type_memIjLj8EE2rdEl(%0* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %0** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %0* %3, i32 0, i32 0
  %6 = load i32** %5, align 8
  %7 = getelementptr inbounds i32* %6, i64 %4
  %8 = load i32* %7
  %9 = zext i32 %8 to i64
  ret i64 %9
}

define linkonce_odr void @_ZN8type_memIbLj512EE2wrEll(%class.SysCArray1D* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %class.SysCArray1D** %1
  %5 = load i64* %3, align 8
  %6 = icmp ne i64 %5, 0
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %class.SysCArray1D* %4, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = getelementptr inbounds i8* %9, i64 %7
  %11 = zext i1 %6 to i8
  store i8 %11, i8* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj512EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define void @_ZN11model_train6updateElllllllllll(%class.model_train* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_512 = alloca i64, align 8
  %cppVar_549 = alloca i64, align 8
  %cppVar_571 = alloca i64, align 8
  %cppVar_618 = alloca i64, align 8
  %cppVar_654 = alloca i64, align 8
  %cppVar_704 = alloca i64, align 8
  %cppVar_719 = alloca i64, align 8
  %cppVar_777 = alloca i64, align 8
  %cppVar_837 = alloca i64, align 8
  %cppVar_884 = alloca i64, align 8
  %cppVar_932 = alloca i64, align 8
  %cppVar_947 = alloca i64, align 8
  %cppVar_990 = alloca %class.SysCArray1D, align 8
  %cppVar_1037 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_1055 = alloca %class.SysCArray1D, align 8
  %cppVar_1086 = alloca %0, align 8
  %cppVar_1144 = alloca %1, align 8
  %cppVar_1195 = alloca %class.SysCArray1D, align 8
  %15 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %16 = load %class.model_train** %1
  %17 = load i64* %2, align 8
  %18 = load i64* %3, align 8
  %19 = load i64* %4, align 8
  %20 = load i64* %5, align 8
  %21 = load i64* %6, align 8
  %22 = load i64* %7, align 8
  %23 = load i64* %8, align 8
  %24 = load i64* %9, align 8
  %25 = load i64* %10, align 8
  %26 = load i64* %11, align 8
  %27 = load i64* %12, align 8
  %28 = call i64 @_ZN11model_train18cppUpdateFun_indexElllllllllll(%class.model_train* %16, i64 %17, i64 %18, i64 %19, i64 %20, i64 %21, i64 %22, i64 %23, i64 %24, i64 %25, i64 %26, i64 %27)
  store i64 %28, i64* %cppVar_512, align 8
  %29 = load i64* %2, align 8
  %30 = load i64* %3, align 8
  %31 = load i64* %4, align 8
  %32 = load i64* %5, align 8
  %33 = load i64* %6, align 8
  %34 = load i64* %7, align 8
  %35 = load i64* %8, align 8
  %36 = load i64* %9, align 8
  %37 = load i64* %10, align 8
  %38 = load i64* %11, align 8
  %39 = load i64* %12, align 8
  %40 = call i64 @_ZN11model_train19cppUpdateFun_jstateElllllllllll(%class.model_train* %16, i64 %29, i64 %30, i64 %31, i64 %32, i64 %33, i64 %34, i64 %35, i64 %36, i64 %37, i64 %38, i64 %39)
  store i64 %40, i64* %cppVar_549, align 8
  %41 = load i64* %2, align 8
  %42 = load i64* %3, align 8
  %43 = load i64* %4, align 8
  %44 = load i64* %5, align 8
  %45 = load i64* %6, align 8
  %46 = load i64* %7, align 8
  %47 = load i64* %8, align 8
  %48 = load i64* %9, align 8
  %49 = load i64* %10, align 8
  %50 = load i64* %11, align 8
  %51 = load i64* %12, align 8
  %52 = call i64 @_ZN11model_train23cppUpdateFun_loop_countElllllllllll(%class.model_train* %16, i64 %41, i64 %42, i64 %43, i64 %44, i64 %45, i64 %46, i64 %47, i64 %48, i64 %49, i64 %50, i64 %51)
  store i64 %52, i64* %cppVar_571, align 8
  %53 = load i64* %2, align 8
  %54 = load i64* %3, align 8
  %55 = load i64* %4, align 8
  %56 = load i64* %5, align 8
  %57 = load i64* %6, align 8
  %58 = load i64* %7, align 8
  %59 = load i64* %8, align 8
  %60 = load i64* %9, align 8
  %61 = load i64* %10, align 8
  %62 = load i64* %11, align 8
  %63 = load i64* %12, align 8
  %64 = call i64 @_ZN11model_train21cppUpdateFun_per_v_pcElllllllllll(%class.model_train* %16, i64 %53, i64 %54, i64 %55, i64 %56, i64 %57, i64 %58, i64 %59, i64 %60, i64 %61, i64 %62, i64 %63)
  store i64 %64, i64* %cppVar_618, align 8
  %65 = load i64* %2, align 8
  %66 = load i64* %3, align 8
  %67 = load i64* %4, align 8
  %68 = load i64* %5, align 8
  %69 = load i64* %6, align 8
  %70 = load i64* %7, align 8
  %71 = load i64* %8, align 8
  %72 = load i64* %9, align 8
  %73 = load i64* %10, align 8
  %74 = load i64* %11, align 8
  %75 = load i64* %12, align 8
  %76 = call i64 @_ZN11model_train22cppUpdateFun_sumOfpow2Elllllllllll(%class.model_train* %16, i64 %65, i64 %66, i64 %67, i64 %68, i64 %69, i64 %70, i64 %71, i64 %72, i64 %73, i64 %74, i64 %75)
  store i64 %76, i64* %cppVar_654, align 8
  %77 = load i64* %2, align 8
  %78 = load i64* %3, align 8
  %79 = load i64* %4, align 8
  %80 = load i64* %5, align 8
  %81 = load i64* %6, align 8
  %82 = load i64* %7, align 8
  %83 = load i64* %8, align 8
  %84 = load i64* %9, align 8
  %85 = load i64* %10, align 8
  %86 = load i64* %11, align 8
  %87 = load i64* %12, align 8
  %88 = call i64 @_ZN11model_train24cppUpdateFun_train_h_cntElllllllllll(%class.model_train* %16, i64 %77, i64 %78, i64 %79, i64 %80, i64 %81, i64 %82, i64 %83, i64 %84, i64 %85, i64 %86, i64 %87)
  store i64 %88, i64* %cppVar_704, align 8
  %89 = load i64* %2, align 8
  %90 = load i64* %3, align 8
  %91 = load i64* %4, align 8
  %92 = load i64* %5, align 8
  %93 = load i64* %6, align 8
  %94 = load i64* %7, align 8
  %95 = load i64* %8, align 8
  %96 = load i64* %9, align 8
  %97 = load i64* %10, align 8
  %98 = load i64* %11, align 8
  %99 = load i64* %12, align 8
  %100 = call i64 @_ZN11model_train29cppUpdateFun_train_input_doneElllllllllll(%class.model_train* %16, i64 %89, i64 %90, i64 %91, i64 %92, i64 %93, i64 %94, i64 %95, i64 %96, i64 %97, i64 %98, i64 %99)
  store i64 %100, i64* %cppVar_719, align 8
  %101 = load i64* %2, align 8
  %102 = load i64* %3, align 8
  %103 = load i64* %4, align 8
  %104 = load i64* %5, align 8
  %105 = load i64* %6, align 8
  %106 = load i64* %7, align 8
  %107 = load i64* %8, align 8
  %108 = load i64* %9, align 8
  %109 = load i64* %10, align 8
  %110 = load i64* %11, align 8
  %111 = load i64* %12, align 8
  %112 = call i64 @_ZN11model_train22cppUpdateFun_train_maxElllllllllll(%class.model_train* %16, i64 %101, i64 %102, i64 %103, i64 %104, i64 %105, i64 %106, i64 %107, i64 %108, i64 %109, i64 %110, i64 %111)
  store i64 %112, i64* %cppVar_777, align 8
  %113 = load i64* %2, align 8
  %114 = load i64* %3, align 8
  %115 = load i64* %4, align 8
  %116 = load i64* %5, align 8
  %117 = load i64* %6, align 8
  %118 = load i64* %7, align 8
  %119 = load i64* %8, align 8
  %120 = load i64* %9, align 8
  %121 = load i64* %10, align 8
  %122 = load i64* %11, align 8
  %123 = load i64* %12, align 8
  %124 = call i64 @_ZN11model_train22cppUpdateFun_train_sumElllllllllll(%class.model_train* %16, i64 %113, i64 %114, i64 %115, i64 %116, i64 %117, i64 %118, i64 %119, i64 %120, i64 %121, i64 %122, i64 %123)
  store i64 %124, i64* %cppVar_837, align 8
  %125 = load i64* %2, align 8
  %126 = load i64* %3, align 8
  %127 = load i64* %4, align 8
  %128 = load i64* %5, align 8
  %129 = load i64* %6, align 8
  %130 = load i64* %7, align 8
  %131 = load i64* %8, align 8
  %132 = load i64* %9, align 8
  %133 = load i64* %10, align 8
  %134 = load i64* %11, align 8
  %135 = load i64* %12, align 8
  %136 = call i64 @_ZN11model_train22cppUpdateFun_train_upcElllllllllll(%class.model_train* %16, i64 %125, i64 %126, i64 %127, i64 %128, i64 %129, i64 %130, i64 %131, i64 %132, i64 %133, i64 %134, i64 %135)
  store i64 %136, i64* %cppVar_884, align 8
  %137 = load i64* %2, align 8
  %138 = load i64* %3, align 8
  %139 = load i64* %4, align 8
  %140 = load i64* %5, align 8
  %141 = load i64* %6, align 8
  %142 = load i64* %7, align 8
  %143 = load i64* %8, align 8
  %144 = load i64* %9, align 8
  %145 = load i64* %10, align 8
  %146 = load i64* %11, align 8
  %147 = load i64* %12, align 8
  %148 = call i64 @_ZN11model_train24cppUpdateFun_train_v_cntElllllllllll(%class.model_train* %16, i64 %137, i64 %138, i64 %139, i64 %140, i64 %141, i64 %142, i64 %143, i64 %144, i64 %145, i64 %146, i64 %147)
  store i64 %148, i64* %cppVar_932, align 8
  %149 = load i64* %2, align 8
  %150 = load i64* %3, align 8
  %151 = load i64* %4, align 8
  %152 = load i64* %5, align 8
  %153 = load i64* %6, align 8
  %154 = load i64* %7, align 8
  %155 = load i64* %8, align 8
  %156 = load i64* %9, align 8
  %157 = load i64* %10, align 8
  %158 = load i64* %11, align 8
  %159 = load i64* %12, align 8
  %160 = call i64 @_ZN11model_train16cppUpdateFun_upcElllllllllll(%class.model_train* %16, i64 %149, i64 %150, i64 %151, i64 %152, i64 %153, i64 %154, i64 %155, i64 %156, i64 %157, i64 %158, i64 %159)
  store i64 %160, i64* %cppVar_947, align 8
  %161 = load i64* %2, align 8
  %162 = load i64* %3, align 8
  %163 = load i64* %4, align 8
  %164 = load i64* %5, align 8
  %165 = load i64* %6, align 8
  %166 = load i64* %7, align 8
  %167 = load i64* %8, align 8
  %168 = load i64* %9, align 8
  %169 = load i64* %10, align 8
  %170 = load i64* %11, align 8
  %171 = load i64* %12, align 8
  call void @_ZN11model_train18cppUpdateFun_edgesElllllllllll(%class.SysCArray1D* sret %cppVar_990, %class.model_train* %16, i64 %161, i64 %162, i64 %163, i64 %164, i64 %165, i64 %166, i64 %167, i64 %168, i64 %169, i64 %170, i64 %171)
  %172 = load i64* %2, align 8
  %173 = load i64* %3, align 8
  %174 = load i64* %4, align 8
  %175 = load i64* %5, align 8
  %176 = load i64* %6, align 8
  %177 = load i64* %7, align 8
  %178 = load i64* %8, align 8
  %179 = load i64* %9, align 8
  %180 = load i64* %10, align 8
  %181 = load i64* %11, align 8
  %182 = load i64* %12, align 8
  invoke void @_ZN11model_train24cppUpdateFun_hidden_unitElllllllllll(%class.SysCArray1D* sret %cppVar_1037, %class.model_train* %16, i64 %172, i64 %173, i64 %174, i64 %175, i64 %176, i64 %177, i64 %178, i64 %179, i64 %180, i64 %181, i64 %182)
          to label %183 unwind label %274

; <label>:183                                     ; preds = %0
  %184 = load i64* %2, align 8
  %185 = load i64* %3, align 8
  %186 = load i64* %4, align 8
  %187 = load i64* %5, align 8
  %188 = load i64* %6, align 8
  %189 = load i64* %7, align 8
  %190 = load i64* %8, align 8
  %191 = load i64* %9, align 8
  %192 = load i64* %10, align 8
  %193 = load i64* %11, align 8
  %194 = load i64* %12, align 8
  invoke void @_ZN11model_train16cppUpdateFun_posElllllllllll(%class.SysCArray1D* sret %cppVar_1055, %class.model_train* %16, i64 %184, i64 %185, i64 %186, i64 %187, i64 %188, i64 %189, i64 %190, i64 %191, i64 %192, i64 %193, i64 %194)
          to label %195 unwind label %277

; <label>:195                                     ; preds = %183
  %196 = load i64* %2, align 8
  %197 = load i64* %3, align 8
  %198 = load i64* %4, align 8
  %199 = load i64* %5, align 8
  %200 = load i64* %6, align 8
  %201 = load i64* %7, align 8
  %202 = load i64* %8, align 8
  %203 = load i64* %9, align 8
  %204 = load i64* %10, align 8
  %205 = load i64* %11, align 8
  %206 = load i64* %12, align 8
  invoke void @_ZN11model_train17cppUpdateFun_pow2Elllllllllll(%0* sret %cppVar_1086, %class.model_train* %16, i64 %196, i64 %197, i64 %198, i64 %199, i64 %200, i64 %201, i64 %202, i64 %203, i64 %204, i64 %205, i64 %206)
          to label %207 unwind label %280

; <label>:207                                     ; preds = %195
  %208 = load i64* %2, align 8
  %209 = load i64* %3, align 8
  %210 = load i64* %4, align 8
  %211 = load i64* %5, align 8
  %212 = load i64* %6, align 8
  %213 = load i64* %7, align 8
  %214 = load i64* %8, align 8
  %215 = load i64* %9, align 8
  %216 = load i64* %10, align 8
  %217 = load i64* %11, align 8
  %218 = load i64* %12, align 8
  invoke void @_ZN11model_train28cppUpdateFun_visibleEnergiesElllllllllll(%1* sret %cppVar_1144, %class.model_train* %16, i64 %208, i64 %209, i64 %210, i64 %211, i64 %212, i64 %213, i64 %214, i64 %215, i64 %216, i64 %217, i64 %218)
          to label %219 unwind label %283

; <label>:219                                     ; preds = %207
  %220 = load i64* %2, align 8
  %221 = load i64* %3, align 8
  %222 = load i64* %4, align 8
  %223 = load i64* %5, align 8
  %224 = load i64* %6, align 8
  %225 = load i64* %7, align 8
  %226 = load i64* %8, align 8
  %227 = load i64* %9, align 8
  %228 = load i64* %10, align 8
  %229 = load i64* %11, align 8
  %230 = load i64* %12, align 8
  invoke void @_ZN11model_train25cppUpdateFun_visible_unitElllllllllll(%class.SysCArray1D* sret %cppVar_1195, %class.model_train* %16, i64 %220, i64 %221, i64 %222, i64 %223, i64 %224, i64 %225, i64 %226, i64 %227, i64 %228, i64 %229, i64 %230)
          to label %231 unwind label %286

; <label>:231                                     ; preds = %219
  %232 = load i64* %cppVar_512, align 8
  %233 = getelementptr inbounds %class.model_train* %16, i32 0, i32 5
  store i64 %232, i64* %233, align 8
  %234 = load i64* %cppVar_549, align 8
  %235 = getelementptr inbounds %class.model_train* %16, i32 0, i32 7
  store i64 %234, i64* %235, align 8
  %236 = load i64* %cppVar_571, align 8
  %237 = getelementptr inbounds %class.model_train* %16, i32 0, i32 8
  store i64 %236, i64* %237, align 8
  %238 = load i64* %cppVar_618, align 8
  %239 = getelementptr inbounds %class.model_train* %16, i32 0, i32 15
  store i64 %238, i64* %239, align 8
  %240 = load i64* %cppVar_654, align 8
  %241 = getelementptr inbounds %class.model_train* %16, i32 0, i32 24
  store i64 %240, i64* %241, align 8
  %242 = load i64* %cppVar_704, align 8
  %243 = getelementptr inbounds %class.model_train* %16, i32 0, i32 25
  store i64 %242, i64* %243, align 8
  %244 = load i64* %cppVar_719, align 8
  %245 = getelementptr inbounds %class.model_train* %16, i32 0, i32 26
  store i64 %244, i64* %245, align 8
  %246 = load i64* %cppVar_777, align 8
  %247 = getelementptr inbounds %class.model_train* %16, i32 0, i32 27
  store i64 %246, i64* %247, align 8
  %248 = load i64* %cppVar_837, align 8
  %249 = getelementptr inbounds %class.model_train* %16, i32 0, i32 28
  store i64 %248, i64* %249, align 8
  %250 = load i64* %cppVar_884, align 8
  %251 = getelementptr inbounds %class.model_train* %16, i32 0, i32 29
  store i64 %250, i64* %251, align 8
  %252 = load i64* %cppVar_932, align 8
  %253 = getelementptr inbounds %class.model_train* %16, i32 0, i32 30
  store i64 %252, i64* %253, align 8
  %254 = load i64* %cppVar_947, align 8
  %255 = getelementptr inbounds %class.model_train* %16, i32 0, i32 31
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %class.model_train* %16, i32 0, i32 3
  %257 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %256, %class.SysCArray1D* %cppVar_990)
          to label %258 unwind label %289

; <label>:258                                     ; preds = %231
  %259 = getelementptr inbounds %class.model_train* %16, i32 0, i32 4
  %260 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %259, %class.SysCArray1D* %cppVar_1037)
          to label %261 unwind label %289

; <label>:261                                     ; preds = %258
  %262 = getelementptr inbounds %class.model_train* %16, i32 0, i32 16
  %263 = invoke %class.SysCArray1D* @_ZN8type_memIbLj65536EEaSERKS0_(%class.SysCArray1D* %262, %class.SysCArray1D* %cppVar_1055)
          to label %264 unwind label %289

; <label>:264                                     ; preds = %261
  %265 = getelementptr inbounds %class.model_train* %16, i32 0, i32 17
  %266 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %265, %0* %cppVar_1086)
          to label %267 unwind label %289

; <label>:267                                     ; preds = %264
  %268 = getelementptr inbounds %class.model_train* %16, i32 0, i32 32
  %269 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %268, %1* %cppVar_1144)
          to label %270 unwind label %289

; <label>:270                                     ; preds = %267
  %271 = getelementptr inbounds %class.model_train* %16, i32 0, i32 33
  %272 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %271, %class.SysCArray1D* %cppVar_1195)
          to label %273 unwind label %289

; <label>:273                                     ; preds = %270
  store i32 1, i32* %15
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1195)
          to label %292 unwind label %286

; <label>:274                                     ; preds = %300, %0
  %275 = call i8* @llvm.eh.exception() nounwind
  store i8* %275, i8** %13
  %276 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %275, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %306

; <label>:277                                     ; preds = %297, %183
  %278 = call i8* @llvm.eh.exception() nounwind
  store i8* %278, i8** %13
  %279 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %278, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %304

; <label>:280                                     ; preds = %294, %195
  %281 = call i8* @llvm.eh.exception() nounwind
  store i8* %281, i8** %13
  %282 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %281, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %301

; <label>:283                                     ; preds = %292, %207
  %284 = call i8* @llvm.eh.exception() nounwind
  store i8* %284, i8** %13
  %285 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %284, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %298

; <label>:286                                     ; preds = %273, %219
  %287 = call i8* @llvm.eh.exception() nounwind
  store i8* %287, i8** %13
  %288 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %287, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %295

; <label>:289                                     ; preds = %270, %267, %264, %261, %258, %231
  %290 = call i8* @llvm.eh.exception() nounwind
  store i8* %290, i8** %13
  %291 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %290, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_1195)
          to label %293 unwind label %310

; <label>:292                                     ; preds = %273
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1144)
          to label %294 unwind label %283

; <label>:293                                     ; preds = %289
  br label %295

; <label>:294                                     ; preds = %292
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1086)
          to label %297 unwind label %280

; <label>:295                                     ; preds = %293, %286
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_1144)
          to label %296 unwind label %310

; <label>:296                                     ; preds = %295
  br label %298

; <label>:297                                     ; preds = %294
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %cppVar_1055)
          to label %300 unwind label %277

; <label>:298                                     ; preds = %296, %283
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_1086)
          to label %299 unwind label %310

; <label>:299                                     ; preds = %298
  br label %301

; <label>:300                                     ; preds = %297
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1037)
          to label %303 unwind label %274

; <label>:301                                     ; preds = %299, %280
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %cppVar_1055)
          to label %302 unwind label %310

; <label>:302                                     ; preds = %301
  br label %304

; <label>:303                                     ; preds = %300
  call void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_990)
  ret void

; <label>:304                                     ; preds = %302, %277
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1037)
          to label %305 unwind label %310

; <label>:305                                     ; preds = %304
  br label %306

; <label>:306                                     ; preds = %305, %274
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_990)
          to label %307 unwind label %310

; <label>:307                                     ; preds = %306
  br label %308

; <label>:308                                     ; preds = %307
  %309 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %309) noreturn
  unreachable

; <label>:310                                     ; preds = %306, %304, %301, %298, %295, %289
  %311 = call i8* @llvm.eh.exception() nounwind
  %312 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %311, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define internal void @__cxx_global_var_init() {
  call void @_ZN11model_trainC1Ev(%class.model_train* @GM)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.model_train*)* @_ZN11model_trainD1Ev to void (i8*)*), i8* bitcast (%class.model_train* @GM to i8*), i8* bitcast (i8** @__dso_handle to i8*))
  ret void
}

define linkonce_odr void @_ZN11model_trainC1Ev(%class.model_train* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_train*, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  %2 = load %class.model_train** %1
  call void @_ZN11model_trainC2Ev(%class.model_train* %2)
  ret void
}

define linkonce_odr void @_ZN11model_trainD1Ev(%class.model_train* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_train*, align 8
  store %class.model_train* %this, %class.model_train** %1, align 8
  %2 = load %class.model_train** %1
  call void @_ZN11model_trainD2Ev(%class.model_train* %2)
  ret void
}

declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*)

define void @_Z4waitv() nounwind {
  %1 = load i32* @cycleCnt, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @cycleCnt, align 4
  ret void
}

define void @_Z15reset_signal_isib(i32, i1 zeroext) nounwind {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  ret void
}

define void @_Z14set_stack_sizei(i32) nounwind {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  ret void
}

define i64 @_Z8_c_16_15f(float %in) nounwind {
  %1 = alloca float, align 4
  store float %in, float* %1, align 4
  %2 = load float* %1, align 4
  %3 = fmul float %2, 2.000000e+00
  %4 = fptosi float %3 to i64
  %5 = and i64 %4, 65535
  ret i64 %5
}

define float @_Z8_b_16_15l(i64 %in) nounwind {
  %1 = alloca i64, align 8
  store i64 %in, i64* %1, align 8
  %2 = load i64* %1, align 8
  %3 = and i64 %2, 65535
  %4 = sitofp i64 %3 to double
  %5 = fdiv double %4, 2.000000e+00
  %6 = fptrunc double %5 to float
  ret float %6
}

define void @_ZN3rbm6configEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i8, align 1
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %15 = load %struct.rbm** %1
  br label %16

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  store i16 0, i16* %2, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %17, i16* %2)
  %18 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  store i16 0, i16* %3, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %18, i16* %3)
  %19 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  store i16 0, i16* %4, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %19, i16* %4)
  %20 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  store i16 0, i16* %5, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %20, i16* %5)
  %21 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  store i16 0, i16* %6, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %21, i16* %6)
  %22 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %22, i8* %7)
  call void @_Z4waitv()
  br label %23

; <label>:23                                      ; preds = %16
  br label %24

; <label>:24                                      ; preds = %25, %23
  call void @_Z4waitv()
  br label %25

; <label>:25                                      ; preds = %24
  %26 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 13
  %27 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %26)
  %28 = xor i1 %27, true
  br i1 %28, label %24, label %29

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %31 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 14
  %32 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %31)
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %8, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %30, i16* %8)
  %34 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %35 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 15
  %36 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %35)
  %37 = trunc i32 %36 to i16
  store i16 %37, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %34, i16* %9)
  %38 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %39 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 16
  %40 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %39)
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %38, i16* %10)
  %42 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %43 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 17
  %44 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %43)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %11, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %42, i16* %11)
  %46 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 34
  %47 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 18
  %48 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %47)
  %49 = trunc i32 %48 to i16
  store i16 %49, i16* %12, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %46, i16* %12)
  %50 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  %51 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 19
  %52 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %51)
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %13, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %50, i16* %13)
  %54 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* @_ZSt4cout, i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0))
  %55 = load i32* @_ZSt4endl, align 4
  %56 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %54, i32 %55)
  %57 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %57, i8* %14)
  br label %58

; <label>:58                                      ; preds = %29
  br label %59

; <label>:59                                      ; preds = %58, %59
  call void @_Z4waitv()
  br label %59
                                                  ; No predecessors!
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %this, i16* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  %2 = alloca i16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  store i16* %d, i16** %2, align 8
  %3 = load %class.sc_signal_u16** %1
  %4 = load i16** %2
  %5 = load i16* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_u16* %3, i32 0, i32 0
  store i16 %5, i16* %6, align 2
  ret void
}

define linkonce_odr void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  %4 = load i8* %3, align 1
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

define linkonce_odr i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  %3 = getelementptr inbounds %class.sc_signal_int32* %2, i32 0, i32 0
  %4 = load i32* %3, align 4
  ret i32 %4
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* %this, i8*) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i8* %0, i8** %4, align 8
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %this, i32) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i32, align 4
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i32 %0, i32* %4, align 4
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define void @_ZN3rbm4loadEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %index = alloca i16, align 2
  %loop_count = alloca i16, align 2
  %pingpong = alloca i8, align 1
  %tmp1 = alloca i16, align 2
  %tmp2 = alloca i16, align 2
  %nv = alloca i32, align 4
  %ntu = alloca i32, align 4
  %nu = alloca i32, align 4
  %nlp = alloca i32, align 4
  %nm = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %i = alloca i16, align 2
  %rate = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %dma_index = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %i1 = alloca i16, align 2
  %rate2 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %19 = load %struct.rbm** %1
  %20 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %21 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %20, i8* %2)
  br label %22

; <label>:22                                      ; preds = %0
  %23 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 2
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %23, i32* %3)
  %24 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 3
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %24, i32* %4)
  %25 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %25, i8* %5)
  %26 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 37
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %26, i8* %6)
  %27 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 38
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %27, i8* %7)
  br label %28

; <label>:28                                      ; preds = %22
  br label %29

; <label>:29                                      ; preds = %30, %28
  call void @_Z4waitv()
  br label %30

; <label>:30                                      ; preds = %29
  %31 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 36
  %32 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %31)
  %33 = xor i1 %32, true
  br i1 %33, label %29, label %34

; <label>:34                                      ; preds = %30
  store i16 0, i16* %index, align 2
  store i16 0, i16* %loop_count, align 2
  store i8 0, i8* %pingpong, align 1
  %35 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 31
  %36 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %35)
  %37 = zext i16 %36 to i32
  store i32 %37, i32* %nv, align 4
  %38 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 34
  %39 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %38)
  %40 = zext i16 %39 to i32
  store i32 %40, i32* %ntu, align 4
  %41 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 32
  %42 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %41)
  %43 = zext i16 %42 to i32
  store i32 %43, i32* %nu, align 4
  %44 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 33
  %45 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %44)
  %46 = zext i16 %45 to i32
  store i32 %46, i32* %nlp, align 4
  %47 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 35
  %48 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %47)
  %49 = zext i16 %48 to i32
  store i32 %49, i32* %nm, align 4
  br label %50

; <label>:50                                      ; preds = %34
  store i32 0, i32* @upc, align 4
  %51 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 2
  %52 = load i16* %index, align 2
  %53 = zext i16 %52 to i32
  store i32 %53, i32* %8, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %51, i32* %8)
  %54 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 3
  %55 = load i32* %nm, align 4
  %56 = mul i32 5, %55
  store i32 %56, i32* %9, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %54, i32* %9)
  %57 = load i16* %loop_count, align 2
  %58 = zext i16 %57 to i32
  %59 = load i32* %nlp, align 4
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %68

; <label>:61                                      ; preds = %50
  br label %62

; <label>:62                                      ; preds = %63, %61
  call void @_Z4waitv()
  br label %63

; <label>:63                                      ; preds = %62
  %64 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 40
  %65 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %64)
  %66 = xor i1 %65, true
  br i1 %66, label %62, label %67

; <label>:67                                      ; preds = %63
  br label %68

; <label>:68                                      ; preds = %67, %50
  %69 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 1, i8* %10, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %69, i8* %10)
  br label %70

; <label>:70                                      ; preds = %71, %68
  call void @_Z4waitv()
  store i32 1, i32* @upc, align 4
  br label %71

; <label>:71                                      ; preds = %70
  %72 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 5
  %73 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %72)
  %74 = xor i1 %73, true
  br i1 %74, label %70, label %75

; <label>:75                                      ; preds = %71
  %76 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 0, i8* %11, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %76, i8* %11)
  %77 = load i16* %loop_count, align 2
  %78 = zext i16 %77 to i32
  %79 = load i32* %nu, align 4
  %80 = mul i32 %78, %79
  %81 = trunc i32 %80 to i16
  store i16 %81, i16* %tmp1, align 2
  %82 = load i16* %tmp1, align 2
  %83 = zext i16 %82 to i32
  %84 = load i16* %index, align 2
  %85 = zext i16 %84 to i32
  %86 = add nsw i32 %83, %85
  %87 = trunc i32 %86 to i16
  store i16 %87, i16* %tmp2, align 2
  %88 = load i16* %tmp2, align 2
  %89 = zext i16 %88 to i32
  %90 = srem i32 %89, 2
  %91 = icmp ne i32 %90, 0
  %92 = zext i1 %91 to i8
  store i8 %92, i8* %pingpong, align 1
  br label %93

; <label>:93                                      ; preds = %75
  store i16 0, i16* %i, align 2
  br label %94

; <label>:94                                      ; preds = %117, %93
  %95 = load i16* %i, align 2
  %96 = zext i16 %95 to i32
  %97 = icmp slt i32 %96, 500
  br i1 %97, label %98, label %120

; <label>:98                                      ; preds = %94
  %99 = load i16* %i, align 2
  %100 = zext i16 %99 to i32
  %101 = load i32* %nv, align 4
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %103, label %104

; <label>:103                                     ; preds = %98
  br label %120

; <label>:104                                     ; preds = %98
  %105 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 6
  %106 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %105)
  %107 = trunc i32 %106 to i8
  store i8 %107, i8* %rate, align 1
  call void @_Z4waitv()
  %108 = load i8* %rate, align 1
  %109 = load i16* %i, align 2
  %110 = zext i16 %109 to i64
  %111 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %112 = load i8* %pingpong, align 1
  %113 = trunc i8 %112 to i1
  %114 = zext i1 %113 to i32
  %115 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %111, i32 %114)
  %116 = getelementptr inbounds i8* %115, i64 %110
  store i8 %108, i8* %116
  br label %117

; <label>:117                                     ; preds = %104
  %118 = load i16* %i, align 2
  %119 = add i16 %118, 1
  store i16 %119, i16* %i, align 2
  br label %94

; <label>:120                                     ; preds = %103, %94
  call void @_Z4waitv()
  %121 = load i32* %nv, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %124 = load i8* %pingpong, align 1
  %125 = trunc i8 %124 to i1
  %126 = zext i1 %125 to i32
  %127 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %123, i32 %126)
  %128 = getelementptr inbounds i8* %127, i64 %122
  store i8 1, i8* %128
  store i32 2, i32* @upc, align 4
  br label %129

; <label>:129                                     ; preds = %120
  br label %130

; <label>:130                                     ; preds = %129, %280
  %131 = load i16* %loop_count, align 2
  %132 = zext i16 %131 to i32
  %133 = load i32* %nlp, align 4
  %134 = icmp ne i32 %132, %133
  br i1 %134, label %135, label %149

; <label>:135                                     ; preds = %130
  %136 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 37
  store i8 1, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %136, i8* %12)
  store i32 2, i32* @upc, align 4
  br label %137

; <label>:137                                     ; preds = %138, %135
  call void @_Z4waitv()
  br label %138

; <label>:138                                     ; preds = %137
  %139 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 39
  %140 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %139)
  %141 = xor i1 %140, true
  br i1 %141, label %137, label %142

; <label>:142                                     ; preds = %138
  %143 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 37
  store i8 0, i8* %13, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %143, i8* %13)
  br label %144

; <label>:144                                     ; preds = %145, %142
  call void @_Z4waitv()
  br label %145

; <label>:145                                     ; preds = %144
  %146 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 39
  %147 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %146)
  br i1 %147, label %144, label %148

; <label>:148                                     ; preds = %145
  br label %163

; <label>:149                                     ; preds = %130
  %150 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 38
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %150, i8* %14)
  store i32 2, i32* @upc, align 4
  br label %151

; <label>:151                                     ; preds = %152, %149
  call void @_Z4waitv()
  br label %152

; <label>:152                                     ; preds = %151
  %153 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 42
  %154 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %153)
  %155 = xor i1 %154, true
  br i1 %155, label %151, label %156

; <label>:156                                     ; preds = %152
  %157 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 38
  store i8 0, i8* %15, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %157, i8* %15)
  br label %158

; <label>:158                                     ; preds = %159, %156
  call void @_Z4waitv()
  br label %159

; <label>:159                                     ; preds = %158
  %160 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 42
  %161 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %160)
  br i1 %161, label %158, label %162

; <label>:162                                     ; preds = %159
  br label %163

; <label>:163                                     ; preds = %162, %148
  %164 = load i16* %index, align 2
  %165 = zext i16 %164 to i32
  %166 = add nsw i32 %165, 1
  %167 = trunc i32 %166 to i16
  store i16 %167, i16* %index, align 2
  %168 = load i16* %index, align 2
  %169 = zext i16 %168 to i32
  %170 = load i32* %nu, align 4
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %172, label %182

; <label>:172                                     ; preds = %163
  %173 = load i16* %loop_count, align 2
  %174 = zext i16 %173 to i32
  %175 = load i32* %nlp, align 4
  %176 = icmp ne i32 %174, %175
  br i1 %176, label %177, label %182

; <label>:177                                     ; preds = %172
  %178 = load i16* %loop_count, align 2
  %179 = zext i16 %178 to i32
  %180 = add nsw i32 %179, 1
  %181 = trunc i32 %180 to i16
  store i16 %181, i16* %loop_count, align 2
  store i16 0, i16* %index, align 2
  br label %182

; <label>:182                                     ; preds = %177, %172, %163
  %183 = load i16* %index, align 2
  %184 = zext i16 %183 to i32
  %185 = load i32* %ntu, align 4
  %186 = icmp eq i32 %184, %185
  br i1 %186, label %187, label %197

; <label>:187                                     ; preds = %182
  %188 = load i16* %loop_count, align 2
  %189 = zext i16 %188 to i32
  %190 = load i32* %nlp, align 4
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %192, label %197

; <label>:192                                     ; preds = %187
  br label %193

; <label>:193                                     ; preds = %192
  br label %194

; <label>:194                                     ; preds = %195, %193
  call void @_Z4waitv()
  store i32 3, i32* @upc, align 4
  br label %195

; <label>:195                                     ; preds = %194
  br i1 true, label %194, label %196

; <label>:196                                     ; preds = %195
  br label %197

; <label>:197                                     ; preds = %196, %187, %182
  %198 = load i32* %nv, align 4
  %199 = load i16* %index, align 2
  %200 = zext i16 %199 to i32
  %201 = mul i32 %198, %200
  store i32 %201, i32* %dma_index, align 4
  %202 = load i16* %loop_count, align 2
  %203 = zext i16 %202 to i32
  %204 = load i32* %nlp, align 4
  %205 = icmp eq i32 %203, %204
  br i1 %205, label %206, label %212

; <label>:206                                     ; preds = %197
  %207 = load i32* %nv, align 4
  %208 = load i32* %nu, align 4
  %209 = mul i32 %207, %208
  %210 = load i32* %dma_index, align 4
  %211 = add i32 %210, %209
  store i32 %211, i32* %dma_index, align 4
  br label %212

; <label>:212                                     ; preds = %206, %197
  %213 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 2
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %213, i32* %dma_index)
  %214 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 3
  %215 = load i32* %nm, align 4
  %216 = mul i32 5, %215
  store i32 %216, i32* %16, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %214, i32* %16)
  %217 = load i16* %loop_count, align 2
  %218 = zext i16 %217 to i32
  %219 = load i32* %nlp, align 4
  %220 = icmp eq i32 %218, %219
  br i1 %220, label %221, label %228

; <label>:221                                     ; preds = %212
  br label %222

; <label>:222                                     ; preds = %223, %221
  call void @_Z4waitv()
  br label %223

; <label>:223                                     ; preds = %222
  %224 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 40
  %225 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %224)
  %226 = xor i1 %225, true
  br i1 %226, label %222, label %227

; <label>:227                                     ; preds = %223
  br label %228

; <label>:228                                     ; preds = %227, %212
  %229 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 1, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %229, i8* %17)
  br label %230

; <label>:230                                     ; preds = %231, %228
  call void @_Z4waitv()
  br label %231

; <label>:231                                     ; preds = %230
  %232 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 5
  %233 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %232)
  %234 = xor i1 %233, true
  br i1 %234, label %230, label %235

; <label>:235                                     ; preds = %231
  %236 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 0, i8* %18, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %236, i8* %18)
  %237 = load i16* %loop_count, align 2
  %238 = zext i16 %237 to i32
  %239 = load i32* %nu, align 4
  %240 = mul i32 %238, %239
  %241 = trunc i32 %240 to i16
  store i16 %241, i16* %tmp1, align 2
  %242 = load i16* %tmp1, align 2
  %243 = zext i16 %242 to i32
  %244 = load i16* %index, align 2
  %245 = zext i16 %244 to i32
  %246 = add nsw i32 %243, %245
  %247 = trunc i32 %246 to i16
  store i16 %247, i16* %tmp2, align 2
  %248 = load i16* %tmp2, align 2
  %249 = zext i16 %248 to i32
  %250 = srem i32 %249, 2
  %251 = icmp ne i32 %250, 0
  %252 = zext i1 %251 to i8
  store i8 %252, i8* %pingpong, align 1
  br label %253

; <label>:253                                     ; preds = %235
  store i16 0, i16* %i1, align 2
  br label %254

; <label>:254                                     ; preds = %277, %253
  %255 = load i16* %i1, align 2
  %256 = zext i16 %255 to i32
  %257 = icmp slt i32 %256, 500
  br i1 %257, label %258, label %280

; <label>:258                                     ; preds = %254
  %259 = load i16* %i1, align 2
  %260 = zext i16 %259 to i32
  %261 = load i32* %nv, align 4
  %262 = icmp eq i32 %260, %261
  br i1 %262, label %263, label %264

; <label>:263                                     ; preds = %258
  br label %280

; <label>:264                                     ; preds = %258
  %265 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 6
  %266 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %265)
  %267 = trunc i32 %266 to i8
  store i8 %267, i8* %rate2, align 1
  call void @_Z4waitv()
  %268 = load i8* %rate2, align 1
  %269 = load i16* %i1, align 2
  %270 = zext i16 %269 to i64
  %271 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %272 = load i8* %pingpong, align 1
  %273 = trunc i8 %272 to i1
  %274 = zext i1 %273 to i32
  %275 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %271, i32 %274)
  %276 = getelementptr inbounds i8* %275, i64 %270
  store i8 %268, i8* %276
  br label %277

; <label>:277                                     ; preds = %264
  %278 = load i16* %i1, align 2
  %279 = add i16 %278, 1
  store i16 %279, i16* %i1, align 2
  br label %254

; <label>:280                                     ; preds = %263, %254
  call void @_Z4waitv()
  %281 = load i32* %nv, align 4
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %284 = load i8* %pingpong, align 1
  %285 = trunc i8 %284 to i1
  %286 = zext i1 %285 to i32
  %287 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %283, i32 %286)
  %288 = getelementptr inbounds i8* %287, i64 %282
  store i8 1, i8* %288
  br label %130
                                                  ; No predecessors!
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  %9 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %10 = load i8* %9, align 1
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

define linkonce_odr void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %this, i32* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i32* %d, i32** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i32** %2
  %5 = load i32* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_int32* %3, i32 0, i32 0
  store i32 %5, i32* %6, align 4
  ret void
}

define linkonce_odr zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  %3 = getelementptr inbounds %class.sc_signal_u16* %2, i32 0, i32 0
  %4 = load i16* %3, align 2
  ret i16 %4
}

define linkonce_odr i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2Dst*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2Dst** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 512
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define void @_ZN3rbm5storeEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %ntu = alloca i16, align 2
  %nm = alloca i16, align 2
  %index = alloca i32, align 4
  %rating = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %dma_index = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %i = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %18 = load %struct.rbm** %1
  %19 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %20 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %19, i8* %2)
  br label %21

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %22, i32* %3)
  %23 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %23, i32* %4)
  %24 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %24, i8* %5)
  %25 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %25, i8* %6)
  %26 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 1, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %26, i8* %7)
  %27 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 0, i8* %8, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %27, i8* %8)
  br label %28

; <label>:28                                      ; preds = %29, %21
  call void @_Z4waitv()
  br label %29

; <label>:29                                      ; preds = %28
  %30 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %31 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %30)
  %32 = xor i1 %31, true
  br i1 %32, label %28, label %33

; <label>:33                                      ; preds = %29
  %34 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 34
  %35 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %34)
  store i16 %35, i16* %ntu, align 2
  %36 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %37 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %36)
  store i16 %37, i16* %nm, align 2
  store i32 0, i32* %index, align 4
  br label %38

; <label>:38                                      ; preds = %33
  br label %39

; <label>:39                                      ; preds = %38, %108
  %40 = load i32* %index, align 4
  %41 = load i16* %ntu, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %49

; <label>:44                                      ; preds = %39
  %45 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 1, i8* %9, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %45, i8* %9)
  br label %46

; <label>:46                                      ; preds = %47, %44
  call void @_Z4waitv()
  br label %47

; <label>:47                                      ; preds = %46
  br i1 true, label %46, label %48

; <label>:48                                      ; preds = %47
  br label %49

; <label>:49                                      ; preds = %48, %39
  br label %50

; <label>:50                                      ; preds = %51, %49
  call void @_Z4waitv()
  br label %51

; <label>:51                                      ; preds = %50
  %52 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 43
  %53 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %52)
  %54 = xor i1 %53, true
  br i1 %54, label %50, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 1, i8* %10, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %56, i8* %10)
  br label %57

; <label>:57                                      ; preds = %58, %55
  call void @_Z4waitv()
  br label %58

; <label>:58                                      ; preds = %57
  %59 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 43
  %60 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %59)
  br i1 %60, label %57, label %61

; <label>:61                                      ; preds = %58
  %62 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 0, i8* %11, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %62, i8* %11)
  %63 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 0, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %63, i8* %12)
  %64 = load i16* %nm, align 2
  %65 = zext i16 %64 to i32
  %66 = load i32* %index, align 4
  %67 = mul i32 %65, %66
  store i32 %67, i32* %dma_index, align 4
  %68 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %68, i32* %dma_index)
  %69 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %70 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %71 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %70)
  %72 = zext i16 %71 to i32
  store i32 %72, i32* %13, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %69, i32* %13)
  %73 = load i32* %index, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %index, align 4
  %75 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %75, i8* %14)
  br label %76

; <label>:76                                      ; preds = %77, %61
  call void @_Z4waitv()
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 10
  %79 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %78)
  %80 = xor i1 %79, true
  br i1 %80, label %76, label %81

; <label>:81                                      ; preds = %77
  %82 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 0, i8* %15, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %82, i8* %15)
  br label %83

; <label>:83                                      ; preds = %81
  store i16 0, i16* %i, align 2
  br label %84

; <label>:84                                      ; preds = %105, %83
  %85 = load i16* %i, align 2
  %86 = zext i16 %85 to i32
  %87 = icmp slt i32 %86, 100
  br i1 %87, label %88, label %108

; <label>:88                                      ; preds = %84
  %89 = load i16* %i, align 2
  %90 = zext i16 %89 to i32
  %91 = load i16* %nm, align 2
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %94, label %95

; <label>:94                                      ; preds = %88
  br label %108

; <label>:95                                      ; preds = %88
  %96 = load i16* %i, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %99 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %98, i32 0)
  %100 = getelementptr inbounds i8* %99, i64 %97
  %101 = load i8* %100
  store i8 %101, i8* %rating, align 1
  call void @_Z4waitv()
  %102 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %103 = load i8* %rating, align 1
  %104 = zext i8 %103 to i32
  store i32 %104, i32* %16, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %102, i32* %16)
  br label %105

; <label>:105                                     ; preds = %95
  %106 = load i16* %i, align 2
  %107 = add i16 %106, 1
  store i16 %107, i16* %i, align 2
  br label %84

; <label>:108                                     ; preds = %94, %84
  %109 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 1, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %109, i8* %17)
  br label %39
                                                  ; No predecessors!
  ret void
}

define linkonce_odr i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2Dst*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2Dst** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 128
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define void @_ZN3rbm9train_rbmEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %nv = alloca i32, align 4
  %nh = alloca i32, align 4
  %nu = alloca i32, align 4
  %nlp = alloca i32, align 4
  %user = alloca i32, align 4
  %current_loop = alloca i32, align 4
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %tmp3 = alloca i32, align 4
  %tmp4 = alloca i32, align 4
  %tmp5 = alloca i8, align 1
  %pingpong = alloca i8, align 1
  %tmp1 = alloca i8, align 1
  %tmp2 = alloca i8, align 1
  %bool1 = alloca i8, align 1
  %bool2 = alloca i8, align 1
  %tmp = alloca float, align 4
  %current_h = alloca i32, align 4
  %current_v = alloca i32, align 4
  %vlp = alloca i32, align 4
  %hlp = alloca i32, align 4
  %vrest_ = alloca i32, align 4
  %hrest_ = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %de = alloca float, align 4
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %15 = load %struct.rbm** %1
  %16 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %17 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %16, i8* %2)
  %18 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 39
  store i8 0, i8* %3, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %18, i8* %3)
  %19 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 40
  store i8 0, i8* %4, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %19, i8* %4)
  %20 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 41
  store i32 625, i32* %5, align 4
  call void @_ZN15sc_signal_int325writeERKi(%class.sc_signal_int32* %20, i32* %5)
  br label %21

; <label>:21                                      ; preds = %22, %0
  call void @_Z4waitv()
  br label %22

; <label>:22                                      ; preds = %21
  %23 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  %24 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %23)
  %25 = xor i1 %24, true
  br i1 %25, label %21, label %26

; <label>:26                                      ; preds = %22
  %27 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %28 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 9), align 8
  %29 = trunc i64 %28 to i16
  store i16 %29, i16* %6, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %27, i16* %6)
  %30 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %31 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 14), align 8
  %32 = trunc i64 %31 to i16
  store i16 %32, i16* %7, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %30, i16* %7)
  %33 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %34 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 13), align 8
  %35 = trunc i64 %34 to i16
  store i16 %35, i16* %8, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %33, i16* %8)
  %36 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %37 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 10), align 8
  %38 = trunc i64 %37 to i16
  store i16 %38, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %36, i16* %9)
  %39 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 34
  %40 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 12), align 8
  %41 = trunc i64 %40 to i16
  store i16 %41, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %39, i16* %10)
  %42 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  %43 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 11), align 8
  %44 = trunc i64 %43 to i16
  store i16 %44, i16* %11, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %42, i16* %11)
  %45 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %46 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %45)
  %47 = zext i16 %46 to i32
  store i32 %47, i32* %nv, align 4
  %48 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %49 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %48)
  %50 = zext i16 %49 to i32
  store i32 %50, i32* %nh, align 4
  %51 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %52 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %51)
  %53 = zext i16 %52 to i32
  store i32 %53, i32* %nu, align 4
  %54 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %55 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %54)
  %56 = zext i16 %55 to i32
  store i32 %56, i32* %nlp, align 4
  store i32 0, i32* %current_loop, align 4
  store i8 0, i8* %pingpong, align 1
  br label %229
                                                  ; No predecessors!
  store i32 0, i32* %v, align 4
  br label %58

; <label>:58                                      ; preds = %89, %57
  %59 = load i32* %v, align 4
  %60 = icmp ult i32 %59, 501
  br i1 %60, label %61, label %92

; <label>:61                                      ; preds = %58
  %62 = load i32* %v, align 4
  %63 = load i32* %nv, align 4
  %64 = add i32 %63, 1
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %67

; <label>:66                                      ; preds = %61
  br label %92

; <label>:67                                      ; preds = %61
  br label %68

; <label>:68                                      ; preds = %67
  store i32 0, i32* %h, align 4
  br label %69

; <label>:69                                      ; preds = %85, %68
  %70 = load i32* %h, align 4
  %71 = icmp ult i32 %70, 101
  br i1 %71, label %72, label %88

; <label>:72                                      ; preds = %69
  %73 = load i32* %h, align 4
  %74 = load i32* %nh, align 4
  %75 = add i32 %74, 1
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %78

; <label>:77                                      ; preds = %72
  br label %88

; <label>:78                                      ; preds = %72
  %79 = load i32* %h, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 23
  %82 = load i32* %v, align 4
  %83 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %81, i32 %82)
  %84 = getelementptr inbounds float* %83, i64 %80
  store float 0.000000e+00, float* %84
  br label %85

; <label>:85                                      ; preds = %78
  %86 = load i32* %h, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %h, align 4
  br label %69

; <label>:88                                      ; preds = %77, %69
  br label %89

; <label>:89                                      ; preds = %88
  %90 = load i32* %v, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %v, align 4
  br label %58

; <label>:92                                      ; preds = %66, %58
  store i32 0, i32* %current_h, align 4
  store i32 0, i32* %current_v, align 4
  %93 = load i32* %nv, align 4
  %94 = udiv i32 %93, 500
  store i32 %94, i32* %vlp, align 4
  %95 = load i32* %nh, align 4
  %96 = udiv i32 %95, 100
  store i32 %96, i32* %hlp, align 4
  %97 = load i32* %nv, align 4
  %98 = load i32* %vlp, align 4
  %99 = mul i32 %98, 500
  %100 = sub i32 %97, %99
  store i32 %100, i32* %vrest_, align 4
  %101 = load i32* %nh, align 4
  %102 = load i32* %hlp, align 4
  %103 = mul i32 %102, 100
  %104 = sub i32 %101, %103
  store i32 %104, i32* %hrest_, align 4
  %105 = load i32* %vrest_, align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %110

; <label>:107                                     ; preds = %92
  %108 = load i32* %vlp, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %vlp, align 4
  br label %110

; <label>:110                                     ; preds = %107, %92
  %111 = load i32* %hrest_, align 4
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %116

; <label>:113                                     ; preds = %110
  %114 = load i32* %hlp, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %hlp, align 4
  br label %116

; <label>:116                                     ; preds = %113, %110
  br label %117

; <label>:117                                     ; preds = %116
  br label %118

; <label>:118                                     ; preds = %117, %360
  %119 = load i32* %current_loop, align 4
  %120 = load i32* %nlp, align 4
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 40
  store i8 1, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %123, i8* %12)
  br label %124

; <label>:124                                     ; preds = %122
  br label %125

; <label>:125                                     ; preds = %126, %124
  call void @_Z4waitv()
  br label %126

; <label>:126                                     ; preds = %125
  br i1 true, label %125, label %127

; <label>:127                                     ; preds = %126
  br label %128

; <label>:128                                     ; preds = %127, %118
  br label %129

; <label>:129                                     ; preds = %128
  store i32 0, i32* %user, align 4
  br label %130

; <label>:130                                     ; preds = %357, %129
  %131 = load i32* %user, align 4
  %132 = load i32* %nu, align 4
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %134, label %360

; <label>:134                                     ; preds = %130
  br label %135

; <label>:135                                     ; preds = %136, %134
  call void @_Z4waitv()
  br label %136

; <label>:136                                     ; preds = %135
  %137 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 37
  %138 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %137)
  %139 = xor i1 %138, true
  br i1 %139, label %135, label %140

; <label>:140                                     ; preds = %136
  %141 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 39
  store i8 1, i8* %13, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %141, i8* %13)
  br label %142

; <label>:142                                     ; preds = %143, %140
  call void @_Z4waitv()
  br label %143

; <label>:143                                     ; preds = %142
  %144 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 37
  %145 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %144)
  br i1 %145, label %142, label %146

; <label>:146                                     ; preds = %143
  %147 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 39
  store i8 0, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %147, i8* %14)
  %148 = load i32* %current_loop, align 4
  %149 = load i32* %nu, align 4
  %150 = mul i32 %148, %149
  store i32 %150, i32* %tmp3, align 4
  %151 = load i32* %tmp3, align 4
  %152 = load i32* %user, align 4
  %153 = add i32 %151, %152
  store i32 %153, i32* %tmp4, align 4
  %154 = load i32* %tmp4, align 4
  %155 = urem i32 %154, 2
  %156 = icmp ne i32 %155, 0
  %157 = zext i1 %156 to i8
  store i8 %157, i8* %pingpong, align 1
  br label %158

; <label>:158                                     ; preds = %146
  store i32 2, i32* @upc, align 4
  %159 = load i8* %pingpong, align 1
  %160 = trunc i8 %159 to i1
  %161 = load i32* %nh, align 4
  %162 = trunc i32 %161 to i16
  %163 = load i32* %nv, align 4
  %164 = trunc i32 %163 to i16
  call void @_ZN3rbm25activateHiddenUnits_trainEbtt(%struct.rbm* %15, i1 zeroext %160, i16 zeroext %162, i16 zeroext %164)
  br label %363
                                                  ; No predecessors!
  store i32 0, i32* %v, align 4
  br label %166

; <label>:166                                     ; preds = %225, %165
  %167 = load i32* %v, align 4
  %168 = icmp ult i32 %167, 501
  br i1 %168, label %169, label %228

; <label>:169                                     ; preds = %166
  %170 = load i32* %v, align 4
  %171 = load i32* %nv, align 4
  %172 = add i32 %171, 1
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %174, label %175

; <label>:174                                     ; preds = %169
  br label %228

; <label>:175                                     ; preds = %169
  %176 = load i32* %v, align 4
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 20
  %179 = load i8* %pingpong, align 1
  %180 = trunc i8 %179 to i1
  %181 = zext i1 %180 to i32
  %182 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %178, i32 %181)
  %183 = getelementptr inbounds i8* %182, i64 %177
  %184 = load i8* %183
  store i8 %184, i8* %tmp5, align 1
  call void @_Z4waitv()
  %185 = load i8* %tmp5, align 1
  %186 = zext i8 %185 to i32
  %187 = icmp ne i32 %186, 2
  br i1 %187, label %188, label %224

; <label>:188                                     ; preds = %175
  br label %189

; <label>:189                                     ; preds = %188
  store i32 0, i32* %h, align 4
  br label %190

; <label>:190                                     ; preds = %220, %189
  %191 = load i32* %h, align 4
  %192 = icmp ult i32 %191, 101
  br i1 %192, label %193, label %223

; <label>:193                                     ; preds = %190
  %194 = load i32* %h, align 4
  %195 = load i32* %nh, align 4
  %196 = add i32 %195, 1
  %197 = icmp eq i32 %194, %196
  br i1 %197, label %198, label %199

; <label>:198                                     ; preds = %193
  br label %223

; <label>:199                                     ; preds = %193
  %200 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 22
  %201 = load i32* %h, align 4
  %202 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %200, i32 %201)
  %203 = load i8* %202
  %204 = trunc i8 %203 to i1
  %205 = zext i1 %204 to i8
  store i8 %205, i8* %tmp2, align 1
  call void @_Z4waitv()
  %206 = load i8* %tmp5, align 1
  %207 = icmp ne i8 %206, 0
  br i1 %207, label %208, label %211

; <label>:208                                     ; preds = %199
  %209 = load i8* %tmp2, align 1
  %210 = trunc i8 %209 to i1
  br label %211

; <label>:211                                     ; preds = %208, %199
  %212 = phi i1 [ false, %199 ], [ %210, %208 ]
  %213 = load i32* %h, align 4
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 24
  %216 = load i32* %v, align 4
  %217 = call i8* @_ZN11SysCArray2DIbLj501ELj101EEixEj(%class.SysCArray1D* %215, i32 %216)
  %218 = getelementptr inbounds i8* %217, i64 %214
  %219 = zext i1 %212 to i8
  store i8 %219, i8* %218
  call void @_Z4waitv()
  br label %220

; <label>:220                                     ; preds = %211
  %221 = load i32* %h, align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %h, align 4
  br label %190

; <label>:223                                     ; preds = %198, %190
  br label %224

; <label>:224                                     ; preds = %223, %175
  br label %225

; <label>:225                                     ; preds = %224
  %226 = load i32* %v, align 4
  %227 = add i32 %226, 1
  store i32 %227, i32* %v, align 4
  br label %166

; <label>:228                                     ; preds = %174, %166
  br label %229

; <label>:229                                     ; preds = %228, %26
  store i32 2, i32* @upc, align 4
  %230 = load i32* %nh, align 4
  %231 = trunc i32 %230 to i16
  %232 = load i32* %nv, align 4
  %233 = trunc i32 %232 to i16
  call void @_ZN3rbm26activateVisibleUnits_trainEtt(%struct.rbm* %15, i16 zeroext %231, i16 zeroext %233)
  br label %363
                                                  ; No predecessors!
  store i32 0, i32* %v, align 4
  br label %235

; <label>:235                                     ; preds = %353, %234
  %236 = load i32* %v, align 4
  %237 = icmp ult i32 %236, 501
  br i1 %237, label %238, label %356

; <label>:238                                     ; preds = %235
  %239 = load i32* %v, align 4
  %240 = load i32* %nv, align 4
  %241 = add i32 %240, 1
  %242 = icmp eq i32 %239, %241
  br i1 %242, label %243, label %244

; <label>:243                                     ; preds = %238
  br label %356

; <label>:244                                     ; preds = %238
  %245 = load i32* %v, align 4
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 20
  %248 = load i8* %pingpong, align 1
  %249 = trunc i8 %248 to i1
  %250 = zext i1 %249 to i32
  %251 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %247, i32 %250)
  %252 = getelementptr inbounds i8* %251, i64 %246
  %253 = load i8* %252
  store i8 %253, i8* %tmp5, align 1
  call void @_Z4waitv()
  br label %254

; <label>:254                                     ; preds = %244
  store i32 0, i32* %h, align 4
  br label %255

; <label>:255                                     ; preds = %349, %254
  %256 = load i32* %h, align 4
  %257 = icmp ult i32 %256, 101
  br i1 %257, label %258, label %352

; <label>:258                                     ; preds = %255
  %259 = load i32* %h, align 4
  %260 = load i32* %nh, align 4
  %261 = add i32 %260, 1
  %262 = icmp eq i32 %259, %261
  br i1 %262, label %263, label %264

; <label>:263                                     ; preds = %258
  br label %352

; <label>:264                                     ; preds = %258
  %265 = load i8* %tmp5, align 1
  %266 = zext i8 %265 to i32
  %267 = icmp ne i32 %266, 2
  br i1 %267, label %268, label %295

; <label>:268                                     ; preds = %264
  %269 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 22
  %270 = load i32* %h, align 4
  %271 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %269, i32 %270)
  %272 = load i8* %271
  %273 = trunc i8 %272 to i1
  %274 = zext i1 %273 to i8
  store i8 %274, i8* %tmp1, align 1
  %275 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 21
  %276 = load i32* %v, align 4
  %277 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %275, i32 %276)
  %278 = load i8* %277
  %279 = trunc i8 %278 to i1
  %280 = zext i1 %279 to i8
  store i8 %280, i8* %tmp2, align 1
  call void @_Z4waitv()
  %281 = load i8* %tmp1, align 1
  %282 = trunc i8 %281 to i1
  br i1 %282, label %283, label %286

; <label>:283                                     ; preds = %268
  %284 = load i8* %tmp2, align 1
  %285 = trunc i8 %284 to i1
  br label %286

; <label>:286                                     ; preds = %283, %268
  %287 = phi i1 [ false, %268 ], [ %285, %283 ]
  %288 = load i32* %h, align 4
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 25
  %291 = load i32* %v, align 4
  %292 = call i8* @_ZN11SysCArray2DIbLj501ELj101EEixEj(%class.SysCArray1D* %290, i32 %291)
  %293 = getelementptr inbounds i8* %292, i64 %289
  %294 = zext i1 %287 to i8
  store i8 %294, i8* %293
  call void @_Z4waitv()
  br label %295

; <label>:295                                     ; preds = %286, %264
  %296 = load i32* %h, align 4
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 23
  %299 = load i32* %v, align 4
  %300 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %298, i32 %299)
  %301 = getelementptr inbounds float* %300, i64 %297
  %302 = load float* %301
  store float %302, float* %tmp, align 4
  %303 = load i32* %h, align 4
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 24
  %306 = load i32* %v, align 4
  %307 = call i8* @_ZN11SysCArray2DIbLj501ELj101EEixEj(%class.SysCArray1D* %305, i32 %306)
  %308 = getelementptr inbounds i8* %307, i64 %304
  %309 = load i8* %308
  %310 = trunc i8 %309 to i1
  %311 = zext i1 %310 to i8
  store i8 %311, i8* %bool1, align 1
  %312 = load i32* %h, align 4
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 25
  %315 = load i32* %v, align 4
  %316 = call i8* @_ZN11SysCArray2DIbLj501ELj101EEixEj(%class.SysCArray1D* %314, i32 %315)
  %317 = getelementptr inbounds i8* %316, i64 %313
  %318 = load i8* %317
  %319 = trunc i8 %318 to i1
  %320 = zext i1 %319 to i8
  store i8 %320, i8* %bool2, align 1
  call void @_Z4waitv()
  %321 = load i8* %bool1, align 1
  %322 = trunc i8 %321 to i1
  br i1 %322, label %323, label %329

; <label>:323                                     ; preds = %295
  %324 = load i8* %bool2, align 1
  %325 = trunc i8 %324 to i1
  br i1 %325, label %329, label %326

; <label>:326                                     ; preds = %323
  %327 = load float* %tmp, align 4
  %328 = fadd float %327, 5.000000e-01
  store float %328, float* %de, align 4
  br label %341

; <label>:329                                     ; preds = %323, %295
  %330 = load i8* %bool1, align 1
  %331 = trunc i8 %330 to i1
  br i1 %331, label %338, label %332

; <label>:332                                     ; preds = %329
  %333 = load i8* %bool2, align 1
  %334 = trunc i8 %333 to i1
  br i1 %334, label %335, label %338

; <label>:335                                     ; preds = %332
  %336 = load float* %tmp, align 4
  %337 = fsub float %336, 5.000000e-01
  store float %337, float* %de, align 4
  br label %340

; <label>:338                                     ; preds = %332, %329
  %339 = load float* %tmp, align 4
  store float %339, float* %de, align 4
  br label %340

; <label>:340                                     ; preds = %338, %335
  br label %341

; <label>:341                                     ; preds = %340, %326
  %342 = load float* %de, align 4
  %343 = load i32* %h, align 4
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 23
  %346 = load i32* %v, align 4
  %347 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %345, i32 %346)
  %348 = getelementptr inbounds float* %347, i64 %344
  store float %342, float* %348
  call void @_Z4waitv()
  br label %349

; <label>:349                                     ; preds = %341
  %350 = load i32* %h, align 4
  %351 = add i32 %350, 1
  store i32 %351, i32* %h, align 4
  br label %255

; <label>:352                                     ; preds = %263, %255
  br label %353

; <label>:353                                     ; preds = %352
  %354 = load i32* %v, align 4
  %355 = add i32 %354, 1
  store i32 %355, i32* %v, align 4
  br label %235

; <label>:356                                     ; preds = %243, %235
  br label %357

; <label>:357                                     ; preds = %356
  %358 = load i32* %user, align 4
  %359 = add i32 %358, 1
  store i32 %359, i32* %user, align 4
  br label %130

; <label>:360                                     ; preds = %130
  %361 = load i32* %current_loop, align 4
  %362 = add i32 %361, 1
  store i32 %362, i32* %current_loop, align 4
  br label %118

; <label>:363                                     ; preds = %229, %158
  ret void
}

define linkonce_odr void @_ZN15sc_signal_int325writeERKi(%class.sc_signal_int32* %this, i32* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i32* %d, i32** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i32** %2
  %5 = load i32* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_int32* %3, i32 0, i32 0
  store i32 %5, i32* %6, align 4
  ret void
}

define linkonce_odr float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  store i32 %Xidx, i32* %2, align 4
  %3 = load %class.SysCArray2D** %1
  %4 = load i32* %2, align 4
  %5 = mul i32 %4, 101
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.SysCArray2D* %3, i32 0, i32 0
  %8 = load float** %7, align 8
  %9 = getelementptr inbounds float* %8, i64 %6
  ret float* %9
}

define void @_ZN3rbm25activateHiddenUnits_trainEbtt(%struct.rbm* %this, i1 zeroext %pingpong, i16 zeroext %nh, i16 zeroext %nv) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %h = alloca i16, align 2
  %v = alloca i16, align 2
  %sum = alloca float, align 4
  %tmp = alloca float, align 4
  %prob = alloca float, align 4
  %RAND = alloca float, align 4
  %current_data = alloca i8, align 1
  %tmp1 = alloca float, align 4
  %comp = alloca i8, align 1
  %th = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %5 = zext i1 %pingpong to i8
  store i8 %5, i8* %2, align 1
  store i16 %nh, i16* %3, align 2
  store i16 %nv, i16* %4, align 2
  %6 = load %struct.rbm** %1
  br label %7

; <label>:7                                       ; preds = %0
  store i16 0, i16* %h, align 2
  br label %8

; <label>:8                                       ; preds = %86, %7
  %9 = load i16* %h, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp slt i32 %10, 100
  br i1 %11, label %12, label %89

; <label>:12                                      ; preds = %8
  %13 = load i16* %h, align 2
  %14 = zext i16 %13 to i32
  %15 = load i16* %3, align 2
  %16 = zext i16 %15 to i32
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %12
  br label %89

; <label>:19                                      ; preds = %12
  store float 0.000000e+00, float* %sum, align 4
  br label %20

; <label>:20                                      ; preds = %19
  store i16 0, i16* %v, align 2
  br label %21

; <label>:21                                      ; preds = %60, %20
  %22 = load i16* %v, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp slt i32 %23, 501
  br i1 %24, label %25, label %63

; <label>:25                                      ; preds = %21
  %26 = load i16* %v, align 2
  %27 = zext i16 %26 to i32
  %28 = load i16* %4, align 2
  %29 = zext i16 %28 to i32
  %30 = add nsw i32 %29, 1
  %31 = icmp eq i32 %27, %30
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %25
  br label %63

; <label>:33                                      ; preds = %25
  store i32 0, i32* @per_v_pc, align 4
  store i32 0, i32* @train_upc, align 4
  %34 = load i16* %v, align 2
  %35 = zext i16 %34 to i64
  %36 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 20
  %37 = load i8* %2, align 1
  %38 = trunc i8 %37 to i1
  %39 = zext i1 %38 to i32
  %40 = and i32 %39, 0
  %41 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %36, i32 %40)
  %42 = getelementptr inbounds i8* %41, i64 %35
  %43 = load i8* %42
  store i8 %43, i8* %current_data, align 1
  call void @_Z4waitv()
  %44 = load i8* %current_data, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %59

; <label>:47                                      ; preds = %33
  %48 = load i16* %h, align 2
  %49 = zext i16 %48 to i64
  %50 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 23
  %51 = load i16* %v, align 2
  %52 = zext i16 %51 to i32
  %53 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %50, i32 %52)
  %54 = getelementptr inbounds float* %53, i64 %49
  %55 = load float* %54
  store float %55, float* %tmp, align 4
  %56 = load float* %tmp, align 4
  %57 = load float* %sum, align 4
  %58 = fadd float %57, %56
  store float %58, float* %sum, align 4
  call void @_Z4waitv()
  br label %59

; <label>:59                                      ; preds = %47, %33
  br label %60

; <label>:60                                      ; preds = %59
  %61 = load i16* %v, align 2
  %62 = add i16 %61, 1
  store i16 %62, i16* %v, align 2
  br label %21

; <label>:63                                      ; preds = %32, %21
  %64 = load float* %sum, align 4
  %65 = call i64 @_Z8_c_16_15f(float %64)
  %66 = call zeroext i16 @_Z7sigmoidl(i64 %65)
  %67 = zext i16 %66 to i64
  %68 = call float @_Z8_b_16_15l(i64 %67)
  store float %68, float* %prob, align 4
  %69 = call float @_ZN3rbm8rand_genEv(%struct.rbm* %6)
  store float %69, float* %RAND, align 4
  %70 = load float* %RAND, align 4
  %71 = load float* %prob, align 4
  %72 = fcmp olt float %70, %71
  %73 = zext i1 %72 to i8
  store i8 %73, i8* %comp, align 1
  %74 = load i8* %comp, align 1
  %75 = trunc i8 %74 to i1
  br i1 %75, label %76, label %77

; <label>:76                                      ; preds = %63
  store i8 1, i8* %th, align 1
  br label %78

; <label>:77                                      ; preds = %63
  store i8 0, i8* %th, align 1
  br label %78

; <label>:78                                      ; preds = %77, %76
  %79 = load i8* %th, align 1
  %80 = trunc i8 %79 to i1
  %81 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 22
  %82 = load i16* %h, align 2
  %83 = zext i16 %82 to i32
  %84 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %81, i32 %83)
  %85 = zext i1 %80 to i8
  store i8 %85, i8* %84
  call void @_Z4waitv()
  br label %86

; <label>:86                                      ; preds = %78
  %87 = load i16* %h, align 2
  %88 = add i16 %87, 1
  store i16 %88, i16* %h, align 2
  br label %8

; <label>:89                                      ; preds = %18, %8
  %90 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 22
  %91 = load i16* %3, align 2
  %92 = zext i16 %91 to i32
  %93 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %90, i32 %92)
  store i8 1, i8* %93
  call void @_Z4waitv()
  store i32 0, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  ret void
}

define linkonce_odr i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %this, i32 %idx) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i32 %idx, i32* %2, align 4
  %3 = load %class.SysCArray1D** %1
  %4 = load i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = getelementptr inbounds i8* %7, i64 %5
  ret i8* %8
}

define linkonce_odr i8* @_ZN11SysCArray2DIbLj501ELj101EEixEj(%class.SysCArray1D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i32 %Xidx, i32* %2, align 4
  %3 = load %class.SysCArray1D** %1
  %4 = load i32* %2, align 4
  %5 = mul i32 %4, 101
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = getelementptr inbounds i8* %8, i64 %6
  ret i8* %9
}

define void @_ZN3rbm26activateVisibleUnits_trainEtt(%struct.rbm* %this, i16 zeroext %nh, i16 zeroext %nv) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %v = alloca i16, align 2
  %h = alloca i16, align 2
  %sum = alloca float, align 4
  %max = alloca float, align 4
  %probs = alloca float, align 4
  %RAND = alloca float, align 4
  %pow2 = alloca [5 x float], align 16
  %sumOfpow2 = alloca float, align 4
  %tmp = alloca i16, align 2
  %tmp1 = alloca float, align 4
  %tmp2 = alloca i8, align 1
  %j = alloca i16, align 2
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %ve_current = alloca float, align 4
  %dp = alloca float, align 4
  %dp1 = alloca float, align 4
  %tmpb = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  store i16 %nh, i16* %2, align 2
  store i16 %nv, i16* %3, align 2
  %18 = load %struct.rbm** %1
  br label %283
                                                  ; No predecessors!
  store i16 0, i16* %v, align 2
  br label %20

; <label>:20                                      ; preds = %687, %19
  %21 = load i16* %v, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp slt i32 %22, 500
  br i1 %23, label %24, label %692

; <label>:24                                      ; preds = %20
  %25 = load i16* %v, align 2
  %26 = zext i16 %25 to i32
  %27 = load i16* %3, align 2
  %28 = zext i16 %27 to i32
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %24
  br label %692

; <label>:31                                      ; preds = %24
  store float -5.000000e+02, float* %max, align 4
  br label %32

; <label>:32                                      ; preds = %31
  store i16 0, i16* %j, align 2
  br label %33

; <label>:33                                      ; preds = %92, %32
  %34 = load i16* %j, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp slt i32 %35, 5
  br i1 %36, label %37, label %95

; <label>:37                                      ; preds = %33
  store float 0.000000e+00, float* %sum, align 4
  br label %38

; <label>:38                                      ; preds = %37
  store i16 0, i16* %h, align 2
  br label %39

; <label>:39                                      ; preds = %77, %38
  %40 = load i16* %h, align 2
  %41 = zext i16 %40 to i32
  %42 = icmp slt i32 %41, 101
  br i1 %42, label %43, label %80

; <label>:43                                      ; preds = %39
  %44 = load i16* %h, align 2
  %45 = zext i16 %44 to i32
  %46 = load i16* %2, align 2
  %47 = zext i16 %46 to i32
  %48 = add nsw i32 %47, 1
  %49 = icmp eq i32 %45, %48
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %43
  br label %80

; <label>:51                                      ; preds = %43
  store i32 0, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  %52 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %53 = load i16* %h, align 2
  %54 = zext i16 %53 to i32
  %55 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %52, i32 %54)
  %56 = load i8* %55
  %57 = trunc i8 %56 to i1
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %tmp2, align 1
  call void @_Z4waitv()
  %59 = load i16* %h, align 2
  %60 = zext i16 %59 to i64
  %61 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 23
  %62 = load i16* %v, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %j, align 2
  %65 = zext i16 %64 to i32
  %66 = add nsw i32 %63, %65
  %67 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %61, i32 %66)
  %68 = getelementptr inbounds float* %67, i64 %60
  %69 = load float* %68
  store float %69, float* %tmp1, align 4
  call void @_Z4waitv()
  %70 = load i8* %tmp2, align 1
  %71 = trunc i8 %70 to i1
  br i1 %71, label %72, label %76

; <label>:72                                      ; preds = %51
  %73 = load float* %tmp1, align 4
  %74 = load float* %sum, align 4
  %75 = fadd float %74, %73
  store float %75, float* %sum, align 4
  br label %76

; <label>:76                                      ; preds = %72, %51
  call void @_Z4waitv()
  br label %77

; <label>:77                                      ; preds = %76
  %78 = load i16* %h, align 2
  %79 = add i16 %78, 1
  store i16 %79, i16* %h, align 2
  br label %39

; <label>:80                                      ; preds = %50, %39
  %81 = load float* %sum, align 4
  %82 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %83 = load i16* %j, align 2
  %84 = zext i16 %83 to i32
  %85 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %82, i32 %84)
  store float %81, float* %85
  call void @_Z4waitv()
  %86 = load float* %sum, align 4
  %87 = load float* %max, align 4
  %88 = fcmp ogt float %86, %87
  br i1 %88, label %89, label %91

; <label>:89                                      ; preds = %80
  %90 = load float* %sum, align 4
  store float %90, float* %max, align 4
  br label %91

; <label>:91                                      ; preds = %89, %80
  br label %92

; <label>:92                                      ; preds = %91
  %93 = load i16* %j, align 2
  %94 = add i16 %93, 1
  store i16 %94, i16* %j, align 2
  br label %33

; <label>:95                                      ; preds = %33
  store i32 1, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  %96 = load float* %max, align 4
  %97 = fsub float %96, 3.100000e+01
  store float %97, float* %max, align 4
  br label %98

; <label>:98                                      ; preds = %95
  store i16 0, i16* %j, align 2
  br label %99

; <label>:99                                      ; preds = %449, %98
  %100 = load i16* %j, align 2
  %101 = zext i16 %100 to i32
  %102 = icmp slt i32 %101, 5
  br i1 %102, label %103, label %452

; <label>:103                                     ; preds = %99
  br label %104

; <label>:104                                     ; preds = %103
  %105 = load i8* @conf_done_inp, align 1
  %106 = trunc i8 %105 to i1
  %107 = zext i1 %106 to i64
  %108 = load i32* @conf_num_hidden_inp, align 4
  %109 = zext i32 %108 to i64
  %110 = load i32* @conf_num_visible_inp, align 4
  %111 = zext i32 %110 to i64
  %112 = load i32* @conf_num_users_inp, align 4
  %113 = zext i32 %112 to i64
  %114 = load i32* @conf_num_loops_inp, align 4
  %115 = zext i32 %114 to i64
  %116 = load i32* @conf_num_testusers_inp, align 4
  %117 = zext i32 %116 to i64
  %118 = load i32* @conf_num_movies_inp, align 4
  %119 = zext i32 %118 to i64
  %120 = load i8* @rst_inp, align 1
  %121 = trunc i8 %120 to i1
  %122 = zext i1 %121 to i64
  %123 = load i8* @rd_grant_inp, align 1
  %124 = trunc i8 %123 to i1
  %125 = zext i1 %124 to i64
  %126 = load i32* @data_in_inp, align 4
  %127 = zext i32 %126 to i64
  %128 = load i8* @wr_grant_inp, align 1
  %129 = trunc i8 %128 to i1
  %130 = zext i1 %129 to i64
  call void @_ZN11model_train6updateElllllllllll(%class.model_train* @GM, i64 %107, i64 %109, i64 %111, i64 %113, i64 %115, i64 %117, i64 %119, i64 %122, i64 %125, i64 %127, i64 %130)
  %131 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %132 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %131)
  %133 = zext i1 %132 to i64
  %134 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 6), align 8
  %135 = icmp eq i64 %133, %134
  call void @__CPROVER_assert(i1 zeroext %135, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %136 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  %137 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %136)
  %138 = zext i1 %137 to i64
  %139 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 2), align 8
  %140 = icmp eq i64 %138, %139
  call void @__CPROVER_assert(i1 zeroext %140, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %141 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 30
  %142 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %141)
  %143 = zext i16 %142 to i64
  %144 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 9), align 8
  %145 = icmp eq i64 %143, %144
  call void @__CPROVER_assert(i1 zeroext %145, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %146 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 31
  %147 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %146)
  %148 = zext i16 %147 to i64
  %149 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 14), align 8
  %150 = icmp eq i64 %148, %149
  call void @__CPROVER_assert(i1 zeroext %150, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %151 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 32
  %152 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %151)
  %153 = zext i16 %152 to i64
  %154 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 13), align 8
  %155 = icmp eq i64 %153, %154
  call void @__CPROVER_assert(i1 zeroext %155, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %156 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 33
  %157 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %156)
  %158 = zext i16 %157 to i64
  %159 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 10), align 8
  %160 = icmp eq i64 %158, %159
  call void @__CPROVER_assert(i1 zeroext %160, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %161 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 34
  %162 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %161)
  %163 = zext i16 %162 to i64
  %164 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 12), align 8
  %165 = icmp eq i64 %163, %164
  call void @__CPROVER_assert(i1 zeroext %165, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %166 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %167 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %166)
  %168 = zext i16 %167 to i64
  %169 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 11), align 8
  %170 = icmp eq i64 %168, %169
  call void @__CPROVER_assert(i1 zeroext %170, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %171 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 2
  %172 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %171)
  %173 = zext i32 %172 to i64
  %174 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 21), align 8
  %175 = icmp eq i64 %173, %174
  call void @__CPROVER_assert(i1 zeroext %175, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %176 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 3
  %177 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %176)
  %178 = zext i32 %177 to i64
  %179 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 22), align 8
  %180 = icmp eq i64 %178, %179
  call void @__CPROVER_assert(i1 zeroext %180, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %181 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 4
  %182 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %181)
  %183 = zext i1 %182 to i64
  %184 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 23), align 8
  %185 = icmp eq i64 %183, %184
  call void @__CPROVER_assert(i1 zeroext %185, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %186 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  %187 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %186)
  %188 = zext i1 %187 to i64
  %189 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 37), align 8
  %190 = icmp eq i64 %188, %189
  call void @__CPROVER_assert(i1 zeroext %190, i8* getelementptr inbounds ([17 x i8]* @.str12, i32 0, i32 0))
  %191 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  %192 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %191)
  %193 = zext i32 %192 to i64
  %194 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 35), align 8
  %195 = icmp eq i64 %193, %194
  call void @__CPROVER_assert(i1 zeroext %195, i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0))
  %196 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %197 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %196)
  %198 = zext i32 %197 to i64
  %199 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 36), align 8
  %200 = icmp eq i64 %198, %199
  call void @__CPROVER_assert(i1 zeroext %200, i8* getelementptr inbounds ([16 x i8]* @.str14, i32 0, i32 0))
  %201 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %202 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %201)
  %203 = zext i32 %202 to i64
  %204 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 1), align 8
  %205 = icmp eq i64 %203, %204
  call void @__CPROVER_assert(i1 zeroext %205, i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0))
  %206 = load i32* @upc, align 4
  %207 = zext i32 %206 to i64
  %208 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 31), align 8
  %209 = icmp eq i64 %207, %208
  call void @__CPROVER_assert(i1 zeroext %209, i8* getelementptr inbounds ([10 x i8]* @.str16, i32 0, i32 0))
  %210 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 37
  %211 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %210)
  %212 = zext i1 %211 to i64
  %213 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 26), align 8
  %214 = icmp eq i64 %212, %213
  call void @__CPROVER_assert(i1 zeroext %214, i8* getelementptr inbounds ([23 x i8]* @.str17, i32 0, i32 0))
  %215 = load float* %sum, align 4
  %216 = fpext float %215 to double
  %217 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 28), align 8
  %218 = and i64 %217, 65535
  %219 = sitofp i64 %218 to double
  %220 = fdiv double %219, 2.000000e+00
  %221 = fcmp oeq double %216, %220
  call void @__CPROVER_assert(i1 zeroext %221, i8* getelementptr inbounds ([16 x i8]* @.str18, i32 0, i32 0))
  %222 = load float* %max, align 4
  %223 = fpext float %222 to double
  %224 = fmul double %223, 2.000000e+00
  %225 = fptoui double %224 to i32
  %226 = and i32 %225, 65535
  %227 = zext i32 %226 to i64
  %228 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 27), align 8
  %229 = and i64 %228, 65535
  %230 = icmp eq i64 %227, %229
  call void @__CPROVER_assert(i1 zeroext %230, i8* getelementptr inbounds ([16 x i8]* @.str19, i32 0, i32 0))
  %231 = load float* %sumOfpow2, align 4
  %232 = fpext float %231 to double
  %233 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 24), align 8
  %234 = uitofp i64 %233 to double
  %235 = fdiv double %234, 1.000000e+00
  %236 = fcmp oeq double %232, %235
  call void @__CPROVER_assert(i1 zeroext %236, i8* getelementptr inbounds ([16 x i8]* @.str20, i32 0, i32 0))
  %237 = load i16* %j, align 2
  %238 = zext i16 %237 to i64
  %239 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 7), align 8
  %240 = icmp eq i64 %238, %239
  call void @__CPROVER_assert(i1 zeroext %240, i8* getelementptr inbounds ([13 x i8]* @.str21, i32 0, i32 0))
  %241 = load i32* @per_v_pc, align 4
  %242 = zext i32 %241 to i64
  %243 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 15), align 8
  %244 = icmp eq i64 %242, %243
  call void @__CPROVER_assert(i1 zeroext %244, i8* getelementptr inbounds ([15 x i8]* @.str22, i32 0, i32 0))
  %245 = load i32* @train_upc, align 4
  %246 = zext i32 %245 to i64
  %247 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 29), align 8
  %248 = icmp eq i64 %246, %247
  call void @__CPROVER_assert(i1 zeroext %248, i8* getelementptr inbounds ([16 x i8]* @.str23, i32 0, i32 0))
  %249 = load i16* %v, align 2
  %250 = zext i16 %249 to i64
  %251 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 30), align 8
  %252 = icmp eq i64 %250, %251
  call void @__CPROVER_assert(i1 zeroext %252, i8* getelementptr inbounds ([18 x i8]* @.str24, i32 0, i32 0))
  %253 = load i16* %h, align 2
  %254 = zext i16 %253 to i64
  %255 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 25), align 8
  %256 = icmp eq i64 %254, %255
  call void @__CPROVER_assert(i1 zeroext %256, i8* getelementptr inbounds ([18 x i8]* @.str25, i32 0, i32 0))
  %257 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 0, i32 0), align 8
  %258 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 20
  %259 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %258, i32 0)
  %260 = call zeroext i1 @__CPROVER_array_equal(i8* %257, i8* %259)
  call void @__CPROVER_assert(i1 zeroext %260, i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0))
  %261 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 19, i32 0), align 8
  %262 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %263 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %262, i32 0)
  %264 = call zeroext i1 @__CPROVER_array_equal(i8* %261, i8* %263)
  call void @__CPROVER_assert(i1 zeroext %264, i8* getelementptr inbounds ([21 x i8]* @.str27, i32 0, i32 0))
  %265 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 4, i32 0), align 8
  %266 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %267 = getelementptr inbounds %class.SysCArray1D* %266, i32 0, i32 0
  %268 = load i8** %267, align 8
  %269 = call zeroext i1 @__CPROVER_array_equal(i8* %265, i8* %268)
  call void @__CPROVER_assert(i1 zeroext %269, i8* getelementptr inbounds ([18 x i8]* @.str28, i32 0, i32 0))
  %270 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 33, i32 0), align 8
  %271 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 21
  %272 = getelementptr inbounds %class.SysCArray1D* %271, i32 0, i32 0
  %273 = load i8** %272, align 8
  %274 = call zeroext i1 @__CPROVER_array_equal(i8* %270, i8* %273)
  call void @__CPROVER_assert(i1 zeroext %274, i8* getelementptr inbounds ([19 x i8]* @.str29, i32 0, i32 0))
  %275 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 16, i32 0), align 8
  %276 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 24
  %277 = getelementptr inbounds %class.SysCArray1D* %276, i32 0, i32 0
  %278 = load i8** %277, align 8
  %279 = call zeroext i1 @__CPROVER_array_equal(i8* %275, i8* %278)
  call void @__CPROVER_assert(i1 zeroext %279, i8* getelementptr inbounds ([10 x i8]* @.str30, i32 0, i32 0))
  %280 = load i16* %j, align 2
  %281 = zext i16 %280 to i32
  %282 = icmp slt i32 %281, 5
  call void @__CPROVER_assert(i1 zeroext %282, i8* getelementptr inbounds ([8 x i8]* @.str31, i32 0, i32 0))
  br label %697

; <label>:283                                     ; preds = %0
  store i32 1, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  %284 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  store i8 1, i8* %4, align 1
  %285 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %284, i8* %4)
  %286 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 37
  store i8 1, i8* %5, align 1
  %287 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %286, i8* %5)
  store i64 1, i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 15), align 8
  %288 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 0, i8* %6, align 1
  %289 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %288, i8* %6)
  store i64 1, i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 29), align 8
  store i8 0, i8* @rst_inp, align 1
  store i64 2, i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 31), align 8
  %290 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 38
  store i8 0, i8* %7, align 1
  %291 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %290, i8* %7)
  store i32 2, i32* @upc, align 4
  %292 = load i8* @conf_done_inp, align 1
  %293 = trunc i8 %292 to i1
  %294 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 13
  %295 = getelementptr inbounds %class.sc_signal_bool* %294, i32 0, i32 0
  %296 = zext i1 %293 to i8
  store i8 %296, i8* %295, align 1
  %297 = load i32* @conf_num_hidden_inp, align 4
  %298 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 14
  %299 = getelementptr inbounds %class.sc_signal_int32* %298, i32 0, i32 0
  store i32 %297, i32* %299, align 4
  %300 = load i32* @conf_num_visible_inp, align 4
  %301 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 15
  %302 = getelementptr inbounds %class.sc_signal_int32* %301, i32 0, i32 0
  store i32 %300, i32* %302, align 4
  %303 = load i32* @conf_num_users_inp, align 4
  %304 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 16
  %305 = getelementptr inbounds %class.sc_signal_int32* %304, i32 0, i32 0
  store i32 %303, i32* %305, align 4
  %306 = load i32* @conf_num_loops_inp, align 4
  %307 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 17
  %308 = getelementptr inbounds %class.sc_signal_int32* %307, i32 0, i32 0
  store i32 %306, i32* %308, align 4
  %309 = load i32* @conf_num_testusers_inp, align 4
  %310 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 18
  %311 = getelementptr inbounds %class.sc_signal_int32* %310, i32 0, i32 0
  store i32 %309, i32* %311, align 4
  %312 = load i32* @conf_num_movies_inp, align 4
  %313 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 19
  %314 = getelementptr inbounds %class.sc_signal_int32* %313, i32 0, i32 0
  store i32 %312, i32* %314, align 4
  %315 = load i8* @rst_inp, align 1
  %316 = trunc i8 %315 to i1
  %317 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 1
  %318 = getelementptr inbounds %class.sc_signal_bool* %317, i32 0, i32 0
  %319 = zext i1 %316 to i8
  store i8 %319, i8* %318, align 1
  %320 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %321 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 6), align 8
  %322 = icmp ne i64 %321, 0
  %323 = zext i1 %322 to i8
  store i8 %323, i8* %8, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %320, i8* %8)
  %324 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  %325 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 2), align 8
  %326 = icmp ne i64 %325, 0
  %327 = zext i1 %326 to i8
  store i8 %327, i8* %9, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %324, i8* %9)
  %328 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 2
  %329 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 21), align 8
  %330 = trunc i64 %329 to i32
  store i32 %330, i32* %10, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %328, i32* %10)
  %331 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 3
  %332 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 22), align 8
  %333 = trunc i64 %332 to i32
  store i32 %333, i32* %11, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %331, i32* %11)
  %334 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 4
  %335 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 23), align 8
  %336 = icmp ne i64 %335, 0
  %337 = zext i1 %336 to i8
  store i8 %337, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %334, i8* %12)
  %338 = load i8* @rd_grant_inp, align 1
  %339 = trunc i8 %338 to i1
  %340 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 5
  %341 = getelementptr inbounds %class.sc_signal_bool* %340, i32 0, i32 0
  %342 = zext i1 %339 to i8
  store i8 %342, i8* %341, align 1
  %343 = load i32* @data_in_inp, align 4
  %344 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 6
  %345 = getelementptr inbounds %class.sc_signal_int32* %344, i32 0, i32 0
  store i32 %343, i32* %345, align 4
  %346 = load i8* @wr_grant_inp, align 1
  %347 = trunc i8 %346 to i1
  %348 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 10
  %349 = getelementptr inbounds %class.sc_signal_bool* %348, i32 0, i32 0
  %350 = zext i1 %347 to i8
  store i8 %350, i8* %349, align 1
  %351 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  %352 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 37), align 8
  %353 = icmp ne i64 %352, 0
  %354 = zext i1 %353 to i8
  store i8 %354, i8* %13, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %351, i8* %13)
  %355 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  %356 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 35), align 8
  %357 = trunc i64 %356 to i32
  store i32 %357, i32* %14, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %355, i32* %14)
  %358 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %359 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 36), align 8
  %360 = trunc i64 %359 to i32
  store i32 %360, i32* %15, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %358, i32* %15)
  %361 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %362 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 1), align 8
  %363 = trunc i64 %362 to i32
  store i32 %363, i32* %16, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %361, i32* %16)
  %364 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 37
  %365 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 26), align 8
  %366 = icmp ne i64 %365, 0
  %367 = zext i1 %366 to i8
  store i8 %367, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %364, i8* %17)
  %368 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 28), align 8
  %369 = and i64 %368, 65535
  %370 = sitofp i64 %369 to double
  %371 = fdiv double %370, 2.000000e+00
  %372 = fptrunc double %371 to float
  store float %372, float* %sum, align 4
  %373 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 24), align 8
  %374 = uitofp i64 %373 to double
  %375 = fdiv double %374, 1.000000e+00
  %376 = fptrunc double %375 to float
  store float %376, float* %sumOfpow2, align 4
  %377 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 7), align 8
  %378 = trunc i64 %377 to i16
  store i16 %378, i16* %j, align 2
  %379 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 30), align 8
  %380 = trunc i64 %379 to i16
  store i16 %380, i16* %v, align 2
  %381 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 25), align 8
  %382 = trunc i64 %381 to i16
  store i16 %382, i16* %h, align 2
  %383 = load i16* %j, align 2
  %384 = zext i16 %383 to i32
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %393

; <label>:386                                     ; preds = %283
  %387 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 27), align 8
  %388 = and i64 %387, 65535
  %389 = sitofp i64 %388 to double
  %390 = fdiv double %389, 2.000000e+00
  %391 = fsub double %390, 3.100000e+01
  %392 = fptrunc double %391 to float
  store float %392, float* %max, align 4
  br label %399

; <label>:393                                     ; preds = %283
  %394 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 27), align 8
  %395 = and i64 %394, 65535
  %396 = sitofp i64 %395 to double
  %397 = fdiv double %396, 2.000000e+00
  %398 = fptrunc double %397 to float
  store float %398, float* %max, align 4
  br label %399

; <label>:399                                     ; preds = %393, %386
  %400 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 20
  %401 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %400, i32 0)
  %402 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 0, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %401, i8* %402)
  %403 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %404 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %403, i32 0)
  %405 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 19, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %404, i8* %405)
  %406 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 23
  %407 = getelementptr inbounds %class.SysCArray2D* %406, i32 0, i32 0
  %408 = load float** %407, align 8
  %409 = bitcast float* %408 to i8*
  %410 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 3, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %409, i8* %410)
  %411 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %412 = getelementptr inbounds %class.SysCArray1D* %411, i32 0, i32 0
  %413 = load i8** %412, align 8
  %414 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 4, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %413, i8* %414)
  %415 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 21
  %416 = getelementptr inbounds %class.SysCArray1D* %415, i32 0, i32 0
  %417 = load i8** %416, align 8
  %418 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 33, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %417, i8* %418)
  %419 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %420 = getelementptr inbounds %class.SysCArray2D* %419, i32 0, i32 0
  %421 = load float** %420, align 8
  %422 = bitcast float* %421 to i8*
  %423 = load i16** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 32, i32 0), align 8
  %424 = bitcast i16* %423 to i8*
  call void @__CPROVER_array_copy(i8* %422, i8* %424)
  %425 = getelementptr inbounds [5 x float]* %pow2, i32 0, i32 0
  %426 = bitcast float* %425 to i8*
  %427 = load i32** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 17, i32 0), align 8
  %428 = bitcast i32* %427 to i8*
  call void @__CPROVER_array_copy(i8* %426, i8* %428)
  %429 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 24
  %430 = getelementptr inbounds %class.SysCArray1D* %429, i32 0, i32 0
  %431 = load i8** %430, align 8
  %432 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 16, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %431, i8* %432)
  %433 = load i16* %j, align 2
  %434 = zext i16 %433 to i32
  %435 = icmp slt i32 %434, 5
  call void @__CPROVER_assume(i1 zeroext %435)
  %436 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %437 = load i16* %j, align 2
  %438 = zext i16 %437 to i32
  %439 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %436, i32 %438)
  %440 = load float* %439
  store float %440, float* %tmp1, align 4
  call void @_Z4waitv()
  %441 = load float* %tmp1, align 4
  %442 = load float* %max, align 4
  %443 = fsub float %441, %442
  store float %443, float* %ve_current, align 4
  call void @_Z4waitv()
  %444 = load float* %ve_current, align 4
  %445 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %446 = load i16* %j, align 2
  %447 = zext i16 %446 to i32
  %448 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %445, i32 %447)
  store float %444, float* %448
  call void @_Z4waitv()
  br label %449

; <label>:449                                     ; preds = %399
  %450 = load i16* %j, align 2
  %451 = add i16 %450, 1
  store i16 %451, i16* %j, align 2
  br label %99

; <label>:452                                     ; preds = %99
  store i32 2, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  br label %453

; <label>:453                                     ; preds = %452
  %454 = load i8* @conf_done_inp, align 1
  %455 = trunc i8 %454 to i1
  %456 = zext i1 %455 to i64
  %457 = load i32* @conf_num_hidden_inp, align 4
  %458 = zext i32 %457 to i64
  %459 = load i32* @conf_num_visible_inp, align 4
  %460 = zext i32 %459 to i64
  %461 = load i32* @conf_num_users_inp, align 4
  %462 = zext i32 %461 to i64
  %463 = load i32* @conf_num_loops_inp, align 4
  %464 = zext i32 %463 to i64
  %465 = load i32* @conf_num_testusers_inp, align 4
  %466 = zext i32 %465 to i64
  %467 = load i32* @conf_num_movies_inp, align 4
  %468 = zext i32 %467 to i64
  %469 = load i8* @rst_inp, align 1
  %470 = trunc i8 %469 to i1
  %471 = zext i1 %470 to i64
  %472 = load i8* @rd_grant_inp, align 1
  %473 = trunc i8 %472 to i1
  %474 = zext i1 %473 to i64
  %475 = load i32* @data_in_inp, align 4
  %476 = zext i32 %475 to i64
  %477 = load i8* @wr_grant_inp, align 1
  %478 = trunc i8 %477 to i1
  %479 = zext i1 %478 to i64
  call void @_ZN11model_train6updateElllllllllll(%class.model_train* @GM, i64 %456, i64 %458, i64 %460, i64 %462, i64 %464, i64 %466, i64 %468, i64 %471, i64 %474, i64 %476, i64 %479)
  %480 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %481 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %480)
  %482 = zext i1 %481 to i64
  %483 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 6), align 8
  %484 = icmp eq i64 %482, %483
  call void @__CPROVER_assert(i1 zeroext %484, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %485 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  %486 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %485)
  %487 = zext i1 %486 to i64
  %488 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 2), align 8
  %489 = icmp eq i64 %487, %488
  call void @__CPROVER_assert(i1 zeroext %489, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %490 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 30
  %491 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %490)
  %492 = zext i16 %491 to i64
  %493 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 9), align 8
  %494 = icmp eq i64 %492, %493
  call void @__CPROVER_assert(i1 zeroext %494, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %495 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 31
  %496 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %495)
  %497 = zext i16 %496 to i64
  %498 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 14), align 8
  %499 = icmp eq i64 %497, %498
  call void @__CPROVER_assert(i1 zeroext %499, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %500 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 32
  %501 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %500)
  %502 = zext i16 %501 to i64
  %503 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 13), align 8
  %504 = icmp eq i64 %502, %503
  call void @__CPROVER_assert(i1 zeroext %504, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %505 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 33
  %506 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %505)
  %507 = zext i16 %506 to i64
  %508 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 10), align 8
  %509 = icmp eq i64 %507, %508
  call void @__CPROVER_assert(i1 zeroext %509, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %510 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 34
  %511 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %510)
  %512 = zext i16 %511 to i64
  %513 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 12), align 8
  %514 = icmp eq i64 %512, %513
  call void @__CPROVER_assert(i1 zeroext %514, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %515 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %516 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %515)
  %517 = zext i16 %516 to i64
  %518 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 11), align 8
  %519 = icmp eq i64 %517, %518
  call void @__CPROVER_assert(i1 zeroext %519, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %520 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 2
  %521 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %520)
  %522 = zext i32 %521 to i64
  %523 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 21), align 8
  %524 = icmp eq i64 %522, %523
  call void @__CPROVER_assert(i1 zeroext %524, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %525 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 3
  %526 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %525)
  %527 = zext i32 %526 to i64
  %528 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 22), align 8
  %529 = icmp eq i64 %527, %528
  call void @__CPROVER_assert(i1 zeroext %529, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %530 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 4
  %531 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %530)
  %532 = zext i1 %531 to i64
  %533 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 23), align 8
  %534 = icmp eq i64 %532, %533
  call void @__CPROVER_assert(i1 zeroext %534, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %535 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  %536 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %535)
  %537 = zext i1 %536 to i64
  %538 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 37), align 8
  %539 = icmp eq i64 %537, %538
  call void @__CPROVER_assert(i1 zeroext %539, i8* getelementptr inbounds ([17 x i8]* @.str12, i32 0, i32 0))
  %540 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  %541 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %540)
  %542 = zext i32 %541 to i64
  %543 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 35), align 8
  %544 = icmp eq i64 %542, %543
  call void @__CPROVER_assert(i1 zeroext %544, i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0))
  %545 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %546 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %545)
  %547 = zext i32 %546 to i64
  %548 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 36), align 8
  %549 = icmp eq i64 %547, %548
  call void @__CPROVER_assert(i1 zeroext %549, i8* getelementptr inbounds ([16 x i8]* @.str14, i32 0, i32 0))
  %550 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %551 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %550)
  %552 = zext i32 %551 to i64
  %553 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 1), align 8
  %554 = icmp eq i64 %552, %553
  call void @__CPROVER_assert(i1 zeroext %554, i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0))
  %555 = load i32* @upc, align 4
  %556 = zext i32 %555 to i64
  %557 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 31), align 8
  %558 = icmp eq i64 %556, %557
  call void @__CPROVER_assert(i1 zeroext %558, i8* getelementptr inbounds ([10 x i8]* @.str16, i32 0, i32 0))
  %559 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 37
  %560 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %559)
  %561 = zext i1 %560 to i64
  %562 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 26), align 8
  %563 = icmp eq i64 %561, %562
  call void @__CPROVER_assert(i1 zeroext %563, i8* getelementptr inbounds ([23 x i8]* @.str17, i32 0, i32 0))
  %564 = load float* %sum, align 4
  %565 = fpext float %564 to double
  %566 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 28), align 8
  %567 = and i64 %566, 65535
  %568 = sitofp i64 %567 to double
  %569 = fdiv double %568, 2.000000e+00
  %570 = fcmp oeq double %565, %569
  call void @__CPROVER_assert(i1 zeroext %570, i8* getelementptr inbounds ([16 x i8]* @.str18, i32 0, i32 0))
  %571 = load float* %max, align 4
  %572 = fpext float %571 to double
  %573 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 27), align 8
  %574 = and i64 %573, 65535
  %575 = sitofp i64 %574 to double
  %576 = fdiv double %575, 2.000000e+00
  %577 = fcmp oeq double %572, %576
  call void @__CPROVER_assert(i1 zeroext %577, i8* getelementptr inbounds ([16 x i8]* @.str19, i32 0, i32 0))
  %578 = load float* %sumOfpow2, align 4
  %579 = fpext float %578 to double
  %580 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 24), align 8
  %581 = uitofp i64 %580 to double
  %582 = fdiv double %581, 1.000000e+00
  %583 = fcmp oeq double %579, %582
  call void @__CPROVER_assert(i1 zeroext %583, i8* getelementptr inbounds ([16 x i8]* @.str20, i32 0, i32 0))
  %584 = load i16* %j, align 2
  %585 = zext i16 %584 to i64
  %586 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 7), align 8
  %587 = icmp eq i64 %585, %586
  call void @__CPROVER_assert(i1 zeroext %587, i8* getelementptr inbounds ([13 x i8]* @.str21, i32 0, i32 0))
  %588 = load i32* @per_v_pc, align 4
  %589 = zext i32 %588 to i64
  %590 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 15), align 8
  %591 = icmp eq i64 %589, %590
  call void @__CPROVER_assert(i1 zeroext %591, i8* getelementptr inbounds ([15 x i8]* @.str22, i32 0, i32 0))
  %592 = load i32* @train_upc, align 4
  %593 = zext i32 %592 to i64
  %594 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 29), align 8
  %595 = icmp eq i64 %593, %594
  call void @__CPROVER_assert(i1 zeroext %595, i8* getelementptr inbounds ([16 x i8]* @.str23, i32 0, i32 0))
  %596 = load i16* %v, align 2
  %597 = zext i16 %596 to i64
  %598 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 30), align 8
  %599 = icmp eq i64 %597, %598
  call void @__CPROVER_assert(i1 zeroext %599, i8* getelementptr inbounds ([18 x i8]* @.str24, i32 0, i32 0))
  %600 = load i16* %h, align 2
  %601 = zext i16 %600 to i64
  %602 = load i64* getelementptr inbounds (%class.model_train* @GM, i32 0, i32 25), align 8
  %603 = icmp eq i64 %601, %602
  call void @__CPROVER_assert(i1 zeroext %603, i8* getelementptr inbounds ([18 x i8]* @.str25, i32 0, i32 0))
  %604 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 0, i32 0), align 8
  %605 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 20
  %606 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %605, i32 0)
  %607 = call zeroext i1 @__CPROVER_array_equal(i8* %604, i8* %606)
  call void @__CPROVER_assert(i1 zeroext %607, i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0))
  %608 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 19, i32 0), align 8
  %609 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %610 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %609, i32 0)
  %611 = call zeroext i1 @__CPROVER_array_equal(i8* %608, i8* %610)
  call void @__CPROVER_assert(i1 zeroext %611, i8* getelementptr inbounds ([21 x i8]* @.str27, i32 0, i32 0))
  %612 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 4, i32 0), align 8
  %613 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %614 = getelementptr inbounds %class.SysCArray1D* %613, i32 0, i32 0
  %615 = load i8** %614, align 8
  %616 = call zeroext i1 @__CPROVER_array_equal(i8* %612, i8* %615)
  call void @__CPROVER_assert(i1 zeroext %616, i8* getelementptr inbounds ([18 x i8]* @.str28, i32 0, i32 0))
  %617 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 33, i32 0), align 8
  %618 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 21
  %619 = getelementptr inbounds %class.SysCArray1D* %618, i32 0, i32 0
  %620 = load i8** %619, align 8
  %621 = call zeroext i1 @__CPROVER_array_equal(i8* %617, i8* %620)
  call void @__CPROVER_assert(i1 zeroext %621, i8* getelementptr inbounds ([19 x i8]* @.str29, i32 0, i32 0))
  %622 = load i8** getelementptr inbounds (%class.model_train* @GM, i32 0, i32 16, i32 0), align 8
  %623 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 24
  %624 = getelementptr inbounds %class.SysCArray1D* %623, i32 0, i32 0
  %625 = load i8** %624, align 8
  %626 = call zeroext i1 @__CPROVER_array_equal(i8* %622, i8* %625)
  call void @__CPROVER_assert(i1 zeroext %626, i8* getelementptr inbounds ([10 x i8]* @.str30, i32 0, i32 0))
  br label %697
                                                  ; No predecessors!
  store i16 0, i16* %j, align 2
  br label %628

; <label>:628                                     ; preds = %650, %627
  %629 = load i16* %j, align 2
  %630 = zext i16 %629 to i32
  %631 = icmp slt i32 %630, 5
  br i1 %631, label %632, label %653

; <label>:632                                     ; preds = %628
  store i32 3, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  %633 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %634 = load i16* %j, align 2
  %635 = zext i16 %634 to i32
  %636 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %633, i32 %635)
  %637 = load float* %636
  store float %637, float* %tmp1, align 4
  call void @_Z4waitv()
  %638 = load float* %tmp1, align 4
  %639 = call i64 @_Z8_c_16_15f(float %638)
  %640 = call zeroext i16 @_Z10to_int_expl(i64 %639)
  %641 = zext i16 %640 to i64
  %642 = call float @_Z8_b_16_15l(i64 %641)
  store float %642, float* %dp, align 4
  %643 = load float* %dp, align 4
  %644 = load float* %sumOfpow2, align 4
  %645 = fadd float %644, %643
  store float %645, float* %sumOfpow2, align 4
  %646 = load float* %dp, align 4
  %647 = load i16* %j, align 2
  %648 = zext i16 %647 to i64
  %649 = getelementptr inbounds [5 x float]* %pow2, i32 0, i64 %648
  store float %646, float* %649
  br label %650

; <label>:650                                     ; preds = %632
  %651 = load i16* %j, align 2
  %652 = add i16 %651, 1
  store i16 %652, i16* %j, align 2
  br label %628

; <label>:653                                     ; preds = %628
  store i32 4, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  br label %654

; <label>:654                                     ; preds = %653
  store i16 0, i16* %j, align 2
  br label %655

; <label>:655                                     ; preds = %683, %654
  %656 = load i16* %j, align 2
  %657 = zext i16 %656 to i32
  %658 = icmp slt i32 %657, 5
  br i1 %658, label %659, label %686

; <label>:659                                     ; preds = %655
  store i32 4, i32* @per_v_pc, align 4
  store i32 1, i32* @train_upc, align 4
  %660 = call float @_ZN3rbm8rand_genEv(%struct.rbm* %18)
  store float %660, float* %RAND, align 4
  %661 = load i16* %j, align 2
  %662 = zext i16 %661 to i64
  %663 = getelementptr inbounds [5 x float]* %pow2, i32 0, i64 %662
  %664 = load float* %663
  store float %664, float* %dp1, align 4
  call void @_Z4waitv()
  %665 = load float* %dp1, align 4
  %666 = load float* %sumOfpow2, align 4
  %667 = fdiv float %665, %666
  store float %667, float* %probs, align 4
  store i8 0, i8* %tmpb, align 1
  %668 = load float* %RAND, align 4
  %669 = load float* %probs, align 4
  %670 = fcmp olt float %668, %669
  br i1 %670, label %671, label %672

; <label>:671                                     ; preds = %659
  store i8 1, i8* %tmpb, align 1
  br label %672

; <label>:672                                     ; preds = %671, %659
  %673 = load i8* %tmpb, align 1
  %674 = trunc i8 %673 to i1
  %675 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 21
  %676 = load i16* %v, align 2
  %677 = zext i16 %676 to i32
  %678 = load i16* %j, align 2
  %679 = zext i16 %678 to i32
  %680 = add nsw i32 %677, %679
  %681 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %675, i32 %680)
  %682 = zext i1 %674 to i8
  store i8 %682, i8* %681
  call void @_Z4waitv()
  br label %683

; <label>:683                                     ; preds = %672
  %684 = load i16* %j, align 2
  %685 = add i16 %684, 1
  store i16 %685, i16* %j, align 2
  br label %655

; <label>:686                                     ; preds = %655
  br label %687

; <label>:687                                     ; preds = %686
  %688 = load i16* %v, align 2
  %689 = zext i16 %688 to i32
  %690 = add nsw i32 %689, 5
  %691 = trunc i32 %690 to i16
  store i16 %691, i16* %v, align 2
  br label %20

; <label>:692                                     ; preds = %30, %20
  %693 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 21
  %694 = load i16* %3, align 2
  %695 = zext i16 %694 to i32
  %696 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %693, i32 %695)
  store i8 1, i8* %696
  call void @_Z4waitv()
  store i32 0, i32* @per_v_pc, align 4
  store i32 2, i32* @train_upc, align 4
  br label %697

; <label>:697                                     ; preds = %692, %453, %104
  ret void
}

define linkonce_odr i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %this, i32 %idx) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i32 %idx, i32* %2, align 4
  %3 = load %class.SysCArray1D** %1
  %4 = load i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = getelementptr inbounds i8* %7, i64 %5
  ret i8* %8
}

declare float @_ZN3rbm8rand_genEv(%struct.rbm*)

define linkonce_odr float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %this, i32 %idx) nounwind align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  store i32 %idx, i32* %2, align 4
  %3 = load %class.SysCArray2D** %1
  %4 = load i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.SysCArray2D* %3, i32 0, i32 0
  %7 = load float** %6, align 8
  %8 = getelementptr inbounds float* %7, i64 %5
  ret float* %8
}

declare void @__CPROVER_assert(i1 zeroext, i8*)

declare zeroext i1 @__CPROVER_array_equal(i8*, i8*)

declare void @__CPROVER_array_copy(i8*, i8*)

declare void @__CPROVER_assume(i1 zeroext)

define void @_ZN3rbm27activateHiddenUnits_predictEbtt(%struct.rbm* %this, i1 zeroext %pingpong, i16 zeroext %nh, i16 zeroext %nv) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %h = alloca i16, align 2
  %v = alloca i16, align 2
  %sum = alloca float, align 4
  %tmp = alloca float, align 4
  %prob = alloca float, align 4
  %tmp1 = alloca float, align 4
  %current_data = alloca i8, align 1
  %comp = alloca i8, align 1
  %th = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %5 = zext i1 %pingpong to i8
  store i8 %5, i8* %2, align 1
  store i16 %nh, i16* %3, align 2
  store i16 %nv, i16* %4, align 2
  %6 = load %struct.rbm** %1
  br label %7

; <label>:7                                       ; preds = %0
  store i16 0, i16* %h, align 2
  br label %8

; <label>:8                                       ; preds = %83, %7
  %9 = load i16* %h, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp slt i32 %10, 100
  br i1 %11, label %12, label %86

; <label>:12                                      ; preds = %8
  %13 = load i16* %h, align 2
  %14 = zext i16 %13 to i32
  %15 = load i16* %3, align 2
  %16 = zext i16 %15 to i32
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %12
  br label %86

; <label>:19                                      ; preds = %12
  store float 0.000000e+00, float* %sum, align 4
  br label %20

; <label>:20                                      ; preds = %19
  store i16 0, i16* %v, align 2
  br label %21

; <label>:21                                      ; preds = %59, %20
  %22 = load i16* %v, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp slt i32 %23, 501
  br i1 %24, label %25, label %62

; <label>:25                                      ; preds = %21
  %26 = load i16* %v, align 2
  %27 = zext i16 %26 to i32
  %28 = load i16* %4, align 2
  %29 = zext i16 %28 to i32
  %30 = add nsw i32 %29, 1
  %31 = icmp eq i32 %27, %30
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %25
  br label %62

; <label>:33                                      ; preds = %25
  %34 = load i16* %v, align 2
  %35 = zext i16 %34 to i64
  %36 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 20
  %37 = load i8* %2, align 1
  %38 = trunc i8 %37 to i1
  %39 = zext i1 %38 to i32
  %40 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %36, i32 %39)
  %41 = getelementptr inbounds i8* %40, i64 %35
  %42 = load i8* %41
  store i8 %42, i8* %current_data, align 1
  call void @_Z4waitv()
  %43 = load i8* %current_data, align 1
  %44 = zext i8 %43 to i32
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %58

; <label>:46                                      ; preds = %33
  %47 = load i16* %h, align 2
  %48 = zext i16 %47 to i64
  %49 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 23
  %50 = load i16* %v, align 2
  %51 = zext i16 %50 to i32
  %52 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %49, i32 %51)
  %53 = getelementptr inbounds float* %52, i64 %48
  %54 = load float* %53
  store float %54, float* %tmp, align 4
  call void @_Z4waitv()
  %55 = load float* %tmp, align 4
  %56 = load float* %sum, align 4
  %57 = fadd float %56, %55
  store float %57, float* %sum, align 4
  br label %58

; <label>:58                                      ; preds = %46, %33
  br label %59

; <label>:59                                      ; preds = %58
  %60 = load i16* %v, align 2
  %61 = add i16 %60, 1
  store i16 %61, i16* %v, align 2
  br label %21

; <label>:62                                      ; preds = %32, %21
  %63 = load float* %sum, align 4
  %64 = call i64 @_Z8_c_16_15f(float %63)
  %65 = call zeroext i16 @_Z7sigmoidl(i64 %64)
  %66 = zext i16 %65 to i64
  %67 = call float @_Z8_b_16_15l(i64 %66)
  store float %67, float* %prob, align 4
  %68 = load float* %prob, align 4
  %69 = fcmp olt float 5.000000e-01, %68
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %comp, align 1
  %71 = load i8* %comp, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %74

; <label>:73                                      ; preds = %62
  store i8 1, i8* %th, align 1
  br label %75

; <label>:74                                      ; preds = %62
  store i8 0, i8* %th, align 1
  br label %75

; <label>:75                                      ; preds = %74, %73
  %76 = load i8* %th, align 1
  %77 = trunc i8 %76 to i1
  %78 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 22
  %79 = load i16* %h, align 2
  %80 = zext i16 %79 to i32
  %81 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %78, i32 %80)
  %82 = zext i1 %77 to i8
  store i8 %82, i8* %81
  call void @_Z4waitv()
  br label %83

; <label>:83                                      ; preds = %75
  %84 = load i16* %h, align 2
  %85 = add i16 %84, 1
  store i16 %85, i16* %h, align 2
  br label %8

; <label>:86                                      ; preds = %18, %8
  %87 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 22
  %88 = load i16* %3, align 2
  %89 = zext i16 %88 to i32
  %90 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %87, i32 %89)
  store i8 1, i8* %90
  call void @_Z4waitv()
  ret void
}

define void @_ZN3rbm28activateVisibleUnits_predictEtt(%struct.rbm* %this, i16 zeroext %nh, i16 zeroext %nv) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %v = alloca i16, align 2
  %h = alloca i16, align 2
  %sum = alloca float, align 4
  %max = alloca float, align 4
  %probs = alloca float, align 4
  %pow2 = alloca [5 x float], align 16
  %sumOfpow2 = alloca float, align 4
  %expectation = alloca float, align 4
  %prediction = alloca i8, align 1
  %tmp = alloca i16, align 2
  %tmp1 = alloca float, align 4
  %tmp2 = alloca i8, align 1
  %j = alloca i16, align 2
  %dp = alloca float, align 4
  %dp1 = alloca float, align 4
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  store i16 %nh, i16* %2, align 2
  store i16 %nv, i16* %3, align 2
  %4 = load %struct.rbm** %1
  br label %5

; <label>:5                                       ; preds = %0
  store i16 0, i16* %v, align 2
  br label %6

; <label>:6                                       ; preds = %193, %5
  %7 = load i16* %v, align 2
  %8 = zext i16 %7 to i32
  %9 = icmp slt i32 %8, 500
  br i1 %9, label %10, label %198

; <label>:10                                      ; preds = %6
  %11 = load i16* %v, align 2
  %12 = zext i16 %11 to i32
  %13 = load i16* %3, align 2
  %14 = zext i16 %13 to i32
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %10
  br label %198

; <label>:17                                      ; preds = %10
  store float -5.000000e+02, float* %max, align 4
  br label %18

; <label>:18                                      ; preds = %17
  store i16 0, i16* %j, align 2
  br label %19

; <label>:19                                      ; preds = %78, %18
  %20 = load i16* %j, align 2
  %21 = zext i16 %20 to i32
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %81

; <label>:23                                      ; preds = %19
  store float 0.000000e+00, float* %sum, align 4
  br label %24

; <label>:24                                      ; preds = %23
  store i16 0, i16* %h, align 2
  br label %25

; <label>:25                                      ; preds = %63, %24
  %26 = load i16* %h, align 2
  %27 = zext i16 %26 to i32
  %28 = icmp slt i32 %27, 101
  br i1 %28, label %29, label %66

; <label>:29                                      ; preds = %25
  %30 = load i16* %h, align 2
  %31 = zext i16 %30 to i32
  %32 = load i16* %2, align 2
  %33 = zext i16 %32 to i32
  %34 = add nsw i32 %33, 1
  %35 = icmp eq i32 %31, %34
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %29
  br label %66

; <label>:37                                      ; preds = %29
  %38 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 22
  %39 = load i16* %h, align 2
  %40 = zext i16 %39 to i32
  %41 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %38, i32 %40)
  %42 = load i8* %41
  %43 = trunc i8 %42 to i1
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %tmp2, align 1
  call void @_Z4waitv()
  %45 = load i16* %h, align 2
  %46 = zext i16 %45 to i64
  %47 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 23
  %48 = load i16* %v, align 2
  %49 = zext i16 %48 to i32
  %50 = load i16* %j, align 2
  %51 = zext i16 %50 to i32
  %52 = add nsw i32 %49, %51
  %53 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %47, i32 %52)
  %54 = getelementptr inbounds float* %53, i64 %46
  %55 = load float* %54
  store float %55, float* %tmp1, align 4
  call void @_Z4waitv()
  %56 = load i8* %tmp2, align 1
  %57 = trunc i8 %56 to i1
  br i1 %57, label %58, label %62

; <label>:58                                      ; preds = %37
  %59 = load float* %tmp1, align 4
  %60 = load float* %sum, align 4
  %61 = fadd float %60, %59
  store float %61, float* %sum, align 4
  br label %62

; <label>:62                                      ; preds = %58, %37
  call void @_Z4waitv()
  br label %63

; <label>:63                                      ; preds = %62
  %64 = load i16* %h, align 2
  %65 = add i16 %64, 1
  store i16 %65, i16* %h, align 2
  br label %25

; <label>:66                                      ; preds = %36, %25
  %67 = load float* %sum, align 4
  %68 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 26
  %69 = load i16* %j, align 2
  %70 = zext i16 %69 to i32
  %71 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %68, i32 %70)
  store float %67, float* %71
  call void @_Z4waitv()
  %72 = load float* %sum, align 4
  %73 = load float* %max, align 4
  %74 = fcmp ogt float %72, %73
  br i1 %74, label %75, label %77

; <label>:75                                      ; preds = %66
  %76 = load float* %sum, align 4
  store float %76, float* %max, align 4
  br label %77

; <label>:77                                      ; preds = %75, %66
  br label %78

; <label>:78                                      ; preds = %77
  %79 = load i16* %j, align 2
  %80 = add i16 %79, 1
  store i16 %80, i16* %j, align 2
  br label %19

; <label>:81                                      ; preds = %19
  %82 = load float* %max, align 4
  %83 = fsub float %82, 3.100000e+01
  store float %83, float* %max, align 4
  br label %84

; <label>:84                                      ; preds = %81
  store i16 0, i16* %j, align 2
  br label %85

; <label>:85                                      ; preds = %102, %84
  %86 = load i16* %j, align 2
  %87 = zext i16 %86 to i32
  %88 = icmp slt i32 %87, 5
  br i1 %88, label %89, label %105

; <label>:89                                      ; preds = %85
  %90 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 26
  %91 = load i16* %j, align 2
  %92 = zext i16 %91 to i32
  %93 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %90, i32 %92)
  %94 = load float* %93
  store float %94, float* %tmp1, align 4
  call void @_Z4waitv()
  %95 = load float* %tmp1, align 4
  %96 = load float* %max, align 4
  %97 = fsub float %95, %96
  %98 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 26
  %99 = load i16* %j, align 2
  %100 = zext i16 %99 to i32
  %101 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %98, i32 %100)
  store float %97, float* %101
  call void @_Z4waitv()
  br label %102

; <label>:102                                     ; preds = %89
  %103 = load i16* %j, align 2
  %104 = add i16 %103, 1
  store i16 %104, i16* %j, align 2
  br label %85

; <label>:105                                     ; preds = %85
  store float 0.000000e+00, float* %sumOfpow2, align 4
  br label %106

; <label>:106                                     ; preds = %105
  store i16 0, i16* %j, align 2
  br label %107

; <label>:107                                     ; preds = %129, %106
  %108 = load i16* %j, align 2
  %109 = zext i16 %108 to i32
  %110 = icmp slt i32 %109, 5
  br i1 %110, label %111, label %132

; <label>:111                                     ; preds = %107
  %112 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 26
  %113 = load i16* %j, align 2
  %114 = zext i16 %113 to i32
  %115 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %112, i32 %114)
  %116 = load float* %115
  store float %116, float* %tmp1, align 4
  call void @_Z4waitv()
  %117 = load float* %tmp1, align 4
  %118 = call i64 @_Z8_c_16_15f(float %117)
  %119 = call zeroext i16 @_Z10to_int_expl(i64 %118)
  %120 = zext i16 %119 to i64
  %121 = call float @_Z8_b_16_15l(i64 %120)
  store float %121, float* %dp, align 4
  %122 = load float* %dp, align 4
  %123 = load float* %sumOfpow2, align 4
  %124 = fadd float %123, %122
  store float %124, float* %sumOfpow2, align 4
  %125 = load float* %dp, align 4
  %126 = load i16* %j, align 2
  %127 = zext i16 %126 to i64
  %128 = getelementptr inbounds [5 x float]* %pow2, i32 0, i64 %127
  store float %125, float* %128
  br label %129

; <label>:129                                     ; preds = %111
  %130 = load i16* %j, align 2
  %131 = add i16 %130, 1
  store i16 %131, i16* %j, align 2
  br label %107

; <label>:132                                     ; preds = %107
  store float 0.000000e+00, float* %expectation, align 4
  br label %133

; <label>:133                                     ; preds = %132
  store i16 0, i16* %j, align 2
  br label %134

; <label>:134                                     ; preds = %153, %133
  %135 = load i16* %j, align 2
  %136 = zext i16 %135 to i32
  %137 = icmp slt i32 %136, 5
  br i1 %137, label %138, label %156

; <label>:138                                     ; preds = %134
  %139 = load i16* %j, align 2
  %140 = zext i16 %139 to i64
  %141 = getelementptr inbounds [5 x float]* %pow2, i32 0, i64 %140
  %142 = load float* %141
  store float %142, float* %dp1, align 4
  call void @_Z4waitv()
  %143 = load float* %dp1, align 4
  %144 = load float* %sumOfpow2, align 4
  %145 = fdiv float %143, %144
  store float %145, float* %probs, align 4
  %146 = load i16* %j, align 2
  %147 = zext i16 %146 to i32
  %148 = sitofp i32 %147 to float
  %149 = load float* %probs, align 4
  %150 = fmul float %148, %149
  %151 = load float* %expectation, align 4
  %152 = fadd float %151, %150
  store float %152, float* %expectation, align 4
  br label %153

; <label>:153                                     ; preds = %138
  %154 = load i16* %j, align 2
  %155 = add i16 %154, 1
  store i16 %155, i16* %j, align 2
  br label %134

; <label>:156                                     ; preds = %134
  %157 = load float* %expectation, align 4
  %158 = fptosi float %157 to i64
  %159 = call i64 @_Z6round_l(i64 %158)
  %160 = trunc i64 %159 to i8
  store i8 %160, i8* %prediction, align 1
  br label %161

; <label>:161                                     ; preds = %156
  store i16 0, i16* %j, align 2
  br label %162

; <label>:162                                     ; preds = %189, %161
  %163 = load i16* %j, align 2
  %164 = zext i16 %163 to i32
  %165 = icmp slt i32 %164, 5
  br i1 %165, label %166, label %192

; <label>:166                                     ; preds = %162
  %167 = load i16* %j, align 2
  %168 = zext i16 %167 to i32
  %169 = load i8* %prediction, align 1
  %170 = zext i8 %169 to i32
  %171 = icmp eq i32 %168, %170
  br i1 %171, label %172, label %180

; <label>:172                                     ; preds = %166
  %173 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 27
  %174 = load i16* %v, align 2
  %175 = zext i16 %174 to i32
  %176 = load i16* %j, align 2
  %177 = zext i16 %176 to i32
  %178 = add nsw i32 %175, %177
  %179 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %173, i32 %178)
  store i8 1, i8* %179
  br label %188

; <label>:180                                     ; preds = %166
  %181 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 27
  %182 = load i16* %v, align 2
  %183 = zext i16 %182 to i32
  %184 = load i16* %j, align 2
  %185 = zext i16 %184 to i32
  %186 = add nsw i32 %183, %185
  %187 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %181, i32 %186)
  store i8 0, i8* %187
  br label %188

; <label>:188                                     ; preds = %180, %172
  call void @_Z4waitv()
  br label %189

; <label>:189                                     ; preds = %188
  %190 = load i16* %j, align 2
  %191 = add i16 %190, 1
  store i16 %191, i16* %j, align 2
  br label %162

; <label>:192                                     ; preds = %162
  br label %193

; <label>:193                                     ; preds = %192
  %194 = load i16* %v, align 2
  %195 = zext i16 %194 to i32
  %196 = add nsw i32 %195, 5
  %197 = trunc i32 %196 to i16
  store i16 %197, i16* %v, align 2
  br label %6

; <label>:198                                     ; preds = %16, %6
  %199 = getelementptr inbounds %struct.rbm* %4, i32 0, i32 27
  %200 = load i16* %3, align 2
  %201 = zext i16 %200 to i32
  %202 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %199, i32 %201)
  store i8 1, i8* %202
  call void @_Z4waitv()
  ret void
}

declare i64 @_Z6round_l(i64)

define internal void @__cxx_global_var_init32() {
  call void @_ZN3rbmC1Ev(%struct.rbm* @IMPL)
  ret void
}

define linkonce_odr void @_ZN3rbmC1Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  call void @_ZN3rbmC2Ev(%struct.rbm* %2)
  ret void
}

define i32 @main() {
  %1 = alloca i32, align 4
  store i32 0, i32* %1
  call void @_ZN3rbm9train_rbmEv(%struct.rbm* @IMPL)
  ret i32 0
}

define linkonce_odr void @_ZN8type_memIbLj512EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 512)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

declare i8* @__CPROVER_malloc(i64)

define linkonce_odr void @_ZN8type_memItLj8EEC2Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  %3 = call i8* @__CPROVER_malloc(i64 16)
  %4 = bitcast i8* %3 to i16*
  %5 = getelementptr inbounds %1* %2, i32 0, i32 0
  store i16* %4, i16** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EEC2Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  %3 = call i8* @__CPROVER_malloc(i64 32)
  %4 = bitcast i8* %3 to i32*
  %5 = getelementptr inbounds %0* %2, i32 0, i32 0
  store i32* %4, i32** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj65536EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 65536)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 65536)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EED2Ev(%1* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EED2Ev(%0* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj65536EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN3rbmC2Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  %3 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 0
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %3, i8* getelementptr inbounds ([4 x i8]* @.str33, i32 0, i32 0))
  %4 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %4, i8* getelementptr inbounds ([4 x i8]* @.str34, i32 0, i32 0))
  %5 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 2
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %5, i8* getelementptr inbounds ([9 x i8]* @.str35, i32 0, i32 0))
  %6 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 3
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %6, i8* getelementptr inbounds ([10 x i8]* @.str36, i32 0, i32 0))
  %7 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 4
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %7, i8* getelementptr inbounds ([11 x i8]* @.str37, i32 0, i32 0))
  %8 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 5
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %8, i8* getelementptr inbounds ([9 x i8]* @.str38, i32 0, i32 0))
  %9 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 6
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %9, i8* getelementptr inbounds ([8 x i8]* @.str39, i32 0, i32 0))
  %10 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 7
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %10, i8* getelementptr inbounds ([9 x i8]* @.str40, i32 0, i32 0))
  %11 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 8
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %11, i8* getelementptr inbounds ([10 x i8]* @.str41, i32 0, i32 0))
  %12 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 9
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %12, i8* getelementptr inbounds ([11 x i8]* @.str42, i32 0, i32 0))
  %13 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 10
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %13, i8* getelementptr inbounds ([9 x i8]* @.str43, i32 0, i32 0))
  %14 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 11
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %14, i8* getelementptr inbounds ([9 x i8]* @.str44, i32 0, i32 0))
  %15 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 12
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %15, i8* getelementptr inbounds ([5 x i8]* @.str45, i32 0, i32 0))
  %16 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 13
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %16, i8* getelementptr inbounds ([10 x i8]* @.str46, i32 0, i32 0))
  %17 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 14
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %17, i8* getelementptr inbounds ([16 x i8]* @.str47, i32 0, i32 0))
  %18 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 15
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %18, i8* getelementptr inbounds ([17 x i8]* @.str48, i32 0, i32 0))
  %19 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 16
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %19, i8* getelementptr inbounds ([15 x i8]* @.str49, i32 0, i32 0))
  %20 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 17
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %20, i8* getelementptr inbounds ([15 x i8]* @.str50, i32 0, i32 0))
  %21 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 18
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %21, i8* getelementptr inbounds ([19 x i8]* @.str51, i32 0, i32 0))
  %22 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 19
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %22, i8* getelementptr inbounds ([16 x i8]* @.str52, i32 0, i32 0))
  %23 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 20
  call void @_ZN13SysCArray2DstIhLj2ELj512EEC1Ev(%class.SysCArray2Dst* %23)
  %24 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 21
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %24)
  %25 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 22
  call void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %25)
  %26 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 23
  call void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%class.SysCArray2D* %26)
  %27 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 24
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray1D* %27)
  %28 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 25
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray1D* %28)
  %29 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 26
  call void @_ZN11SysCArray1DIfLj5EEC1Ev(%class.SysCArray2D* %29)
  %30 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 27
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %30)
  %31 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 28
  call void @_ZN13SysCArray2DstIhLj2ELj128EEC1Ev(%class.SysCArray2Dst* %31)
  %32 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 30
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %32)
  %33 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 31
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %33)
  %34 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 32
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %34)
  %35 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 33
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %35)
  %36 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 34
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %36)
  %37 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 35
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %37)
  %38 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 36
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %38)
  %39 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 37
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %39)
  %40 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 38
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %40)
  %41 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 39
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %41)
  %42 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 40
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %42)
  %43 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 41
  call void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %43)
  %44 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 42
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %44)
  %45 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 43
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %45)
  %46 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 44
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %46)
  %47 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 45
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %47)
  br label %48

; <label>:48                                      ; preds = %0
  br label %49

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %51 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %50)
  %52 = load i8* %51
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i32
  call void @_Z15reset_signal_isib(i32 %54, i1 zeroext false)
  br label %55

; <label>:55                                      ; preds = %49
  br label %56

; <label>:56                                      ; preds = %55
  %57 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %58 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %57)
  %59 = load i8* %58
  %60 = trunc i8 %59 to i1
  %61 = zext i1 %60 to i32
  call void @_Z15reset_signal_isib(i32 %61, i1 zeroext false)
  br label %62

; <label>:62                                      ; preds = %56
  br label %63

; <label>:63                                      ; preds = %62
  %64 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %65 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %64)
  %66 = load i8* %65
  %67 = trunc i8 %66 to i1
  %68 = zext i1 %67 to i32
  call void @_Z15reset_signal_isib(i32 %68, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %69

; <label>:69                                      ; preds = %63
  br label %70

; <label>:70                                      ; preds = %69
  %71 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %72 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %71)
  %73 = load i8* %72
  %74 = trunc i8 %73 to i1
  %75 = zext i1 %74 to i32
  call void @_Z15reset_signal_isib(i32 %75, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %76

; <label>:76                                      ; preds = %70
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %79 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %78)
  %80 = load i8* %79
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i32
  call void @_Z15reset_signal_isib(i32 %82, i1 zeroext false)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2, align 8
  call void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i8** %2, align 8
  call void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj512EEC1Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  call void @_ZN13SysCArray2DstIhLj2ELj512EEC2Ev(%class.SysCArray2Dst* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray1DIfLj5EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj128EEC1Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  call void @_ZN13SysCArray2DstIhLj2ELj128EEC2Ev(%class.SysCArray2Dst* %2)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  call void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %2)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  call void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %2)
  ret void
}

define linkonce_odr void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  call void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %2)
  ret void
}

define linkonce_odr i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  ret i8* %3
}

define linkonce_odr void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj128EEC2Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  %3 = call i8* @__CPROVER_malloc(i64 256)
  %4 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 128)
  %6 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 20)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %eqsize = alloca i32, align 4
  %acsize = alloca i32, align 4
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  store i32 50601, i32* %acsize, align 4
  %3 = load i32* %acsize, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 1, i32* %eqsize, align 4
  br label %131

; <label>:6                                       ; preds = %0
  %7 = load i32* %acsize, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  store i32 2, i32* %eqsize, align 4
  br label %130

; <label>:10                                      ; preds = %6
  %11 = load i32* %acsize, align 4
  %12 = icmp ugt i32 %11, 2
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %10
  %14 = load i32* %acsize, align 4
  %15 = icmp ule i32 %14, 4
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %13
  store i32 4, i32* %eqsize, align 4
  br label %129

; <label>:17                                      ; preds = %13, %10
  %18 = load i32* %acsize, align 4
  %19 = icmp ugt i32 %18, 4
  br i1 %19, label %20, label %24

; <label>:20                                      ; preds = %17
  %21 = load i32* %acsize, align 4
  %22 = icmp ule i32 %21, 8
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %20
  store i32 8, i32* %eqsize, align 4
  br label %128

; <label>:24                                      ; preds = %20, %17
  %25 = load i32* %acsize, align 4
  %26 = icmp ugt i32 %25, 8
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %24
  %28 = load i32* %acsize, align 4
  %29 = icmp ule i32 %28, 16
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %27
  store i32 16, i32* %eqsize, align 4
  br label %127

; <label>:31                                      ; preds = %27, %24
  %32 = load i32* %acsize, align 4
  %33 = icmp ugt i32 %32, 16
  br i1 %33, label %34, label %38

; <label>:34                                      ; preds = %31
  %35 = load i32* %acsize, align 4
  %36 = icmp ule i32 %35, 32
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %34
  store i32 32, i32* %eqsize, align 4
  br label %126

; <label>:38                                      ; preds = %34, %31
  %39 = load i32* %acsize, align 4
  %40 = icmp ugt i32 %39, 32
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %38
  %42 = load i32* %acsize, align 4
  %43 = icmp ule i32 %42, 64
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %41
  store i32 64, i32* %eqsize, align 4
  br label %125

; <label>:45                                      ; preds = %41, %38
  %46 = load i32* %acsize, align 4
  %47 = icmp ugt i32 %46, 64
  br i1 %47, label %48, label %52

; <label>:48                                      ; preds = %45
  %49 = load i32* %acsize, align 4
  %50 = icmp ule i32 %49, 128
  br i1 %50, label %51, label %52

; <label>:51                                      ; preds = %48
  store i32 128, i32* %eqsize, align 4
  br label %124

; <label>:52                                      ; preds = %48, %45
  %53 = load i32* %acsize, align 4
  %54 = icmp ugt i32 %53, 128
  br i1 %54, label %55, label %59

; <label>:55                                      ; preds = %52
  %56 = load i32* %acsize, align 4
  %57 = icmp ule i32 %56, 256
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %55
  store i32 256, i32* %eqsize, align 4
  br label %123

; <label>:59                                      ; preds = %55, %52
  %60 = load i32* %acsize, align 4
  %61 = icmp ugt i32 %60, 256
  br i1 %61, label %62, label %66

; <label>:62                                      ; preds = %59
  %63 = load i32* %acsize, align 4
  %64 = icmp ule i32 %63, 512
  br i1 %64, label %65, label %66

; <label>:65                                      ; preds = %62
  store i32 512, i32* %eqsize, align 4
  br label %122

; <label>:66                                      ; preds = %62, %59
  %67 = load i32* %acsize, align 4
  %68 = icmp ugt i32 %67, 512
  br i1 %68, label %69, label %73

; <label>:69                                      ; preds = %66
  %70 = load i32* %acsize, align 4
  %71 = icmp ule i32 %70, 1024
  br i1 %71, label %72, label %73

; <label>:72                                      ; preds = %69
  store i32 1024, i32* %eqsize, align 4
  br label %121

; <label>:73                                      ; preds = %69, %66
  %74 = load i32* %acsize, align 4
  %75 = icmp ugt i32 %74, 1024
  br i1 %75, label %76, label %80

; <label>:76                                      ; preds = %73
  %77 = load i32* %acsize, align 4
  %78 = icmp ule i32 %77, 2048
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %76
  store i32 2048, i32* %eqsize, align 4
  br label %120

; <label>:80                                      ; preds = %76, %73
  %81 = load i32* %acsize, align 4
  %82 = icmp ugt i32 %81, 2048
  br i1 %82, label %83, label %87

; <label>:83                                      ; preds = %80
  %84 = load i32* %acsize, align 4
  %85 = icmp ule i32 %84, 4096
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %83
  store i32 4096, i32* %eqsize, align 4
  br label %119

; <label>:87                                      ; preds = %83, %80
  %88 = load i32* %acsize, align 4
  %89 = icmp ugt i32 %88, 4096
  br i1 %89, label %90, label %94

; <label>:90                                      ; preds = %87
  %91 = load i32* %acsize, align 4
  %92 = icmp ule i32 %91, 8192
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %90
  store i32 8192, i32* %eqsize, align 4
  br label %118

; <label>:94                                      ; preds = %90, %87
  %95 = load i32* %acsize, align 4
  %96 = icmp ugt i32 %95, 8192
  br i1 %96, label %97, label %101

; <label>:97                                      ; preds = %94
  %98 = load i32* %acsize, align 4
  %99 = icmp ule i32 %98, 16384
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %97
  store i32 16384, i32* %eqsize, align 4
  br label %117

; <label>:101                                     ; preds = %97, %94
  %102 = load i32* %acsize, align 4
  %103 = icmp ugt i32 %102, 16384
  br i1 %103, label %104, label %108

; <label>:104                                     ; preds = %101
  %105 = load i32* %acsize, align 4
  %106 = icmp ule i32 %105, 32768
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %104
  store i32 32768, i32* %eqsize, align 4
  br label %116

; <label>:108                                     ; preds = %104, %101
  %109 = load i32* %acsize, align 4
  %110 = icmp ugt i32 %109, 32768
  br i1 %110, label %111, label %115

; <label>:111                                     ; preds = %108
  %112 = load i32* %acsize, align 4
  %113 = icmp ule i32 %112, 65536
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %111
  store i32 65536, i32* %eqsize, align 4
  br label %115

; <label>:115                                     ; preds = %114, %111, %108
  br label %116

; <label>:116                                     ; preds = %115, %107
  br label %117

; <label>:117                                     ; preds = %116, %100
  br label %118

; <label>:118                                     ; preds = %117, %93
  br label %119

; <label>:119                                     ; preds = %118, %86
  br label %120

; <label>:120                                     ; preds = %119, %79
  br label %121

; <label>:121                                     ; preds = %120, %72
  br label %122

; <label>:122                                     ; preds = %121, %65
  br label %123

; <label>:123                                     ; preds = %122, %58
  br label %124

; <label>:124                                     ; preds = %123, %51
  br label %125

; <label>:125                                     ; preds = %124, %44
  br label %126

; <label>:126                                     ; preds = %125, %37
  br label %127

; <label>:127                                     ; preds = %126, %30
  br label %128

; <label>:128                                     ; preds = %127, %23
  br label %129

; <label>:129                                     ; preds = %128, %16
  br label %130

; <label>:130                                     ; preds = %129, %9
  br label %131

; <label>:131                                     ; preds = %130, %5
  %132 = load i32* %eqsize, align 4
  %133 = zext i32 %132 to i64
  %134 = mul i64 1, %133
  %135 = call i8* @__CPROVER_malloc(i64 %134)
  %136 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %135, i8** %136, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  %eqsize = alloca i32, align 4
  %acsize = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  store i32 50601, i32* %acsize, align 4
  %3 = load i32* %acsize, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 1, i32* %eqsize, align 4
  br label %131

; <label>:6                                       ; preds = %0
  %7 = load i32* %acsize, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  store i32 2, i32* %eqsize, align 4
  br label %130

; <label>:10                                      ; preds = %6
  %11 = load i32* %acsize, align 4
  %12 = icmp ugt i32 %11, 2
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %10
  %14 = load i32* %acsize, align 4
  %15 = icmp ule i32 %14, 4
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %13
  store i32 4, i32* %eqsize, align 4
  br label %129

; <label>:17                                      ; preds = %13, %10
  %18 = load i32* %acsize, align 4
  %19 = icmp ugt i32 %18, 4
  br i1 %19, label %20, label %24

; <label>:20                                      ; preds = %17
  %21 = load i32* %acsize, align 4
  %22 = icmp ule i32 %21, 8
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %20
  store i32 8, i32* %eqsize, align 4
  br label %128

; <label>:24                                      ; preds = %20, %17
  %25 = load i32* %acsize, align 4
  %26 = icmp ugt i32 %25, 8
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %24
  %28 = load i32* %acsize, align 4
  %29 = icmp ule i32 %28, 16
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %27
  store i32 16, i32* %eqsize, align 4
  br label %127

; <label>:31                                      ; preds = %27, %24
  %32 = load i32* %acsize, align 4
  %33 = icmp ugt i32 %32, 16
  br i1 %33, label %34, label %38

; <label>:34                                      ; preds = %31
  %35 = load i32* %acsize, align 4
  %36 = icmp ule i32 %35, 32
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %34
  store i32 32, i32* %eqsize, align 4
  br label %126

; <label>:38                                      ; preds = %34, %31
  %39 = load i32* %acsize, align 4
  %40 = icmp ugt i32 %39, 32
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %38
  %42 = load i32* %acsize, align 4
  %43 = icmp ule i32 %42, 64
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %41
  store i32 64, i32* %eqsize, align 4
  br label %125

; <label>:45                                      ; preds = %41, %38
  %46 = load i32* %acsize, align 4
  %47 = icmp ugt i32 %46, 64
  br i1 %47, label %48, label %52

; <label>:48                                      ; preds = %45
  %49 = load i32* %acsize, align 4
  %50 = icmp ule i32 %49, 128
  br i1 %50, label %51, label %52

; <label>:51                                      ; preds = %48
  store i32 128, i32* %eqsize, align 4
  br label %124

; <label>:52                                      ; preds = %48, %45
  %53 = load i32* %acsize, align 4
  %54 = icmp ugt i32 %53, 128
  br i1 %54, label %55, label %59

; <label>:55                                      ; preds = %52
  %56 = load i32* %acsize, align 4
  %57 = icmp ule i32 %56, 256
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %55
  store i32 256, i32* %eqsize, align 4
  br label %123

; <label>:59                                      ; preds = %55, %52
  %60 = load i32* %acsize, align 4
  %61 = icmp ugt i32 %60, 256
  br i1 %61, label %62, label %66

; <label>:62                                      ; preds = %59
  %63 = load i32* %acsize, align 4
  %64 = icmp ule i32 %63, 512
  br i1 %64, label %65, label %66

; <label>:65                                      ; preds = %62
  store i32 512, i32* %eqsize, align 4
  br label %122

; <label>:66                                      ; preds = %62, %59
  %67 = load i32* %acsize, align 4
  %68 = icmp ugt i32 %67, 512
  br i1 %68, label %69, label %73

; <label>:69                                      ; preds = %66
  %70 = load i32* %acsize, align 4
  %71 = icmp ule i32 %70, 1024
  br i1 %71, label %72, label %73

; <label>:72                                      ; preds = %69
  store i32 1024, i32* %eqsize, align 4
  br label %121

; <label>:73                                      ; preds = %69, %66
  %74 = load i32* %acsize, align 4
  %75 = icmp ugt i32 %74, 1024
  br i1 %75, label %76, label %80

; <label>:76                                      ; preds = %73
  %77 = load i32* %acsize, align 4
  %78 = icmp ule i32 %77, 2048
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %76
  store i32 2048, i32* %eqsize, align 4
  br label %120

; <label>:80                                      ; preds = %76, %73
  %81 = load i32* %acsize, align 4
  %82 = icmp ugt i32 %81, 2048
  br i1 %82, label %83, label %87

; <label>:83                                      ; preds = %80
  %84 = load i32* %acsize, align 4
  %85 = icmp ule i32 %84, 4096
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %83
  store i32 4096, i32* %eqsize, align 4
  br label %119

; <label>:87                                      ; preds = %83, %80
  %88 = load i32* %acsize, align 4
  %89 = icmp ugt i32 %88, 4096
  br i1 %89, label %90, label %94

; <label>:90                                      ; preds = %87
  %91 = load i32* %acsize, align 4
  %92 = icmp ule i32 %91, 8192
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %90
  store i32 8192, i32* %eqsize, align 4
  br label %118

; <label>:94                                      ; preds = %90, %87
  %95 = load i32* %acsize, align 4
  %96 = icmp ugt i32 %95, 8192
  br i1 %96, label %97, label %101

; <label>:97                                      ; preds = %94
  %98 = load i32* %acsize, align 4
  %99 = icmp ule i32 %98, 16384
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %97
  store i32 16384, i32* %eqsize, align 4
  br label %117

; <label>:101                                     ; preds = %97, %94
  %102 = load i32* %acsize, align 4
  %103 = icmp ugt i32 %102, 16384
  br i1 %103, label %104, label %108

; <label>:104                                     ; preds = %101
  %105 = load i32* %acsize, align 4
  %106 = icmp ule i32 %105, 32768
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %104
  store i32 32768, i32* %eqsize, align 4
  br label %116

; <label>:108                                     ; preds = %104, %101
  %109 = load i32* %acsize, align 4
  %110 = icmp ugt i32 %109, 32768
  br i1 %110, label %111, label %115

; <label>:111                                     ; preds = %108
  %112 = load i32* %acsize, align 4
  %113 = icmp ule i32 %112, 65536
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %111
  store i32 65536, i32* %eqsize, align 4
  br label %115

; <label>:115                                     ; preds = %114, %111, %108
  br label %116

; <label>:116                                     ; preds = %115, %107
  br label %117

; <label>:117                                     ; preds = %116, %100
  br label %118

; <label>:118                                     ; preds = %117, %93
  br label %119

; <label>:119                                     ; preds = %118, %86
  br label %120

; <label>:120                                     ; preds = %119, %79
  br label %121

; <label>:121                                     ; preds = %120, %72
  br label %122

; <label>:122                                     ; preds = %121, %65
  br label %123

; <label>:123                                     ; preds = %122, %58
  br label %124

; <label>:124                                     ; preds = %123, %51
  br label %125

; <label>:125                                     ; preds = %124, %44
  br label %126

; <label>:126                                     ; preds = %125, %37
  br label %127

; <label>:127                                     ; preds = %126, %30
  br label %128

; <label>:128                                     ; preds = %127, %23
  br label %129

; <label>:129                                     ; preds = %128, %16
  br label %130

; <label>:130                                     ; preds = %129, %9
  br label %131

; <label>:131                                     ; preds = %130, %5
  %132 = load i32* %eqsize, align 4
  %133 = zext i32 %132 to i64
  %134 = mul i64 4, %133
  %135 = call i8* @__CPROVER_malloc(i64 %134)
  %136 = bitcast i8* %135 to float*
  %137 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store float* %136, float** %137, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 512)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj512EEC2Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  %3 = call i8* @__CPROVER_malloc(i64 1024)
  %4 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 512)
  %6 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN11model_trainD2Ev(%class.model_train* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  %4 = load %class.model_train** %1
  %5 = getelementptr inbounds %class.model_train* %4, i32 0, i32 33
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %5)
          to label %6 unwind label %20

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %class.model_train* %4, i32 0, i32 32
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %7)
          to label %8 unwind label %24

; <label>:8                                       ; preds = %6
  %9 = getelementptr inbounds %class.model_train* %4, i32 0, i32 19
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %9)
          to label %10 unwind label %28

; <label>:10                                      ; preds = %8
  %11 = getelementptr inbounds %class.model_train* %4, i32 0, i32 17
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %11)
          to label %12 unwind label %34

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %class.model_train* %4, i32 0, i32 16
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %13)
          to label %14 unwind label %40

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %class.model_train* %4, i32 0, i32 4
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %15)
          to label %16 unwind label %46

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds %class.model_train* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %17)
          to label %18 unwind label %52

; <label>:18                                      ; preds = %16
  %19 = getelementptr inbounds %class.model_train* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %19)
  ret void

; <label>:20                                      ; preds = %0
  %21 = call i8* @llvm.eh.exception() nounwind
  store i8* %21, i8** %2
  %22 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %21, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %23 = getelementptr inbounds %class.model_train* %4, i32 0, i32 32
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %23)
          to label %27 unwind label %63

; <label>:24                                      ; preds = %6
  %25 = call i8* @llvm.eh.exception() nounwind
  store i8* %25, i8** %2
  %26 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %25, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %31

; <label>:27                                      ; preds = %20
  br label %31

; <label>:28                                      ; preds = %8
  %29 = call i8* @llvm.eh.exception() nounwind
  store i8* %29, i8** %2
  %30 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %29, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %37

; <label>:31                                      ; preds = %24, %27
  %32 = getelementptr inbounds %class.model_train* %4, i32 0, i32 19
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %32)
          to label %33 unwind label %63

; <label>:33                                      ; preds = %31
  br label %37

; <label>:34                                      ; preds = %10
  %35 = call i8* @llvm.eh.exception() nounwind
  store i8* %35, i8** %2
  %36 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %35, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %43

; <label>:37                                      ; preds = %28, %33
  %38 = getelementptr inbounds %class.model_train* %4, i32 0, i32 17
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %38)
          to label %39 unwind label %63

; <label>:39                                      ; preds = %37
  br label %43

; <label>:40                                      ; preds = %12
  %41 = call i8* @llvm.eh.exception() nounwind
  store i8* %41, i8** %2
  %42 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %41, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %49

; <label>:43                                      ; preds = %34, %39
  %44 = getelementptr inbounds %class.model_train* %4, i32 0, i32 16
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %44)
          to label %45 unwind label %63

; <label>:45                                      ; preds = %43
  br label %49

; <label>:46                                      ; preds = %14
  %47 = call i8* @llvm.eh.exception() nounwind
  store i8* %47, i8** %2
  %48 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %47, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %55

; <label>:49                                      ; preds = %40, %45
  %50 = getelementptr inbounds %class.model_train* %4, i32 0, i32 4
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %50)
          to label %51 unwind label %63

; <label>:51                                      ; preds = %49
  br label %55

; <label>:52                                      ; preds = %16
  %53 = call i8* @llvm.eh.exception() nounwind
  store i8* %53, i8** %2
  %54 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %53, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %58

; <label>:55                                      ; preds = %46, %51
  %56 = getelementptr inbounds %class.model_train* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %56)
          to label %57 unwind label %63

; <label>:57                                      ; preds = %55
  br label %58

; <label>:58                                      ; preds = %52, %57
  %59 = getelementptr inbounds %class.model_train* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %59)
          to label %60 unwind label %63

; <label>:60                                      ; preds = %58
  br label %61

; <label>:61                                      ; preds = %60
  %62 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %62) noreturn
  unreachable

; <label>:63                                      ; preds = %58, %55, %49, %43, %37, %31, %20
  %64 = call i8* @llvm.eh.exception() nounwind
  %65 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %64, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN11model_trainC2Ev(%class.model_train* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_train*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_train* %this, %class.model_train** %1, align 8
  %4 = load %class.model_train** %1
  %5 = getelementptr inbounds %class.model_train* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %5, i64 0)
  %6 = getelementptr inbounds %class.model_train* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %6, i64 0)
          to label %7 unwind label %38

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.model_train* %4, i32 0, i32 4
  invoke void @_ZN8type_memIbLj128EEC1El(%class.SysCArray1D* %8, i64 0)
          to label %9 unwind label %41

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %class.model_train* %4, i32 0, i32 16
  invoke void @_ZN8type_memIbLj65536EEC1El(%class.SysCArray1D* %10, i64 0)
          to label %11 unwind label %44

; <label>:11                                      ; preds = %9
  %12 = getelementptr inbounds %class.model_train* %4, i32 0, i32 17
  invoke void @_ZN8type_memIjLj8EEC1El(%0* %12, i64 0)
          to label %13 unwind label %47

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.model_train* %4, i32 0, i32 19
  invoke void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %14, i64 0)
          to label %15 unwind label %50

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.model_train* %4, i32 0, i32 32
  invoke void @_ZN8type_memItLj8EEC1El(%1* %16, i64 0)
          to label %17 unwind label %53

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.model_train* %4, i32 0, i32 33
  invoke void @_ZN8type_memIbLj512EEC1El(%class.SysCArray1D* %18, i64 0)
          to label %19 unwind label %56

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %class.model_train* %4, i32 0, i32 38
  store i64 1, i64* %20, align 8
  %21 = getelementptr inbounds %class.model_train* %4, i32 0, i32 39
  store i64 65535, i64* %21, align 8
  %22 = getelementptr inbounds %class.model_train* %4, i32 0, i32 40
  store i64 7, i64* %22, align 8
  %23 = getelementptr inbounds %class.model_train* %4, i32 0, i32 41
  store i64 4294967295, i64* %23, align 8
  %24 = getelementptr inbounds %class.model_train* %4, i32 0, i32 42
  store i64 undef, i64* %24, align 8
  %25 = getelementptr inbounds %class.model_train* %4, i32 0, i32 43
  store i64 127, i64* %25, align 8
  %26 = getelementptr inbounds %class.model_train* %4, i32 0, i32 44
  store i64 255, i64* %26, align 8
  %27 = getelementptr inbounds %class.model_train* %4, i32 0, i32 45
  store i64 511, i64* %27, align 8
  %28 = getelementptr inbounds %class.model_train* %4, i32 0, i32 46
  store i64 32768, i64* %28, align 8
  %29 = getelementptr inbounds %class.model_train* %4, i32 0, i32 47
  store i64 64, i64* %29, align 8
  %30 = getelementptr inbounds %class.model_train* %4, i32 0, i32 39
  %31 = load i64* %30, align 8
  %32 = xor i64 %31, -1
  %33 = getelementptr inbounds %class.model_train* %4, i32 0, i32 48
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %class.model_train* %4, i32 0, i32 43
  %35 = load i64* %34, align 8
  %36 = xor i64 %35, -1
  %37 = getelementptr inbounds %class.model_train* %4, i32 0, i32 49
  store i64 %36, i64* %37, align 8
  ret void

; <label>:38                                      ; preds = %0
  %39 = call i8* @llvm.eh.exception() nounwind
  store i8* %39, i8** %2
  %40 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %39, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %76

; <label>:41                                      ; preds = %7
  %42 = call i8* @llvm.eh.exception() nounwind
  store i8* %42, i8** %2
  %43 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %42, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %73

; <label>:44                                      ; preds = %9
  %45 = call i8* @llvm.eh.exception() nounwind
  store i8* %45, i8** %2
  %46 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %45, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %70

; <label>:47                                      ; preds = %11
  %48 = call i8* @llvm.eh.exception() nounwind
  store i8* %48, i8** %2
  %49 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %48, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %67

; <label>:50                                      ; preds = %13
  %51 = call i8* @llvm.eh.exception() nounwind
  store i8* %51, i8** %2
  %52 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %51, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %64

; <label>:53                                      ; preds = %15
  %54 = call i8* @llvm.eh.exception() nounwind
  store i8* %54, i8** %2
  %55 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %54, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %61

; <label>:56                                      ; preds = %17
  %57 = call i8* @llvm.eh.exception() nounwind
  store i8* %57, i8** %2
  %58 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %57, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %59 = getelementptr inbounds %class.model_train* %4, i32 0, i32 32
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %59)
          to label %60 unwind label %81

; <label>:60                                      ; preds = %56
  br label %61

; <label>:61                                      ; preds = %60, %53
  %62 = getelementptr inbounds %class.model_train* %4, i32 0, i32 19
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %62)
          to label %63 unwind label %81

; <label>:63                                      ; preds = %61
  br label %64

; <label>:64                                      ; preds = %63, %50
  %65 = getelementptr inbounds %class.model_train* %4, i32 0, i32 17
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %65)
          to label %66 unwind label %81

; <label>:66                                      ; preds = %64
  br label %67

; <label>:67                                      ; preds = %66, %47
  %68 = getelementptr inbounds %class.model_train* %4, i32 0, i32 16
  invoke void @_ZN8type_memIbLj65536EED1Ev(%class.SysCArray1D* %68)
          to label %69 unwind label %81

; <label>:69                                      ; preds = %67
  br label %70

; <label>:70                                      ; preds = %69, %44
  %71 = getelementptr inbounds %class.model_train* %4, i32 0, i32 4
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %71)
          to label %72 unwind label %81

; <label>:72                                      ; preds = %70
  br label %73

; <label>:73                                      ; preds = %72, %41
  %74 = getelementptr inbounds %class.model_train* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %74)
          to label %75 unwind label %81

; <label>:75                                      ; preds = %73
  br label %76

; <label>:76                                      ; preds = %75, %38
  %77 = getelementptr inbounds %class.model_train* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %77)
          to label %78 unwind label %81

; <label>:78                                      ; preds = %76
  br label %79

; <label>:79                                      ; preds = %78
  %80 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %80) noreturn
  unreachable

; <label>:81                                      ; preds = %76, %73, %70, %67, %64, %61, %56
  %82 = call i8* @llvm.eh.exception() nounwind
  %83 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %82, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIbLj128EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj65536EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIbLj65536EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EEC1El(%0* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %0** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIjLj8EEC2El(%0* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EEC1El(%1* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %1** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memItLj8EEC2El(%1* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIbLj512EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 512)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EEC2El(%1* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %1** %1
  %4 = call i8* @__CPROVER_malloc(i64 16)
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds %1* %3, i32 0, i32 0
  store i16* %5, i16** %6, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 128)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EEC2El(%0* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %0** %1
  %4 = call i8* @__CPROVER_malloc(i64 32)
  %5 = bitcast i8* %4 to i32*
  %6 = getelementptr inbounds %0* %3, i32 0, i32 0
  store i32* %5, i32** %6, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj65536EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 65536)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 128)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 65536)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 512)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define internal void @_GLOBAL__I_a() {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init32()
  ret void
}
