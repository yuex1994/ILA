; ModuleID = 'vWrapper.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i32* }
%1 = type { i16* }
%2 = type { i32, void ()* }
%class.SysCArray1D = type { i8* }
%class.SysCArray2D = type { float* }
%class.SysCArray2Dst = type { i8*, i8* }
%class.model_predict = type { i64, %class.SysCArray1D, i64, i64, %class.SysCArray1D, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %0, i64, i64, i64, %class.SysCArray1D, i64, i64, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, %1, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%class.sc_signal_bool = type { i8 }
%class.sc_signal_int32 = type { i32 }
%class.sc_signal_u16 = type { i16 }
%class.sc_signal_u32 = type { i32 }
%"class.std::iocout" = type { i8 }
%class.type_mem = type { i8* }
%struct.rbm = type { %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.SysCArray2Dst, %class.SysCArray1D, %class.SysCArray1D, %class.SysCArray2D, %class.SysCArray1D, %class.SysCArray1D, %class.SysCArray2D, %class.SysCArray1D, %class.SysCArray2Dst, [624 x i32], %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool }

@divide_p1 = global i16 0, align 2
@divide_p2 = global i16 0, align 2
@divide_r = global i16 0, align 2
@rand_r = global i16 0, align 2
@sigmoid_p1 = global i16 0, align 2
@sigmoid_r = global i16 0, align 2
@to_int_exp_p1 = global i16 0, align 2
@to_int_exp_r = global i16 0, align 2
@round_p1 = global i16 0, align 2
@round_r = global i16 0, align 2
@t = global i8 0, align 1
@.str = private unnamed_addr constant [6 x i8] c"test3\00"
@GM = global %class.model_predict zeroinitializer, align 8
@__dso_handle = external global i8*
@_ZSt4cout = global %class.sc_signal_bool zeroinitializer, align 1
@_ZSt4endl = global i32 0, align 4
@cycleCnt = external global i32
@conf_done_inp = global i8 0, align 1
@conf_num_hidden_inp = global i32 0, align 4
@conf_num_visible_inp = global i32 0, align 4
@conf_num_users_inp = global i32 0, align 4
@conf_num_loops_inp = global i32 0, align 4
@conf_num_testusers_inp = global i32 0, align 4
@conf_num_movies_inp = global i32 0, align 4
@rst_inp = global i8 0, align 1
@rd_grant_inp = global i8 0, align 1
@data_in_inp = global i32 0, align 4
@wr_grant_inp = global i8 0, align 1
@per_v_pc = global i32 0, align 4
@predict_upc = global i32 0, align 4
@upc = global i32 0, align 4
@.str1 = private unnamed_addr constant [16 x i8] c"init_done_match\00"
@.str2 = private unnamed_addr constant [11 x i8] c"done_match\00"
@.str3 = private unnamed_addr constant [17 x i8] c"num_hidden_match\00"
@.str4 = private unnamed_addr constant [18 x i8] c"num_visible_match\00"
@.str5 = private unnamed_addr constant [16 x i8] c"num_users_match\00"
@.str6 = private unnamed_addr constant [16 x i8] c"num_loops_match\00"
@.str7 = private unnamed_addr constant [20 x i8] c"num_testusers_match\00"
@.str8 = private unnamed_addr constant [17 x i8] c"num_movies_match\00"
@.str9 = private unnamed_addr constant [15 x i8] c"rd_index_match\00"
@.str10 = private unnamed_addr constant [16 x i8] c"rd_length_match\00"
@.str11 = private unnamed_addr constant [17 x i8] c"rd_request_match\00"
@.str12 = private unnamed_addr constant [17 x i8] c"wr_request_match\00"
@.str13 = private unnamed_addr constant [15 x i8] c"wr_index_match\00"
@.str14 = private unnamed_addr constant [16 x i8] c"wr_length_match\00"
@.str15 = private unnamed_addr constant [15 x i8] c"data_out_match\00"
@.str16 = private unnamed_addr constant [10 x i8] c"upc_match\00"
@.str17 = private unnamed_addr constant [25 x i8] c"predict_input_done_match\00"
@.str18 = private unnamed_addr constant [18 x i8] c"predict_sum_match\00"
@.str19 = private unnamed_addr constant [18 x i8] c"predict_max_match\00"
@.str20 = private unnamed_addr constant [16 x i8] c"sumOfpow2_match\00"
@.str21 = private unnamed_addr constant [15 x i8] c"per_v_pc_match\00"
@.str22 = private unnamed_addr constant [13 x i8] c"jstate_match\00"
@.str23 = private unnamed_addr constant [18 x i8] c"predict_upc_match\00"
@.str24 = private unnamed_addr constant [20 x i8] c"predict_v_cnt_match\00"
@.str25 = private unnamed_addr constant [20 x i8] c"predict_h_cnt_match\00"
@.str26 = private unnamed_addr constant [11 x i8] c"data_match\00"
@.str27 = private unnamed_addr constant [21 x i8] c"predict_result_match\00"
@.str28 = private unnamed_addr constant [18 x i8] c"hidden_unit_match\00"
@.str29 = private unnamed_addr constant [8 x i8] c"ind-inv\00"
@IMPL = global %struct.rbm zeroinitializer, align 8
@.str31 = private unnamed_addr constant [4 x i8] c"clk\00"
@.str32 = private unnamed_addr constant [4 x i8] c"rst\00"
@.str33 = private unnamed_addr constant [9 x i8] c"rd_index\00"
@.str34 = private unnamed_addr constant [10 x i8] c"rd_length\00"
@.str35 = private unnamed_addr constant [11 x i8] c"rd_request\00"
@.str36 = private unnamed_addr constant [9 x i8] c"rd_grant\00"
@.str37 = private unnamed_addr constant [8 x i8] c"data_in\00"
@.str38 = private unnamed_addr constant [9 x i8] c"wr_index\00"
@.str39 = private unnamed_addr constant [10 x i8] c"wr_length\00"
@.str40 = private unnamed_addr constant [11 x i8] c"wr_request\00"
@.str41 = private unnamed_addr constant [9 x i8] c"wr_grant\00"
@.str42 = private unnamed_addr constant [9 x i8] c"data_out\00"
@.str43 = private unnamed_addr constant [5 x i8] c"done\00"
@.str44 = private unnamed_addr constant [10 x i8] c"cond_done\00"
@.str45 = private unnamed_addr constant [16 x i8] c"conf_num_hidden\00"
@.str46 = private unnamed_addr constant [17 x i8] c"conf_num_visible\00"
@.str47 = private unnamed_addr constant [15 x i8] c"conf_num_users\00"
@.str48 = private unnamed_addr constant [15 x i8] c"conf_num_loops\00"
@.str49 = private unnamed_addr constant [19 x i8] c"conf_num_testusers\00"
@.str50 = private unnamed_addr constant [16 x i8] c"conf_num_movies\00"
@llvm.global_ctors = appending global [1 x %2] [%2 { i32 65535, void ()* @_GLOBAL__I_a }]

define zeroext i16 @_Z6dividell(i64 %cppVar_480, i64 %cppVar_481) {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %cppVar_480, i64* %1, align 8
  store i64 %cppVar_481, i64* %2, align 8
  %3 = load i64* %1, align 8
  %4 = load i16* @divide_p1, align 2
  %5 = zext i16 %4 to i64
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %7, label %15

; <label>:7                                       ; preds = %0
  %8 = load i64* %2, align 8
  %9 = load i16* @divide_p2, align 2
  %10 = zext i16 %9 to i64
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %7
  %13 = load i16* @divide_r, align 2
  %14 = zext i16 %13 to i64
  store i64 %14, i64* %ret, align 8
  br label %22

; <label>:15                                      ; preds = %7, %0
  %16 = load i8* @t, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i32
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %15
  call void @__CPROVER_assert(i1 zeroext false, i8* getelementptr inbounds ([6 x i8]* @.str, i32 0, i32 0))
  br label %21

; <label>:21                                      ; preds = %20, %15
  br label %22

; <label>:22                                      ; preds = %21, %12
  store i8 1, i8* @t, align 1
  %23 = load i64* %1, align 8
  %24 = trunc i64 %23 to i16
  store i16 %24, i16* @divide_p1, align 2
  %25 = load i64* %2, align 8
  %26 = trunc i64 %25 to i16
  store i16 %26, i16* @divide_p2, align 2
  %27 = load i64* %ret, align 8
  %28 = trunc i64 %27 to i16
  store i16 %28, i16* @divide_r, align 2
  %29 = load i64* %ret, align 8
  %30 = trunc i64 %29 to i16
  ret i16 %30
}

declare void @__CPROVER_assert(i1 zeroext, i8*)

define zeroext i16 @_Z4randv() nounwind {
  %1 = load i16* @rand_r, align 2
  ret i16 %1
}

define zeroext i16 @_Z7sigmoidl(i64 %cppVar_486) nounwind {
  %1 = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %cppVar_486, i64* %1, align 8
  %2 = load i16* @sigmoid_p1, align 2
  %3 = zext i16 %2 to i64
  %4 = load i64* %1, align 8
  %5 = icmp eq i64 %3, %4
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load i16* @sigmoid_r, align 2
  %8 = zext i16 %7 to i64
  store i64 %8, i64* %ret, align 8
  br label %9

; <label>:9                                       ; preds = %6, %0
  %10 = load i64* %ret, align 8
  %11 = trunc i64 %10 to i16
  store i16 %11, i16* @sigmoid_r, align 2
  %12 = load i64* %1, align 8
  %13 = trunc i64 %12 to i16
  store i16 %13, i16* @sigmoid_p1, align 2
  %14 = load i64* %ret, align 8
  %15 = trunc i64 %14 to i16
  ret i16 %15
}

define zeroext i16 @_Z10to_int_expl(i64 %cppVar_489) nounwind {
  %1 = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %cppVar_489, i64* %1, align 8
  %2 = load i16* @to_int_exp_p1, align 2
  %3 = zext i16 %2 to i64
  %4 = load i64* %1, align 8
  %5 = icmp eq i64 %3, %4
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load i16* @to_int_exp_r, align 2
  %8 = zext i16 %7 to i64
  store i64 %8, i64* %ret, align 8
  br label %9

; <label>:9                                       ; preds = %6, %0
  %10 = load i64* %ret, align 8
  %11 = trunc i64 %10 to i16
  store i16 %11, i16* @to_int_exp_r, align 2
  %12 = load i64* %1, align 8
  %13 = trunc i64 %12 to i16
  store i16 %13, i16* @to_int_exp_p1, align 2
  %14 = load i64* %ret, align 8
  %15 = trunc i64 %14 to i16
  ret i16 %15
}

define zeroext i16 @_Z5roundl(i64 %cppVar_1257) nounwind {
  %1 = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %cppVar_1257, i64* %1, align 8
  %2 = load i64* %1, align 8
  %3 = load i16* @round_p1, align 2
  %4 = zext i16 %3 to i64
  %5 = icmp eq i64 %2, %4
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load i16* @round_r, align 2
  %8 = zext i16 %7 to i64
  store i64 %8, i64* %ret, align 8
  br label %9

; <label>:9                                       ; preds = %6, %0
  %10 = load i64* %ret, align 8
  %11 = trunc i64 %10 to i16
  store i16 %11, i16* @round_r, align 2
  %12 = load i64* %1, align 8
  %13 = trunc i64 %12 to i16
  store i16 %13, i16* @round_p1, align 2
  %14 = load i64* %ret, align 8
  %15 = trunc i64 %14 to i16
  ret i16 %15
}

define zeroext i1 @_ZN13model_predict9assumps_0Elllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_2166 = alloca i64, align 8
  %cppVar_2167 = alloca i8, align 1
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_2167, align 1
  %18 = load i8* %cppVar_2167, align 1
  %19 = trunc i8 %18 to i1
  ret i1 %19
}

define i64 @_ZN13model_predict18cppUpdateFun_countElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1287 = alloca i64, align 8
  %cppVar_1265 = alloca i64, align 8
  %cppVar_1266 = alloca i8, align 1
  %cppVar_1269 = alloca i64, align 8
  %cppVar_1270 = alloca i8, align 1
  %cppVar_1289 = alloca i64, align 8
  %cppVar_1290 = alloca i8, align 1
  %cppVar_1297 = alloca i64, align 8
  %cppVar_1298 = alloca i8, align 1
  %cppVar_1267 = alloca i64, align 8
  %cppVar_1284 = alloca i64, align 8
  %cppVar_1285 = alloca i8, align 1
  %cppVar_1275 = alloca i64, align 8
  %cppVar_1276 = alloca i64, align 8
  %cppVar_1277 = alloca i8, align 1
  %cppVar_1278 = alloca i64, align 8
  %cppVar_1279 = alloca i64, align 8
  %cppVar_1280 = alloca i64, align 8
  %cppVar_1281 = alloca i8, align 1
  %cppVar_1282 = alloca i8, align 1
  %cppVar_1272 = alloca i64, align 8
  %cppVar_1273 = alloca i8, align 1
  %cppVar_1274 = alloca i8, align 1
  %cppVar_1283 = alloca i8, align 1
  %cppVar_1286 = alloca i8, align 1
  %cppVar_1271 = alloca i64, align 8
  %cppVar_1292 = alloca i64, align 8
  %cppVar_1293 = alloca i8, align 1
  %cppVar_1294 = alloca i64, align 8
  %cppVar_1295 = alloca i64, align 8
  %cppVar_1291 = alloca i64, align 8
  %cppVar_1296 = alloca i64, align 8
  %cppVar_1288 = alloca i64, align 8
  %cppVar_1268 = alloca i64, align 8
  %cppVar_1264 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1266, align 1
  %18 = load i8* %cppVar_1266, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_1264, align 8
  br label %146

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_1270, align 1
  %26 = load i8* %cppVar_1270, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %99

; <label>:28                                      ; preds = %21
  %29 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %30 = load i64* %29, align 8
  %31 = icmp eq i64 %30, 4
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %cppVar_1273, align 1
  %33 = load i8* %cppVar_1270, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %28
  %36 = load i8* %cppVar_1273, align 1
  %37 = trunc i8 %36 to i1
  br label %38

; <label>:38                                      ; preds = %35, %28
  %39 = phi i1 [ false, %28 ], [ %37, %35 ]
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %cppVar_1274, align 1
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = add nsw i64 %42, 5
  store i64 %43, i64* %cppVar_1276, align 8
  %44 = load i64* %cppVar_1276, align 8
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %46 = load i64* %45, align 8
  %47 = and i64 %44, %46
  store i64 %47, i64* %cppVar_1276, align 8
  %48 = load i64* %cppVar_1276, align 8
  %49 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_1277, align 1
  %53 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %54 = load i64* %53, align 8
  %55 = add nsw i64 %54, 5
  store i64 %55, i64* %cppVar_1279, align 8
  %56 = load i64* %cppVar_1279, align 8
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %58 = load i64* %57, align 8
  %59 = and i64 %56, %58
  store i64 %59, i64* %cppVar_1279, align 8
  %60 = load i64* %cppVar_1279, align 8
  %61 = icmp sge i64 %60, 500
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %cppVar_1281, align 1
  %63 = load i8* %cppVar_1277, align 1
  %64 = trunc i8 %63 to i1
  br i1 %64, label %68, label %65

; <label>:65                                      ; preds = %38
  %66 = load i8* %cppVar_1281, align 1
  %67 = trunc i8 %66 to i1
  br label %68

; <label>:68                                      ; preds = %65, %38
  %69 = phi i1 [ true, %38 ], [ %67, %65 ]
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_1282, align 1
  %71 = load i8* %cppVar_1274, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %76

; <label>:73                                      ; preds = %68
  %74 = load i8* %cppVar_1282, align 1
  %75 = trunc i8 %74 to i1
  br label %76

; <label>:76                                      ; preds = %73, %68
  %77 = phi i1 [ false, %68 ], [ %75, %73 ]
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %cppVar_1283, align 1
  %79 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %80 = load i64* %79, align 8
  %81 = icmp eq i64 %80, 4
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_1285, align 1
  %83 = load i8* %cppVar_1283, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %88

; <label>:85                                      ; preds = %76
  %86 = load i8* %cppVar_1285, align 1
  %87 = trunc i8 %86 to i1
  br label %88

; <label>:88                                      ; preds = %85, %76
  %89 = phi i1 [ false, %76 ], [ %87, %85 ]
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %cppVar_1286, align 1
  %91 = load i8* %cppVar_1286, align 1
  %92 = trunc i8 %91 to i1
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %88
  store i64 0, i64* %cppVar_1271, align 8
  br label %97

; <label>:94                                      ; preds = %88
  %95 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 0
  %96 = load i64* %95, align 8
  store i64 %96, i64* %cppVar_1271, align 8
  br label %97

; <label>:97                                      ; preds = %94, %93
  %98 = load i64* %cppVar_1271, align 8
  store i64 %98, i64* %cppVar_1268, align 8
  br label %144

; <label>:99                                      ; preds = %21
  %100 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %101 = load i64* %100, align 8
  %102 = icmp eq i64 %101, 3
  %103 = zext i1 %102 to i8
  store i8 %103, i8* %cppVar_1290, align 1
  %104 = load i8* %cppVar_1290, align 1
  %105 = trunc i8 %104 to i1
  br i1 %105, label %106, label %127

; <label>:106                                     ; preds = %99
  %107 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %108 = load i64* %107, align 8
  %109 = icmp eq i64 %108, 4
  %110 = zext i1 %109 to i8
  store i8 %110, i8* %cppVar_1293, align 1
  %111 = load i8* %cppVar_1293, align 1
  %112 = trunc i8 %111 to i1
  br i1 %112, label %113, label %122

; <label>:113                                     ; preds = %106
  %114 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 0
  %115 = load i64* %114, align 8
  %116 = add nsw i64 %115, 1
  store i64 %116, i64* %cppVar_1295, align 8
  %117 = load i64* %cppVar_1295, align 8
  %118 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 49
  %119 = load i64* %118, align 8
  %120 = and i64 %117, %119
  store i64 %120, i64* %cppVar_1295, align 8
  %121 = load i64* %cppVar_1295, align 8
  store i64 %121, i64* %cppVar_1291, align 8
  br label %125

; <label>:122                                     ; preds = %106
  %123 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 0
  %124 = load i64* %123, align 8
  store i64 %124, i64* %cppVar_1291, align 8
  br label %125

; <label>:125                                     ; preds = %122, %113
  %126 = load i64* %cppVar_1291, align 8
  store i64 %126, i64* %cppVar_1288, align 8
  br label %142

; <label>:127                                     ; preds = %99
  %128 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %129 = load i64* %128, align 8
  %130 = icmp eq i64 %129, 2
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %cppVar_1298, align 1
  %132 = load i8* %cppVar_1298, align 1
  %133 = trunc i8 %132 to i1
  br i1 %133, label %134, label %137

; <label>:134                                     ; preds = %127
  %135 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 0
  %136 = load i64* %135, align 8
  store i64 %136, i64* %cppVar_1296, align 8
  br label %140

; <label>:137                                     ; preds = %127
  %138 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 0
  %139 = load i64* %138, align 8
  store i64 %139, i64* %cppVar_1296, align 8
  br label %140

; <label>:140                                     ; preds = %137, %134
  %141 = load i64* %cppVar_1296, align 8
  store i64 %141, i64* %cppVar_1288, align 8
  br label %142

; <label>:142                                     ; preds = %140, %125
  %143 = load i64* %cppVar_1288, align 8
  store i64 %143, i64* %cppVar_1268, align 8
  br label %144

; <label>:144                                     ; preds = %142, %97
  %145 = load i64* %cppVar_1268, align 8
  store i64 %145, i64* %cppVar_1264, align 8
  br label %146

; <label>:146                                     ; preds = %144, %20
  %147 = load i64* %cppVar_1264, align 8
  ret i64 %147
}

define i64 @_ZN13model_predict17cppUpdateFun_doneElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1322 = alloca i64, align 8
  %cppVar_1321 = alloca i64, align 8
  %cppVar_1301 = alloca i64, align 8
  %cppVar_1302 = alloca i8, align 1
  %cppVar_1304 = alloca i64, align 8
  %cppVar_1305 = alloca i8, align 1
  %cppVar_1307 = alloca i64, align 8
  %cppVar_1308 = alloca i8, align 1
  %cppVar_1310 = alloca i64, align 8
  %cppVar_1311 = alloca i8, align 1
  %cppVar_1312 = alloca i64, align 8
  %cppVar_1313 = alloca i8, align 1
  %cppVar_1314 = alloca i8, align 1
  %cppVar_1315 = alloca i64, align 8
  %cppVar_1316 = alloca i64, align 8
  %cppVar_1317 = alloca i8, align 1
  %cppVar_1318 = alloca i8, align 1
  %cppVar_1319 = alloca i8, align 1
  %cppVar_1320 = alloca i8, align 1
  %cppVar_1309 = alloca i64, align 8
  %cppVar_1306 = alloca i64, align 8
  %cppVar_1303 = alloca i64, align 8
  %cppVar_1300 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1302, align 1
  %18 = load i8* %cppVar_1302, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 3
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1300, align 8
  br label %104

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1305, align 1
  %28 = load i8* %cppVar_1305, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 3
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1303, align 8
  br label %102

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1308, align 1
  %38 = load i8* %cppVar_1308, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %97

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %42 = load i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %cppVar_1311, align 1
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %46 = load i64* %45, align 8
  %47 = icmp eq i64 %46, 1
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %cppVar_1313, align 1
  %49 = load i8* %cppVar_1311, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %40
  %52 = load i8* %cppVar_1313, align 1
  %53 = trunc i8 %52 to i1
  br label %54

; <label>:54                                      ; preds = %51, %40
  %55 = phi i1 [ false, %40 ], [ %53, %51 ]
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_1314, align 1
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 14
  %58 = load i64* %57, align 8
  %59 = sub nsw i64 %58, 1
  store i64 %59, i64* %cppVar_1316, align 8
  %60 = load i64* %cppVar_1316, align 8
  %61 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %62 = load i64* %61, align 8
  %63 = and i64 %60, %62
  store i64 %63, i64* %cppVar_1316, align 8
  %64 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %65 = load i64* %64, align 8
  %66 = load i64* %cppVar_1316, align 8
  %67 = icmp eq i64 %65, %66
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %cppVar_1317, align 1
  %69 = load i8* %cppVar_1314, align 1
  %70 = trunc i8 %69 to i1
  br i1 %70, label %71, label %74

; <label>:71                                      ; preds = %54
  %72 = load i8* %cppVar_1317, align 1
  %73 = trunc i8 %72 to i1
  br label %74

; <label>:74                                      ; preds = %71, %54
  %75 = phi i1 [ false, %54 ], [ %73, %71 ]
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %cppVar_1318, align 1
  %77 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 10
  %78 = load i64* %77, align 8
  %79 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 12
  %80 = load i64* %79, align 8
  %81 = icmp eq i64 %78, %80
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_1319, align 1
  %83 = load i8* %cppVar_1318, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %88

; <label>:85                                      ; preds = %74
  %86 = load i8* %cppVar_1319, align 1
  %87 = trunc i8 %86 to i1
  br label %88

; <label>:88                                      ; preds = %85, %74
  %89 = phi i1 [ false, %74 ], [ %87, %85 ]
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %cppVar_1320, align 1
  %91 = load i8* %cppVar_1320, align 1
  %92 = trunc i8 %91 to i1
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %88
  store i64 1, i64* %cppVar_1309, align 8
  br label %95

; <label>:94                                      ; preds = %88
  store i64 0, i64* %cppVar_1309, align 8
  br label %95

; <label>:95                                      ; preds = %94, %93
  %96 = load i64* %cppVar_1309, align 8
  store i64 %96, i64* %cppVar_1306, align 8
  br label %100

; <label>:97                                      ; preds = %33
  %98 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 3
  %99 = load i64* %98, align 8
  store i64 %99, i64* %cppVar_1306, align 8
  br label %100

; <label>:100                                     ; preds = %97, %95
  %101 = load i64* %cppVar_1306, align 8
  store i64 %101, i64* %cppVar_1303, align 8
  br label %102

; <label>:102                                     ; preds = %100, %30
  %103 = load i64* %cppVar_1303, align 8
  store i64 %103, i64* %cppVar_1300, align 8
  br label %104

; <label>:104                                     ; preds = %102, %20
  %105 = load i64* %cppVar_1300, align 8
  ret i64 %105
}

define i64 @_ZN13model_predict24cppUpdateFun_expectationElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1325 = alloca i64, align 8
  %cppVar_1326 = alloca i8, align 1
  %cppVar_1328 = alloca i64, align 8
  %cppVar_1329 = alloca i8, align 1
  %cppVar_1337 = alloca i64, align 8
  %cppVar_1351 = alloca i64, align 8
  %cppVar_1352 = alloca i8, align 1
  %cppVar_1331 = alloca i64, align 8
  %cppVar_1332 = alloca i8, align 1
  %cppVar_1333 = alloca i8, align 1
  %cppVar_1338 = alloca i64, align 8
  %cppVar_1339 = alloca i64, align 8
  %cppVar_1340 = alloca i64, align 8
  %cppVar_1341 = alloca i64, align 8
  %cppVar_1342 = alloca i64, align 8
  %cppVar_1343 = alloca i64, align 8
  %cppVar_1335 = alloca i64, align 8
  %cppVar_1336 = alloca i8, align 1
  %cppVar_1334 = alloca i64, align 8
  %cppVar_1344 = alloca i64, align 8
  %cppVar_1345 = alloca i64, align 8
  %cppVar_1346 = alloca i64, align 8
  %cppVar_1347 = alloca i64, align 8
  %cppVar_1348 = alloca i64, align 8
  %cppVar_1349 = alloca i64, align 8
  %cppVar_1330 = alloca i64, align 8
  %cppVar_1350 = alloca i64, align 8
  %cppVar_1327 = alloca i64, align 8
  %cppVar_1324 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1326, align 1
  %18 = load i8* %cppVar_1326, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 5
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1324, align 8
  br label %145

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1329, align 1
  %28 = load i8* %cppVar_1329, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %128

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %32 = load i64* %31, align 8
  %33 = icmp eq i64 %32, 3
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %cppVar_1332, align 1
  %35 = load i8* %cppVar_1329, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %40

; <label>:37                                      ; preds = %30
  %38 = load i8* %cppVar_1332, align 1
  %39 = trunc i8 %38 to i1
  br label %40

; <label>:40                                      ; preds = %37, %30
  %41 = phi i1 [ false, %30 ], [ %39, %37 ]
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %cppVar_1333, align 1
  %43 = load i8* %cppVar_1333, align 1
  %44 = trunc i8 %43 to i1
  br i1 %44, label %45, label %123

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %47 = load i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %cppVar_1336, align 1
  %50 = load i8* %cppVar_1336, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %53

; <label>:52                                      ; preds = %45
  store i64 0, i64* %cppVar_1334, align 8
  br label %56

; <label>:53                                      ; preds = %45
  %54 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 5
  %55 = load i64* %54, align 8
  store i64 %55, i64* %cppVar_1334, align 8
  br label %56

; <label>:56                                      ; preds = %53, %52
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %58 = load i64* %57, align 8
  %59 = ashr i64 %58, 0
  %60 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 44
  %61 = load i64* %60, align 8
  %62 = and i64 %59, %61
  store i64 %62, i64* %cppVar_1338, align 8
  %63 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 18
  %64 = load i64* %cppVar_1338, align 8
  %65 = call i64 @_ZN8type_memIjLj8EE2rdEl(%0* %63, i64 %64)
  store i64 %65, i64* %cppVar_1339, align 8
  %66 = load i64* %cppVar_1339, align 8
  %67 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %68 = load i64* %67, align 8
  %69 = call zeroext i16 @_Z6dividell(i64 %66, i64 %68)
  %70 = zext i16 %69 to i64
  store i64 %70, i64* %cppVar_1340, align 8
  %71 = load i64* %cppVar_1340, align 8
  %72 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 47
  %73 = load i64* %72, align 8
  %74 = and i64 %71, %73
  store i64 %74, i64* %cppVar_1341, align 8
  %75 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %76 = load i64* %75, align 8
  %77 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %78 = load i64* %77, align 8
  %79 = and i64 %76, %78
  store i64 %79, i64* %cppVar_1342, align 8
  %80 = load i64* %cppVar_1341, align 8
  %81 = load i64* %cppVar_1342, align 8
  %82 = mul nsw i64 %80, %81
  store i64 %82, i64* %cppVar_1343, align 8
  %83 = load i64* %cppVar_1343, align 8
  %84 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 50
  %85 = load i64* %84, align 8
  %86 = and i64 %83, %85
  store i64 %86, i64* %cppVar_1343, align 8
  %87 = load i64* %cppVar_1343, align 8
  %88 = ashr i64 %87, 63
  %89 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 42
  %90 = load i64* %89, align 8
  %91 = and i64 %88, %90
  store i64 %91, i64* %cppVar_1344, align 8
  %92 = load i64* %cppVar_1344, align 8
  %93 = ashr i64 %92, 0
  %94 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 44
  %95 = load i64* %94, align 8
  %96 = and i64 %93, %95
  store i64 %96, i64* %cppVar_1345, align 8
  %97 = load i64* %cppVar_1343, align 8
  %98 = ashr i64 %97, 0
  %99 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 46
  %100 = load i64* %99, align 8
  %101 = and i64 %98, %100
  store i64 %101, i64* %cppVar_1346, align 8
  %102 = load i64* %cppVar_1346, align 8
  %103 = ashr i64 %102, 34
  %104 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 43
  %105 = load i64* %104, align 8
  %106 = and i64 %103, %105
  store i64 %106, i64* %cppVar_1347, align 8
  %107 = load i64* %cppVar_1345, align 8
  %108 = shl i64 %107, 29
  %109 = load i64* %cppVar_1347, align 8
  %110 = or i64 %108, %109
  store i64 %110, i64* %cppVar_1348, align 8
  %111 = load i64* %cppVar_1348, align 8
  %112 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 45
  %113 = load i64* %112, align 8
  %114 = and i64 %111, %113
  store i64 %114, i64* %cppVar_1348, align 8
  %115 = load i64* %cppVar_1334, align 8
  %116 = load i64* %cppVar_1348, align 8
  %117 = add nsw i64 %115, %116
  store i64 %117, i64* %cppVar_1349, align 8
  %118 = load i64* %cppVar_1349, align 8
  %119 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 45
  %120 = load i64* %119, align 8
  %121 = and i64 %118, %120
  store i64 %121, i64* %cppVar_1349, align 8
  %122 = load i64* %cppVar_1349, align 8
  store i64 %122, i64* %cppVar_1330, align 8
  br label %126

; <label>:123                                     ; preds = %40
  %124 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 5
  %125 = load i64* %124, align 8
  store i64 %125, i64* %cppVar_1330, align 8
  br label %126

; <label>:126                                     ; preds = %123, %56
  %127 = load i64* %cppVar_1330, align 8
  store i64 %127, i64* %cppVar_1327, align 8
  br label %143

; <label>:128                                     ; preds = %23
  %129 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %130 = load i64* %129, align 8
  %131 = icmp eq i64 %130, 2
  %132 = zext i1 %131 to i8
  store i8 %132, i8* %cppVar_1352, align 1
  %133 = load i8* %cppVar_1352, align 1
  %134 = trunc i8 %133 to i1
  br i1 %134, label %135, label %138

; <label>:135                                     ; preds = %128
  %136 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 5
  %137 = load i64* %136, align 8
  store i64 %137, i64* %cppVar_1350, align 8
  br label %141

; <label>:138                                     ; preds = %128
  %139 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 5
  %140 = load i64* %139, align 8
  store i64 %140, i64* %cppVar_1350, align 8
  br label %141

; <label>:141                                     ; preds = %138, %135
  %142 = load i64* %cppVar_1350, align 8
  store i64 %142, i64* %cppVar_1327, align 8
  br label %143

; <label>:143                                     ; preds = %141, %126
  %144 = load i64* %cppVar_1327, align 8
  store i64 %144, i64* %cppVar_1324, align 8
  br label %145

; <label>:145                                     ; preds = %143, %20
  %146 = load i64* %cppVar_1324, align 8
  ret i64 %146
}

define linkonce_odr i64 @_ZN8type_memIjLj8EE2rdEl(%0* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %0** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %0* %3, i32 0, i32 0
  %6 = load i32** %5, align 8
  %7 = getelementptr inbounds i32* %6, i64 %4
  %8 = load i32* %7
  %9 = zext i32 %8 to i64
  ret i64 %9
}

define void @_ZN13model_predict24cppUpdateFun_hidden_unitElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_2011 = alloca i64, align 8
  %cppVar_2010 = alloca i64, align 8
  %cppVar_1968 = alloca i64, align 8
  %cppVar_1969 = alloca i8, align 1
  %cppVar_2016 = alloca i64, align 8
  %cppVar_2017 = alloca i8, align 1
  %cppVar_2019 = alloca i64, align 8
  %cppVar_2020 = alloca i8, align 1
  %cppVar_1998 = alloca i64, align 8
  %cppVar_1999 = alloca i64, align 8
  %cppVar_2000 = alloca i64, align 8
  %cppVar_1990 = alloca i64, align 8
  %cppVar_1991 = alloca i8, align 1
  %cppVar_1992 = alloca i64, align 8
  %cppVar_1989 = alloca i64, align 8
  %cppVar_1994 = alloca i64, align 8
  %cppVar_1995 = alloca i64, align 8
  %cppVar_1996 = alloca i64, align 8
  %cppVar_1997 = alloca i8, align 1
  %cppVar_2001 = alloca i64, align 8
  %cppVar_2002 = alloca i64, align 8
  %cppVar_2003 = alloca i64, align 8
  %cppVar_2004 = alloca i64, align 8
  %cppVar_2005 = alloca i64, align 8
  %cppVar_2006 = alloca i64, align 8
  %cppVar_1993 = alloca i64, align 8
  %cppVar_2007 = alloca i64, align 8
  %cppVar_1980 = alloca i64, align 8
  %cppVar_1981 = alloca i64, align 8
  %cppVar_1982 = alloca i64, align 8
  %cppVar_1983 = alloca i64, align 8
  %cppVar_1984 = alloca i64, align 8
  %cppVar_1985 = alloca i64, align 8
  %cppVar_1986 = alloca i64, align 8
  %cppVar_1987 = alloca i64, align 8
  %cppVar_1988 = alloca i64, align 8
  %cppVar_2008 = alloca i64, align 8
  %cppVar_2009 = alloca i8, align 1
  %cppVar_1979 = alloca i64, align 8
  %cppVar_1977 = alloca i8, align 1
  %cppVar_1978 = alloca i64, align 8
  %cppVar_2012 = alloca %class.SysCArray1D, align 8
  %cppVar_1976 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_1971 = alloca i8, align 1
  %cppVar_1972 = alloca i64, align 8
  %cppVar_1973 = alloca i64, align 8
  %cppVar_1974 = alloca i8, align 1
  %cppVar_1975 = alloca i8, align 1
  %cppVar_2013 = alloca i64, align 8
  %cppVar_2014 = alloca %class.SysCArray1D, align 8
  %cppVar_1970 = alloca %class.SysCArray1D, align 8
  %cppVar_2018 = alloca %class.SysCArray1D, align 8
  %cppVar_2015 = alloca %class.SysCArray1D, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_predict** %1
  call void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_2012)
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_1976)
          to label %18 unwind label %95

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_2014)
          to label %19 unwind label %98

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_1970)
          to label %20 unwind label %101

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_2018)
          to label %21 unwind label %104

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %cppVar_2015)
          to label %22 unwind label %107

; <label>:22                                      ; preds = %21
  store i1 false, i1* %15
  invoke void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %agg.result)
          to label %23 unwind label %110

; <label>:23                                      ; preds = %22
  %24 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1969, align 1
  %28 = load i8* %cppVar_1969, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %241

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %32 = load i64* %31, align 8
  %33 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 16
  %34 = load i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %cppVar_1971, align 1
  %37 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 11
  %38 = load i64* %37, align 8
  %39 = sub nsw i64 %38, 1
  store i64 %39, i64* %cppVar_1973, align 8
  %40 = load i64* %cppVar_1973, align 8
  %41 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %42 = load i64* %41, align 8
  %43 = and i64 %40, %42
  store i64 %43, i64* %cppVar_1973, align 8
  %44 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 19
  %45 = load i64* %44, align 8
  %46 = load i64* %cppVar_1973, align 8
  %47 = icmp eq i64 %45, %46
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %cppVar_1974, align 1
  %49 = load i8* %cppVar_1971, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %30
  %52 = load i8* %cppVar_1974, align 1
  %53 = trunc i8 %52 to i1
  br label %54

; <label>:54                                      ; preds = %51, %30
  %55 = phi i1 [ false, %30 ], [ %53, %51 ]
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_1975, align 1
  %57 = load i8* %cppVar_1975, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %235

; <label>:59                                      ; preds = %54
  %60 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %61 = load i64* %60, align 8
  %62 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 16
  %63 = load i64* %62, align 8
  %64 = icmp eq i64 %61, %63
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %cppVar_1977, align 1
  %66 = load i8* %cppVar_1977, align 1
  %67 = trunc i8 %66 to i1
  br i1 %67, label %68, label %218

; <label>:68                                      ; preds = %59
  %69 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 19
  %70 = load i64* %69, align 8
  %71 = ashr i64 %70, 0
  %72 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 48
  %73 = load i64* %72, align 8
  %74 = and i64 %71, %73
  store i64 %74, i64* %cppVar_1978, align 8
  store i64 0, i64* %cppVar_1983, align 8
  %75 = load i64* %cppVar_1983, align 8
  %76 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 47
  %77 = load i64* %76, align 8
  %78 = and i64 %75, %77
  store i64 %78, i64* %cppVar_1983, align 8
  %79 = load i64* %cppVar_1983, align 8
  %80 = or i64 0, %79
  store i64 %80, i64* %cppVar_1984, align 8
  store i64 0, i64* %cppVar_1987, align 8
  %81 = load i64* %cppVar_1987, align 8
  %82 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 47
  %83 = load i64* %82, align 8
  %84 = and i64 %81, %83
  store i64 %84, i64* %cppVar_1987, align 8
  %85 = load i64* %cppVar_1984, align 8
  %86 = load i64* %cppVar_1987, align 8
  %87 = or i64 %85, %86
  store i64 %87, i64* %cppVar_1988, align 8
  %88 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %89 = load i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %cppVar_1991, align 1
  %92 = load i8* %cppVar_1991, align 1
  %93 = trunc i8 %92 to i1
  br i1 %93, label %94, label %113

; <label>:94                                      ; preds = %68
  store i64 0, i64* %cppVar_1989, align 8
  br label %116

; <label>:95                                      ; preds = %288, %0
  %96 = call i8* @llvm.eh.exception() nounwind
  store i8* %96, i8** %13
  %97 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %96, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %294

; <label>:98                                      ; preds = %285, %18
  %99 = call i8* @llvm.eh.exception() nounwind
  store i8* %99, i8** %13
  %100 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %99, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %292

; <label>:101                                     ; preds = %282, %19
  %102 = call i8* @llvm.eh.exception() nounwind
  store i8* %102, i8** %13
  %103 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %102, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %289

; <label>:104                                     ; preds = %279, %20
  %105 = call i8* @llvm.eh.exception() nounwind
  store i8* %105, i8** %13
  %106 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %105, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %286

; <label>:107                                     ; preds = %277, %21
  %108 = call i8* @llvm.eh.exception() nounwind
  store i8* %108, i8** %13
  %109 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %108, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %283

; <label>:110                                     ; preds = %275, %22
  %111 = call i8* @llvm.eh.exception() nounwind
  store i8* %111, i8** %13
  %112 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %111, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %280

; <label>:113                                     ; preds = %68
  %114 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 23
  %115 = load i64* %114, align 8
  store i64 %115, i64* %cppVar_1989, align 8
  br label %116

; <label>:116                                     ; preds = %113, %94
  %117 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %118 = load i64* %117, align 8
  %119 = ashr i64 %118, 0
  %120 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 51
  %121 = load i64* %120, align 8
  %122 = and i64 %119, %121
  store i64 %122, i64* %cppVar_1994, align 8
  %123 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 1
  %124 = load i64* %cppVar_1994, align 8
  %125 = invoke i64 @_ZN8type_memIhLj512EE2rdEl(%class.SysCArray1D* %123, i64 %124)
          to label %126 unwind label %185

; <label>:126                                     ; preds = %116
  store i64 %125, i64* %cppVar_1995, align 8
  %127 = load i64* %cppVar_1995, align 8
  %128 = icmp eq i64 %127, 1
  %129 = zext i1 %128 to i8
  store i8 %129, i8* %cppVar_1997, align 1
  %130 = load i8* %cppVar_1997, align 1
  %131 = trunc i8 %130 to i1
  br i1 %131, label %132, label %188

; <label>:132                                     ; preds = %126
  %133 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %134 = load i64* %133, align 8
  %135 = mul nsw i64 101, %134
  store i64 %135, i64* %cppVar_1999, align 8
  %136 = load i64* %cppVar_1999, align 8
  %137 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %138 = load i64* %137, align 8
  %139 = and i64 %136, %138
  store i64 %139, i64* %cppVar_1999, align 8
  %140 = load i64* %cppVar_1999, align 8
  %141 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 19
  %142 = load i64* %141, align 8
  %143 = add nsw i64 %140, %142
  store i64 %143, i64* %cppVar_2000, align 8
  %144 = load i64* %cppVar_2000, align 8
  %145 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %146 = load i64* %145, align 8
  %147 = and i64 %144, %146
  store i64 %147, i64* %cppVar_2000, align 8
  %148 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 4
  %149 = load i64* %cppVar_2000, align 8
  %150 = invoke i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %148, i64 %149)
          to label %151 unwind label %185

; <label>:151                                     ; preds = %132
  store i64 %150, i64* %cppVar_2001, align 8
  %152 = load i64* %cppVar_2001, align 8
  %153 = ashr i64 %152, 1
  %154 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 48
  %155 = load i64* %154, align 8
  %156 = and i64 %153, %155
  store i64 %156, i64* %cppVar_2002, align 8
  %157 = load i64* %cppVar_2002, align 8
  %158 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 53
  %159 = load i64* %158, align 8
  %160 = and i64 %157, %159
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %167

; <label>:162                                     ; preds = %151
  %163 = load i64* %cppVar_2002, align 8
  %164 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 55
  %165 = load i64* %164, align 8
  %166 = or i64 %163, %165
  br label %169

; <label>:167                                     ; preds = %151
  %168 = load i64* %cppVar_2002, align 8
  br label %169

; <label>:169                                     ; preds = %167, %162
  %170 = phi i64 [ %166, %162 ], [ %168, %167 ]
  store i64 %170, i64* %cppVar_2003, align 8
  %171 = load i64* %cppVar_2001, align 8
  %172 = ashr i64 %171, 0
  %173 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 40
  %174 = load i64* %173, align 8
  %175 = and i64 %172, %174
  store i64 %175, i64* %cppVar_2004, align 8
  %176 = load i64* %cppVar_2003, align 8
  %177 = shl i64 %176, 1
  %178 = load i64* %cppVar_2004, align 8
  %179 = or i64 %177, %178
  store i64 %179, i64* %cppVar_2005, align 8
  %180 = load i64* %cppVar_2005, align 8
  %181 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %182 = load i64* %181, align 8
  %183 = and i64 %180, %182
  store i64 %183, i64* %cppVar_2005, align 8
  %184 = load i64* %cppVar_2005, align 8
  store i64 %184, i64* %cppVar_1993, align 8
  br label %189

; <label>:185                                     ; preds = %270, %267, %263, %259, %248, %238, %235, %232, %230, %222, %218, %215, %212, %209, %189, %132, %116
  %186 = call i8* @llvm.eh.exception() nounwind
  store i8* %186, i8** %13
  %187 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %186, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %agg.result)
          to label %278 unwind label %298

; <label>:188                                     ; preds = %126
  store i64 0, i64* %cppVar_1993, align 8
  br label %189

; <label>:189                                     ; preds = %188, %169
  %190 = load i64* %cppVar_1989, align 8
  %191 = load i64* %cppVar_1993, align 8
  %192 = add nsw i64 %190, %191
  store i64 %192, i64* %cppVar_2007, align 8
  %193 = load i64* %cppVar_2007, align 8
  %194 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %195 = load i64* %194, align 8
  %196 = and i64 %193, %195
  store i64 %196, i64* %cppVar_2007, align 8
  %197 = load i64* %cppVar_2007, align 8
  %198 = invoke zeroext i16 @_Z7sigmoidl(i64 %197)
          to label %199 unwind label %185

; <label>:199                                     ; preds = %189
  %200 = zext i16 %198 to i64
  store i64 %200, i64* %cppVar_2008, align 8
  %201 = load i64* %cppVar_1988, align 8
  %202 = load i64* %cppVar_2008, align 8
  %203 = icmp slt i64 %201, %202
  %204 = zext i1 %203 to i8
  store i8 %204, i8* %cppVar_2009, align 1
  %205 = load i8* %cppVar_2009, align 1
  %206 = trunc i8 %205 to i1
  br i1 %206, label %207, label %208

; <label>:207                                     ; preds = %199
  store i64 1, i64* %cppVar_1979, align 8
  br label %209

; <label>:208                                     ; preds = %199
  store i64 0, i64* %cppVar_1979, align 8
  br label %209

; <label>:209                                     ; preds = %208, %207
  %210 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 6
  %211 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2012, %class.SysCArray1D* %210)
          to label %212 unwind label %185

; <label>:212                                     ; preds = %209
  %213 = load i64* %cppVar_1978, align 8
  %214 = load i64* %cppVar_1979, align 8
  invoke void @_ZN8type_memIbLj128EE2wrEll(%class.SysCArray1D* %cppVar_2012, i64 %213, i64 %214)
          to label %215 unwind label %185

; <label>:215                                     ; preds = %212
  %216 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1976, %class.SysCArray1D* %cppVar_2012)
          to label %217 unwind label %185

; <label>:217                                     ; preds = %215
  br label %222

; <label>:218                                     ; preds = %59
  %219 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 6
  %220 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1976, %class.SysCArray1D* %219)
          to label %221 unwind label %185

; <label>:221                                     ; preds = %218
  br label %222

; <label>:222                                     ; preds = %221, %217
  %223 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 11
  %224 = load i64* %223, align 8
  %225 = ashr i64 %224, 0
  %226 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 48
  %227 = load i64* %226, align 8
  %228 = and i64 %225, %227
  store i64 %228, i64* %cppVar_2013, align 8
  %229 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2014, %class.SysCArray1D* %cppVar_1976)
          to label %230 unwind label %185

; <label>:230                                     ; preds = %222
  %231 = load i64* %cppVar_2013, align 8
  invoke void @_ZN8type_memIbLj128EE2wrEll(%class.SysCArray1D* %cppVar_2014, i64 %231, i64 1)
          to label %232 unwind label %185

; <label>:232                                     ; preds = %230
  %233 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1970, %class.SysCArray1D* %cppVar_2014)
          to label %234 unwind label %185

; <label>:234                                     ; preds = %232
  br label %238

; <label>:235                                     ; preds = %54
  %236 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_1970, %class.SysCArray1D* %cppVar_1976)
          to label %237 unwind label %185

; <label>:237                                     ; preds = %235
  br label %238

; <label>:238                                     ; preds = %237, %234
  %239 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_1970)
          to label %240 unwind label %185

; <label>:240                                     ; preds = %238
  br label %273

; <label>:241                                     ; preds = %23
  %242 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %243 = load i64* %242, align 8
  %244 = icmp eq i64 %243, 1
  %245 = zext i1 %244 to i8
  store i8 %245, i8* %cppVar_2017, align 1
  %246 = load i8* %cppVar_2017, align 1
  %247 = trunc i8 %246 to i1
  br i1 %247, label %248, label %252

; <label>:248                                     ; preds = %241
  %249 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 6
  %250 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2015, %class.SysCArray1D* %249)
          to label %251 unwind label %185

; <label>:251                                     ; preds = %248
  br label %270

; <label>:252                                     ; preds = %241
  %253 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %254 = load i64* %253, align 8
  %255 = icmp eq i64 %254, 2
  %256 = zext i1 %255 to i8
  store i8 %256, i8* %cppVar_2020, align 1
  %257 = load i8* %cppVar_2020, align 1
  %258 = trunc i8 %257 to i1
  br i1 %258, label %259, label %263

; <label>:259                                     ; preds = %252
  %260 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 6
  %261 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2018, %class.SysCArray1D* %260)
          to label %262 unwind label %185

; <label>:262                                     ; preds = %259
  br label %267

; <label>:263                                     ; preds = %252
  %264 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 6
  %265 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2018, %class.SysCArray1D* %264)
          to label %266 unwind label %185

; <label>:266                                     ; preds = %263
  br label %267

; <label>:267                                     ; preds = %266, %262
  %268 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2015, %class.SysCArray1D* %cppVar_2018)
          to label %269 unwind label %185

; <label>:269                                     ; preds = %267
  br label %270

; <label>:270                                     ; preds = %269, %251
  %271 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_2015)
          to label %272 unwind label %185

; <label>:272                                     ; preds = %270
  br label %273

; <label>:273                                     ; preds = %272, %240
  store i1 true, i1* %15
  store i32 1, i32* %16
  %274 = load i1* %15
  br i1 %274, label %277, label %275

; <label>:275                                     ; preds = %273
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %agg.result)
          to label %276 unwind label %110

; <label>:276                                     ; preds = %275
  br label %277

; <label>:277                                     ; preds = %276, %273
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2015)
          to label %279 unwind label %107

; <label>:278                                     ; preds = %185
  br label %280

; <label>:279                                     ; preds = %277
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2018)
          to label %282 unwind label %104

; <label>:280                                     ; preds = %278, %110
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2015)
          to label %281 unwind label %298

; <label>:281                                     ; preds = %280
  br label %283

; <label>:282                                     ; preds = %279
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1970)
          to label %285 unwind label %101

; <label>:283                                     ; preds = %281, %107
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2018)
          to label %284 unwind label %298

; <label>:284                                     ; preds = %283
  br label %286

; <label>:285                                     ; preds = %282
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2014)
          to label %288 unwind label %98

; <label>:286                                     ; preds = %284, %104
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1970)
          to label %287 unwind label %298

; <label>:287                                     ; preds = %286
  br label %289

; <label>:288                                     ; preds = %285
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1976)
          to label %291 unwind label %95

; <label>:289                                     ; preds = %287, %101
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2014)
          to label %290 unwind label %298

; <label>:290                                     ; preds = %289
  br label %292

; <label>:291                                     ; preds = %288
  call void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2012)
  ret void

; <label>:292                                     ; preds = %290, %98
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_1976)
          to label %293 unwind label %298

; <label>:293                                     ; preds = %292
  br label %294

; <label>:294                                     ; preds = %293, %95
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2012)
          to label %295 unwind label %298

; <label>:295                                     ; preds = %294
  br label %296

; <label>:296                                     ; preds = %295
  %297 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %297) noreturn
  unreachable

; <label>:298                                     ; preds = %294, %292, %289, %286, %283, %280, %185
  %299 = call i8* @llvm.eh.exception() nounwind
  %300 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %299, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIbLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

declare i8* @llvm.eh.exception() nounwind readonly

declare i32 @__gxx_personality_v0(...)

declare i32 @llvm.eh.selector(i8*, i8*, ...) nounwind

declare i32 @llvm.eh.typeid.for(i8*) nounwind

declare void @_Unwind_Resume_or_Rethrow(i8*)

define linkonce_odr i64 @_ZN8type_memIhLj512EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = zext i8 %8 to i64
  ret i64 %9
}

define linkonce_odr i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = zext i8 %8 to i64
  ret i64 %9
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

define linkonce_odr void @_ZN8type_memIbLj128EE2wrEll(%class.SysCArray1D* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %class.SysCArray1D** %1
  %5 = load i64* %3, align 8
  %6 = icmp ne i64 %5, 0
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %class.SysCArray1D* %4, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = getelementptr inbounds i8* %9, i64 %7
  %11 = zext i1 %6 to i8
  store i8 %11, i8* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj128EED2Ev(%class.SysCArray1D* %2)
  ret void
}

declare void @_ZSt9terminatev()

define i64 @_ZN13model_predict18cppUpdateFun_indexElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1355 = alloca i64, align 8
  %cppVar_1356 = alloca i8, align 1
  %cppVar_1358 = alloca i64, align 8
  %cppVar_1359 = alloca i8, align 1
  %cppVar_1361 = alloca i64, align 8
  %cppVar_1362 = alloca i8, align 1
  %cppVar_1364 = alloca i64, align 8
  %cppVar_1365 = alloca i8, align 1
  %cppVar_1366 = alloca i64, align 8
  %cppVar_1367 = alloca i8, align 1
  %cppVar_1368 = alloca i8, align 1
  %cppVar_1370 = alloca i64, align 8
  %cppVar_1371 = alloca i64, align 8
  %cppVar_1372 = alloca i8, align 1
  %cppVar_1373 = alloca i8, align 1
  %cppVar_1374 = alloca i8, align 1
  %cppVar_1375 = alloca i64, align 8
  %cppVar_1376 = alloca i64, align 8
  %cppVar_1369 = alloca i64, align 8
  %cppVar_1363 = alloca i64, align 8
  %cppVar_1360 = alloca i64, align 8
  %cppVar_1357 = alloca i64, align 8
  %cppVar_1354 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1356, align 1
  %18 = load i8* %cppVar_1356, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1354, align 8
  br label %114

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1359, align 1
  %28 = load i8* %cppVar_1359, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1357, align 8
  br label %112

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1362, align 1
  %38 = load i8* %cppVar_1362, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %107

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %42 = load i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %cppVar_1365, align 1
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %46 = load i64* %45, align 8
  %47 = icmp eq i64 %46, 1
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %cppVar_1367, align 1
  %49 = load i8* %cppVar_1365, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %40
  %52 = load i8* %cppVar_1367, align 1
  %53 = trunc i8 %52 to i1
  br label %54

; <label>:54                                      ; preds = %51, %40
  %55 = phi i1 [ false, %40 ], [ %53, %51 ]
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_1368, align 1
  %57 = load i8* %cppVar_1368, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %102

; <label>:59                                      ; preds = %54
  %60 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 14
  %61 = load i64* %60, align 8
  %62 = sub nsw i64 %61, 1
  store i64 %62, i64* %cppVar_1371, align 8
  %63 = load i64* %cppVar_1371, align 8
  %64 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %65 = load i64* %64, align 8
  %66 = and i64 %63, %65
  store i64 %66, i64* %cppVar_1371, align 8
  %67 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %68 = load i64* %67, align 8
  %69 = load i64* %cppVar_1371, align 8
  %70 = icmp eq i64 %68, %69
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %cppVar_1372, align 1
  %72 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 10
  %73 = load i64* %72, align 8
  %74 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 12
  %75 = load i64* %74, align 8
  %76 = icmp eq i64 %73, %75
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %cppVar_1373, align 1
  %78 = load i8* %cppVar_1372, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %83

; <label>:80                                      ; preds = %59
  %81 = load i8* %cppVar_1373, align 1
  %82 = trunc i8 %81 to i1
  br label %83

; <label>:83                                      ; preds = %80, %59
  %84 = phi i1 [ false, %59 ], [ %82, %80 ]
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %cppVar_1374, align 1
  %86 = load i8* %cppVar_1374, align 1
  %87 = trunc i8 %86 to i1
  br i1 %87, label %88, label %91

; <label>:88                                      ; preds = %83
  %89 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %90 = load i64* %89, align 8
  store i64 %90, i64* %cppVar_1369, align 8
  br label %100

; <label>:91                                      ; preds = %83
  %92 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %93 = load i64* %92, align 8
  %94 = add nsw i64 %93, 1
  store i64 %94, i64* %cppVar_1376, align 8
  %95 = load i64* %cppVar_1376, align 8
  %96 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %97 = load i64* %96, align 8
  %98 = and i64 %95, %97
  store i64 %98, i64* %cppVar_1376, align 8
  %99 = load i64* %cppVar_1376, align 8
  store i64 %99, i64* %cppVar_1369, align 8
  br label %100

; <label>:100                                     ; preds = %91, %88
  %101 = load i64* %cppVar_1369, align 8
  store i64 %101, i64* %cppVar_1363, align 8
  br label %105

; <label>:102                                     ; preds = %54
  %103 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %104 = load i64* %103, align 8
  store i64 %104, i64* %cppVar_1363, align 8
  br label %105

; <label>:105                                     ; preds = %102, %100
  %106 = load i64* %cppVar_1363, align 8
  store i64 %106, i64* %cppVar_1360, align 8
  br label %110

; <label>:107                                     ; preds = %33
  %108 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %109 = load i64* %108, align 8
  store i64 %109, i64* %cppVar_1360, align 8
  br label %110

; <label>:110                                     ; preds = %107, %105
  %111 = load i64* %cppVar_1360, align 8
  store i64 %111, i64* %cppVar_1357, align 8
  br label %112

; <label>:112                                     ; preds = %110, %30
  %113 = load i64* %cppVar_1357, align 8
  store i64 %113, i64* %cppVar_1354, align 8
  br label %114

; <label>:114                                     ; preds = %112, %20
  %115 = load i64* %cppVar_1354, align 8
  ret i64 %115
}

define i64 @_ZN13model_predict19cppUpdateFun_jstateElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1381 = alloca i64, align 8
  %cppVar_1379 = alloca i64, align 8
  %cppVar_1380 = alloca i8, align 1
  %cppVar_1383 = alloca i64, align 8
  %cppVar_1384 = alloca i8, align 1
  %cppVar_1416 = alloca i64, align 8
  %cppVar_1417 = alloca i8, align 1
  %cppVar_1424 = alloca i64, align 8
  %cppVar_1425 = alloca i8, align 1
  %cppVar_1390 = alloca i8, align 1
  %cppVar_1392 = alloca i64, align 8
  %cppVar_1393 = alloca i8, align 1
  %cppVar_1386 = alloca i64, align 8
  %cppVar_1387 = alloca i8, align 1
  %cppVar_1388 = alloca i8, align 1
  %cppVar_1397 = alloca i64, align 8
  %cppVar_1398 = alloca i8, align 1
  %cppVar_1399 = alloca i8, align 1
  %cppVar_1404 = alloca i64, align 8
  %cppVar_1405 = alloca i8, align 1
  %cppVar_1406 = alloca i8, align 1
  %cppVar_1408 = alloca i64, align 8
  %cppVar_1409 = alloca i8, align 1
  %cppVar_1410 = alloca i8, align 1
  %cppVar_1412 = alloca i64, align 8
  %cppVar_1413 = alloca i8, align 1
  %cppVar_1414 = alloca i8, align 1
  %cppVar_1394 = alloca i64, align 8
  %cppVar_1395 = alloca i64, align 8
  %cppVar_1391 = alloca i64, align 8
  %cppVar_1389 = alloca i64, align 8
  %cppVar_1401 = alloca i64, align 8
  %cppVar_1402 = alloca i64, align 8
  %cppVar_1400 = alloca i64, align 8
  %cppVar_1411 = alloca i64, align 8
  %cppVar_1407 = alloca i64, align 8
  %cppVar_1403 = alloca i64, align 8
  %cppVar_1396 = alloca i64, align 8
  %cppVar_1385 = alloca i64, align 8
  %cppVar_1419 = alloca i64, align 8
  %cppVar_1420 = alloca i8, align 1
  %cppVar_1421 = alloca i64, align 8
  %cppVar_1422 = alloca i64, align 8
  %cppVar_1418 = alloca i64, align 8
  %cppVar_1423 = alloca i64, align 8
  %cppVar_1415 = alloca i64, align 8
  %cppVar_1382 = alloca i64, align 8
  %cppVar_1378 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1380, align 1
  %18 = load i8* %cppVar_1380, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_1378, align 8
  br label %219

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_1384, align 1
  %26 = load i8* %cppVar_1384, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %174

; <label>:28                                      ; preds = %21
  %29 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %30 = load i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %cppVar_1387, align 1
  %33 = load i8* %cppVar_1384, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %28
  %36 = load i8* %cppVar_1387, align 1
  %37 = trunc i8 %36 to i1
  br label %38

; <label>:38                                      ; preds = %35, %28
  %39 = phi i1 [ false, %28 ], [ %37, %35 ]
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %cppVar_1388, align 1
  %41 = load i8* %cppVar_1388, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %76

; <label>:43                                      ; preds = %38
  %44 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %45 = load i64* %44, align 8
  %46 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 11
  %47 = load i64* %46, align 8
  %48 = icmp eq i64 %45, %47
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %cppVar_1390, align 1
  %50 = load i8* %cppVar_1390, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %71

; <label>:52                                      ; preds = %43
  %53 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %54 = load i64* %53, align 8
  %55 = icmp eq i64 %54, 4
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_1393, align 1
  %57 = load i8* %cppVar_1393, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %60

; <label>:59                                      ; preds = %52
  store i64 0, i64* %cppVar_1391, align 8
  br label %69

; <label>:60                                      ; preds = %52
  %61 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %62 = load i64* %61, align 8
  %63 = add nsw i64 %62, 1
  store i64 %63, i64* %cppVar_1395, align 8
  %64 = load i64* %cppVar_1395, align 8
  %65 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %66 = load i64* %65, align 8
  %67 = and i64 %64, %66
  store i64 %67, i64* %cppVar_1395, align 8
  %68 = load i64* %cppVar_1395, align 8
  store i64 %68, i64* %cppVar_1391, align 8
  br label %69

; <label>:69                                      ; preds = %60, %59
  %70 = load i64* %cppVar_1391, align 8
  store i64 %70, i64* %cppVar_1389, align 8
  br label %74

; <label>:71                                      ; preds = %43
  %72 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %73 = load i64* %72, align 8
  store i64 %73, i64* %cppVar_1389, align 8
  br label %74

; <label>:74                                      ; preds = %71, %69
  %75 = load i64* %cppVar_1389, align 8
  store i64 %75, i64* %cppVar_1385, align 8
  br label %172

; <label>:76                                      ; preds = %38
  %77 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %78 = load i64* %77, align 8
  %79 = icmp eq i64 %78, 1
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %cppVar_1398, align 1
  %81 = load i8* %cppVar_1384, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %86

; <label>:83                                      ; preds = %76
  %84 = load i8* %cppVar_1398, align 1
  %85 = trunc i8 %84 to i1
  br label %86

; <label>:86                                      ; preds = %83, %76
  %87 = phi i1 [ false, %76 ], [ %85, %83 ]
  %88 = zext i1 %87 to i8
  store i8 %88, i8* %cppVar_1399, align 1
  %89 = load i8* %cppVar_1399, align 1
  %90 = trunc i8 %89 to i1
  br i1 %90, label %91, label %110

; <label>:91                                      ; preds = %86
  %92 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %93 = load i64* %92, align 8
  %94 = icmp eq i64 %93, 4
  %95 = zext i1 %94 to i8
  store i8 %95, i8* %cppVar_1393, align 1
  %96 = load i8* %cppVar_1393, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %99

; <label>:98                                      ; preds = %91
  store i64 0, i64* %cppVar_1400, align 8
  br label %108

; <label>:99                                      ; preds = %91
  %100 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %101 = load i64* %100, align 8
  %102 = add nsw i64 %101, 1
  store i64 %102, i64* %cppVar_1402, align 8
  %103 = load i64* %cppVar_1402, align 8
  %104 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %105 = load i64* %104, align 8
  %106 = and i64 %103, %105
  store i64 %106, i64* %cppVar_1402, align 8
  %107 = load i64* %cppVar_1402, align 8
  store i64 %107, i64* %cppVar_1400, align 8
  br label %108

; <label>:108                                     ; preds = %99, %98
  %109 = load i64* %cppVar_1400, align 8
  store i64 %109, i64* %cppVar_1396, align 8
  br label %170

; <label>:110                                     ; preds = %86
  %111 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %112 = load i64* %111, align 8
  %113 = icmp eq i64 %112, 2
  %114 = zext i1 %113 to i8
  store i8 %114, i8* %cppVar_1405, align 1
  %115 = load i8* %cppVar_1384, align 1
  %116 = trunc i8 %115 to i1
  br i1 %116, label %117, label %120

; <label>:117                                     ; preds = %110
  %118 = load i8* %cppVar_1405, align 1
  %119 = trunc i8 %118 to i1
  br label %120

; <label>:120                                     ; preds = %117, %110
  %121 = phi i1 [ false, %110 ], [ %119, %117 ]
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %cppVar_1406, align 1
  %123 = load i8* %cppVar_1406, align 1
  %124 = trunc i8 %123 to i1
  br i1 %124, label %125, label %127

; <label>:125                                     ; preds = %120
  %126 = load i64* %cppVar_1400, align 8
  store i64 %126, i64* %cppVar_1403, align 8
  br label %168

; <label>:127                                     ; preds = %120
  %128 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %129 = load i64* %128, align 8
  %130 = icmp eq i64 %129, 3
  %131 = zext i1 %130 to i8
  store i8 %131, i8* %cppVar_1409, align 1
  %132 = load i8* %cppVar_1384, align 1
  %133 = trunc i8 %132 to i1
  br i1 %133, label %134, label %137

; <label>:134                                     ; preds = %127
  %135 = load i8* %cppVar_1409, align 1
  %136 = trunc i8 %135 to i1
  br label %137

; <label>:137                                     ; preds = %134, %127
  %138 = phi i1 [ false, %127 ], [ %136, %134 ]
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %cppVar_1410, align 1
  %140 = load i8* %cppVar_1410, align 1
  %141 = trunc i8 %140 to i1
  br i1 %141, label %142, label %144

; <label>:142                                     ; preds = %137
  %143 = load i64* %cppVar_1400, align 8
  store i64 %143, i64* %cppVar_1407, align 8
  br label %166

; <label>:144                                     ; preds = %137
  %145 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %146 = load i64* %145, align 8
  %147 = icmp eq i64 %146, 4
  %148 = zext i1 %147 to i8
  store i8 %148, i8* %cppVar_1413, align 1
  %149 = load i8* %cppVar_1384, align 1
  %150 = trunc i8 %149 to i1
  br i1 %150, label %151, label %154

; <label>:151                                     ; preds = %144
  %152 = load i8* %cppVar_1413, align 1
  %153 = trunc i8 %152 to i1
  br label %154

; <label>:154                                     ; preds = %151, %144
  %155 = phi i1 [ false, %144 ], [ %153, %151 ]
  %156 = zext i1 %155 to i8
  store i8 %156, i8* %cppVar_1414, align 1
  %157 = load i8* %cppVar_1414, align 1
  %158 = trunc i8 %157 to i1
  br i1 %158, label %159, label %161

; <label>:159                                     ; preds = %154
  %160 = load i64* %cppVar_1400, align 8
  store i64 %160, i64* %cppVar_1411, align 8
  br label %164

; <label>:161                                     ; preds = %154
  %162 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %163 = load i64* %162, align 8
  store i64 %163, i64* %cppVar_1411, align 8
  br label %164

; <label>:164                                     ; preds = %161, %159
  %165 = load i64* %cppVar_1411, align 8
  store i64 %165, i64* %cppVar_1407, align 8
  br label %166

; <label>:166                                     ; preds = %164, %142
  %167 = load i64* %cppVar_1407, align 8
  store i64 %167, i64* %cppVar_1403, align 8
  br label %168

; <label>:168                                     ; preds = %166, %125
  %169 = load i64* %cppVar_1403, align 8
  store i64 %169, i64* %cppVar_1396, align 8
  br label %170

; <label>:170                                     ; preds = %168, %108
  %171 = load i64* %cppVar_1396, align 8
  store i64 %171, i64* %cppVar_1385, align 8
  br label %172

; <label>:172                                     ; preds = %170, %74
  %173 = load i64* %cppVar_1385, align 8
  store i64 %173, i64* %cppVar_1382, align 8
  br label %217

; <label>:174                                     ; preds = %21
  %175 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %176 = load i64* %175, align 8
  %177 = icmp eq i64 %176, 3
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %cppVar_1417, align 1
  %179 = load i8* %cppVar_1417, align 1
  %180 = trunc i8 %179 to i1
  br i1 %180, label %181, label %200

; <label>:181                                     ; preds = %174
  %182 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %183 = load i64* %182, align 8
  %184 = icmp eq i64 %183, 4
  %185 = zext i1 %184 to i8
  store i8 %185, i8* %cppVar_1420, align 1
  %186 = load i8* %cppVar_1420, align 1
  %187 = trunc i8 %186 to i1
  br i1 %187, label %188, label %189

; <label>:188                                     ; preds = %181
  store i64 0, i64* %cppVar_1418, align 8
  br label %198

; <label>:189                                     ; preds = %181
  %190 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %191 = load i64* %190, align 8
  %192 = add nsw i64 %191, 1
  store i64 %192, i64* %cppVar_1422, align 8
  %193 = load i64* %cppVar_1422, align 8
  %194 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %195 = load i64* %194, align 8
  %196 = and i64 %193, %195
  store i64 %196, i64* %cppVar_1422, align 8
  %197 = load i64* %cppVar_1422, align 8
  store i64 %197, i64* %cppVar_1418, align 8
  br label %198

; <label>:198                                     ; preds = %189, %188
  %199 = load i64* %cppVar_1418, align 8
  store i64 %199, i64* %cppVar_1415, align 8
  br label %215

; <label>:200                                     ; preds = %174
  %201 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %202 = load i64* %201, align 8
  %203 = icmp eq i64 %202, 2
  %204 = zext i1 %203 to i8
  store i8 %204, i8* %cppVar_1425, align 1
  %205 = load i8* %cppVar_1425, align 1
  %206 = trunc i8 %205 to i1
  br i1 %206, label %207, label %210

; <label>:207                                     ; preds = %200
  %208 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %209 = load i64* %208, align 8
  store i64 %209, i64* %cppVar_1423, align 8
  br label %213

; <label>:210                                     ; preds = %200
  %211 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %212 = load i64* %211, align 8
  store i64 %212, i64* %cppVar_1423, align 8
  br label %213

; <label>:213                                     ; preds = %210, %207
  %214 = load i64* %cppVar_1423, align 8
  store i64 %214, i64* %cppVar_1415, align 8
  br label %215

; <label>:215                                     ; preds = %213, %198
  %216 = load i64* %cppVar_1415, align 8
  store i64 %216, i64* %cppVar_1382, align 8
  br label %217

; <label>:217                                     ; preds = %215, %172
  %218 = load i64* %cppVar_1382, align 8
  store i64 %218, i64* %cppVar_1378, align 8
  br label %219

; <label>:219                                     ; preds = %217, %20
  %220 = load i64* %cppVar_1378, align 8
  ret i64 %220
}

define i64 @_ZN13model_predict21cppUpdateFun_per_v_pcElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1430 = alloca i64, align 8
  %cppVar_1443 = alloca i64, align 8
  %cppVar_1449 = alloca i64, align 8
  %cppVar_1455 = alloca i64, align 8
  %cppVar_1461 = alloca i64, align 8
  %cppVar_1428 = alloca i64, align 8
  %cppVar_1429 = alloca i8, align 1
  %cppVar_1432 = alloca i64, align 8
  %cppVar_1433 = alloca i8, align 1
  %cppVar_1477 = alloca i64, align 8
  %cppVar_1478 = alloca i8, align 1
  %cppVar_1441 = alloca i8, align 1
  %cppVar_1439 = alloca i64, align 8
  %cppVar_1440 = alloca i8, align 1
  %cppVar_1468 = alloca i64, align 8
  %cppVar_1469 = alloca i64, align 8
  %cppVar_1470 = alloca i8, align 1
  %cppVar_1471 = alloca i64, align 8
  %cppVar_1472 = alloca i64, align 8
  %cppVar_1473 = alloca i64, align 8
  %cppVar_1474 = alloca i8, align 1
  %cppVar_1475 = alloca i8, align 1
  %cppVar_1435 = alloca i64, align 8
  %cppVar_1436 = alloca i8, align 1
  %cppVar_1437 = alloca i8, align 1
  %cppVar_1445 = alloca i64, align 8
  %cppVar_1446 = alloca i8, align 1
  %cppVar_1447 = alloca i8, align 1
  %cppVar_1451 = alloca i64, align 8
  %cppVar_1452 = alloca i8, align 1
  %cppVar_1453 = alloca i8, align 1
  %cppVar_1457 = alloca i64, align 8
  %cppVar_1458 = alloca i8, align 1
  %cppVar_1459 = alloca i8, align 1
  %cppVar_1463 = alloca i64, align 8
  %cppVar_1464 = alloca i8, align 1
  %cppVar_1465 = alloca i8, align 1
  %cppVar_1442 = alloca i8, align 1
  %cppVar_1438 = alloca i64, align 8
  %cppVar_1448 = alloca i64, align 8
  %cppVar_1454 = alloca i64, align 8
  %cppVar_1460 = alloca i64, align 8
  %cppVar_1467 = alloca i64, align 8
  %cppVar_1466 = alloca i64, align 8
  %cppVar_1462 = alloca i64, align 8
  %cppVar_1456 = alloca i64, align 8
  %cppVar_1450 = alloca i64, align 8
  %cppVar_1444 = alloca i64, align 8
  %cppVar_1434 = alloca i64, align 8
  %cppVar_1476 = alloca i64, align 8
  %cppVar_1431 = alloca i64, align 8
  %cppVar_1427 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1429, align 1
  %18 = load i8* %cppVar_1429, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_1427, align 8
  br label %248

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_1433, align 1
  %26 = load i8* %cppVar_1433, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %231

; <label>:28                                      ; preds = %21
  %29 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %30 = load i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %cppVar_1436, align 1
  %33 = load i8* %cppVar_1433, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %28
  %36 = load i8* %cppVar_1436, align 1
  %37 = trunc i8 %36 to i1
  br label %38

; <label>:38                                      ; preds = %35, %28
  %39 = phi i1 [ false, %28 ], [ %37, %35 ]
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %cppVar_1437, align 1
  %41 = load i8* %cppVar_1437, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %70

; <label>:43                                      ; preds = %38
  %44 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %45 = load i64* %44, align 8
  %46 = icmp eq i64 %45, 4
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %cppVar_1440, align 1
  %48 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %49 = load i64* %48, align 8
  %50 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 11
  %51 = load i64* %50, align 8
  %52 = icmp eq i64 %49, %51
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %cppVar_1441, align 1
  %54 = load i8* %cppVar_1440, align 1
  %55 = trunc i8 %54 to i1
  br i1 %55, label %56, label %59

; <label>:56                                      ; preds = %43
  %57 = load i8* %cppVar_1441, align 1
  %58 = trunc i8 %57 to i1
  br label %59

; <label>:59                                      ; preds = %56, %43
  %60 = phi i1 [ false, %43 ], [ %58, %56 ]
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %cppVar_1442, align 1
  %62 = load i8* %cppVar_1442, align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %59
  store i64 1, i64* %cppVar_1438, align 8
  br label %68

; <label>:65                                      ; preds = %59
  %66 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %67 = load i64* %66, align 8
  store i64 %67, i64* %cppVar_1438, align 8
  br label %68

; <label>:68                                      ; preds = %65, %64
  %69 = load i64* %cppVar_1438, align 8
  store i64 %69, i64* %cppVar_1434, align 8
  br label %229

; <label>:70                                      ; preds = %38
  %71 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %72 = load i64* %71, align 8
  %73 = icmp eq i64 %72, 1
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_1446, align 1
  %75 = load i8* %cppVar_1433, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %80

; <label>:77                                      ; preds = %70
  %78 = load i8* %cppVar_1446, align 1
  %79 = trunc i8 %78 to i1
  br label %80

; <label>:80                                      ; preds = %77, %70
  %81 = phi i1 [ false, %70 ], [ %79, %77 ]
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_1447, align 1
  %83 = load i8* %cppVar_1447, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %98

; <label>:85                                      ; preds = %80
  %86 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %87 = load i64* %86, align 8
  %88 = icmp eq i64 %87, 4
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %cppVar_1440, align 1
  %90 = load i8* %cppVar_1440, align 1
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %85
  store i64 2, i64* %cppVar_1448, align 8
  br label %96

; <label>:93                                      ; preds = %85
  %94 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %95 = load i64* %94, align 8
  store i64 %95, i64* %cppVar_1448, align 8
  br label %96

; <label>:96                                      ; preds = %93, %92
  %97 = load i64* %cppVar_1448, align 8
  store i64 %97, i64* %cppVar_1444, align 8
  br label %227

; <label>:98                                      ; preds = %80
  %99 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %100 = load i64* %99, align 8
  %101 = icmp eq i64 %100, 2
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %cppVar_1452, align 1
  %103 = load i8* %cppVar_1433, align 1
  %104 = trunc i8 %103 to i1
  br i1 %104, label %105, label %108

; <label>:105                                     ; preds = %98
  %106 = load i8* %cppVar_1452, align 1
  %107 = trunc i8 %106 to i1
  br label %108

; <label>:108                                     ; preds = %105, %98
  %109 = phi i1 [ false, %98 ], [ %107, %105 ]
  %110 = zext i1 %109 to i8
  store i8 %110, i8* %cppVar_1453, align 1
  %111 = load i8* %cppVar_1453, align 1
  %112 = trunc i8 %111 to i1
  br i1 %112, label %113, label %126

; <label>:113                                     ; preds = %108
  %114 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %115 = load i64* %114, align 8
  %116 = icmp eq i64 %115, 4
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %cppVar_1440, align 1
  %118 = load i8* %cppVar_1440, align 1
  %119 = trunc i8 %118 to i1
  br i1 %119, label %120, label %121

; <label>:120                                     ; preds = %113
  store i64 3, i64* %cppVar_1454, align 8
  br label %124

; <label>:121                                     ; preds = %113
  %122 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %123 = load i64* %122, align 8
  store i64 %123, i64* %cppVar_1454, align 8
  br label %124

; <label>:124                                     ; preds = %121, %120
  %125 = load i64* %cppVar_1454, align 8
  store i64 %125, i64* %cppVar_1450, align 8
  br label %225

; <label>:126                                     ; preds = %108
  %127 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %128 = load i64* %127, align 8
  %129 = icmp eq i64 %128, 3
  %130 = zext i1 %129 to i8
  store i8 %130, i8* %cppVar_1458, align 1
  %131 = load i8* %cppVar_1433, align 1
  %132 = trunc i8 %131 to i1
  br i1 %132, label %133, label %136

; <label>:133                                     ; preds = %126
  %134 = load i8* %cppVar_1458, align 1
  %135 = trunc i8 %134 to i1
  br label %136

; <label>:136                                     ; preds = %133, %126
  %137 = phi i1 [ false, %126 ], [ %135, %133 ]
  %138 = zext i1 %137 to i8
  store i8 %138, i8* %cppVar_1459, align 1
  %139 = load i8* %cppVar_1459, align 1
  %140 = trunc i8 %139 to i1
  br i1 %140, label %141, label %154

; <label>:141                                     ; preds = %136
  %142 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %143 = load i64* %142, align 8
  %144 = icmp eq i64 %143, 4
  %145 = zext i1 %144 to i8
  store i8 %145, i8* %cppVar_1440, align 1
  %146 = load i8* %cppVar_1440, align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %148, label %149

; <label>:148                                     ; preds = %141
  store i64 4, i64* %cppVar_1460, align 8
  br label %152

; <label>:149                                     ; preds = %141
  %150 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %151 = load i64* %150, align 8
  store i64 %151, i64* %cppVar_1460, align 8
  br label %152

; <label>:152                                     ; preds = %149, %148
  %153 = load i64* %cppVar_1460, align 8
  store i64 %153, i64* %cppVar_1456, align 8
  br label %223

; <label>:154                                     ; preds = %136
  %155 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %156 = load i64* %155, align 8
  %157 = icmp eq i64 %156, 4
  %158 = zext i1 %157 to i8
  store i8 %158, i8* %cppVar_1464, align 1
  %159 = load i8* %cppVar_1433, align 1
  %160 = trunc i8 %159 to i1
  br i1 %160, label %161, label %164

; <label>:161                                     ; preds = %154
  %162 = load i8* %cppVar_1464, align 1
  %163 = trunc i8 %162 to i1
  br label %164

; <label>:164                                     ; preds = %161, %154
  %165 = phi i1 [ false, %154 ], [ %163, %161 ]
  %166 = zext i1 %165 to i8
  store i8 %166, i8* %cppVar_1465, align 1
  %167 = load i8* %cppVar_1465, align 1
  %168 = trunc i8 %167 to i1
  br i1 %168, label %169, label %218

; <label>:169                                     ; preds = %164
  %170 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %171 = load i64* %170, align 8
  %172 = icmp eq i64 %171, 4
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %cppVar_1440, align 1
  %174 = load i8* %cppVar_1440, align 1
  %175 = trunc i8 %174 to i1
  br i1 %175, label %176, label %213

; <label>:176                                     ; preds = %169
  %177 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %178 = load i64* %177, align 8
  %179 = add nsw i64 %178, 5
  store i64 %179, i64* %cppVar_1469, align 8
  %180 = load i64* %cppVar_1469, align 8
  %181 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %182 = load i64* %181, align 8
  %183 = and i64 %180, %182
  store i64 %183, i64* %cppVar_1469, align 8
  %184 = load i64* %cppVar_1469, align 8
  %185 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %186 = load i64* %185, align 8
  %187 = icmp eq i64 %184, %186
  %188 = zext i1 %187 to i8
  store i8 %188, i8* %cppVar_1470, align 1
  %189 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %190 = load i64* %189, align 8
  %191 = add nsw i64 %190, 5
  store i64 %191, i64* %cppVar_1472, align 8
  %192 = load i64* %cppVar_1472, align 8
  %193 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %194 = load i64* %193, align 8
  %195 = and i64 %192, %194
  store i64 %195, i64* %cppVar_1472, align 8
  %196 = load i64* %cppVar_1472, align 8
  %197 = icmp sge i64 %196, 500
  %198 = zext i1 %197 to i8
  store i8 %198, i8* %cppVar_1474, align 1
  %199 = load i8* %cppVar_1470, align 1
  %200 = trunc i8 %199 to i1
  br i1 %200, label %204, label %201

; <label>:201                                     ; preds = %176
  %202 = load i8* %cppVar_1474, align 1
  %203 = trunc i8 %202 to i1
  br label %204

; <label>:204                                     ; preds = %201, %176
  %205 = phi i1 [ true, %176 ], [ %203, %201 ]
  %206 = zext i1 %205 to i8
  store i8 %206, i8* %cppVar_1475, align 1
  %207 = load i8* %cppVar_1475, align 1
  %208 = trunc i8 %207 to i1
  br i1 %208, label %209, label %210

; <label>:209                                     ; preds = %204
  store i64 0, i64* %cppVar_1467, align 8
  br label %211

; <label>:210                                     ; preds = %204
  store i64 0, i64* %cppVar_1467, align 8
  br label %211

; <label>:211                                     ; preds = %210, %209
  %212 = load i64* %cppVar_1467, align 8
  store i64 %212, i64* %cppVar_1466, align 8
  br label %216

; <label>:213                                     ; preds = %169
  %214 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %215 = load i64* %214, align 8
  store i64 %215, i64* %cppVar_1466, align 8
  br label %216

; <label>:216                                     ; preds = %213, %211
  %217 = load i64* %cppVar_1466, align 8
  store i64 %217, i64* %cppVar_1462, align 8
  br label %221

; <label>:218                                     ; preds = %164
  %219 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %220 = load i64* %219, align 8
  store i64 %220, i64* %cppVar_1462, align 8
  br label %221

; <label>:221                                     ; preds = %218, %216
  %222 = load i64* %cppVar_1462, align 8
  store i64 %222, i64* %cppVar_1456, align 8
  br label %223

; <label>:223                                     ; preds = %221, %152
  %224 = load i64* %cppVar_1456, align 8
  store i64 %224, i64* %cppVar_1450, align 8
  br label %225

; <label>:225                                     ; preds = %223, %124
  %226 = load i64* %cppVar_1450, align 8
  store i64 %226, i64* %cppVar_1444, align 8
  br label %227

; <label>:227                                     ; preds = %225, %96
  %228 = load i64* %cppVar_1444, align 8
  store i64 %228, i64* %cppVar_1434, align 8
  br label %229

; <label>:229                                     ; preds = %227, %68
  %230 = load i64* %cppVar_1434, align 8
  store i64 %230, i64* %cppVar_1431, align 8
  br label %246

; <label>:231                                     ; preds = %21
  %232 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %233 = load i64* %232, align 8
  %234 = icmp eq i64 %233, 2
  %235 = zext i1 %234 to i8
  store i8 %235, i8* %cppVar_1478, align 1
  %236 = load i8* %cppVar_1478, align 1
  %237 = trunc i8 %236 to i1
  br i1 %237, label %238, label %241

; <label>:238                                     ; preds = %231
  %239 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %240 = load i64* %239, align 8
  store i64 %240, i64* %cppVar_1476, align 8
  br label %244

; <label>:241                                     ; preds = %231
  %242 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %243 = load i64* %242, align 8
  store i64 %243, i64* %cppVar_1476, align 8
  br label %244

; <label>:244                                     ; preds = %241, %238
  %245 = load i64* %cppVar_1476, align 8
  store i64 %245, i64* %cppVar_1431, align 8
  br label %246

; <label>:246                                     ; preds = %244, %229
  %247 = load i64* %cppVar_1431, align 8
  store i64 %247, i64* %cppVar_1427, align 8
  br label %248

; <label>:248                                     ; preds = %246, %20
  %249 = load i64* %cppVar_1427, align 8
  ret i64 %249
}

define void @_ZN13model_predict17cppUpdateFun_pow2Elllllllllll(%0* sret %agg.result, %class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_2023 = alloca i64, align 8
  %cppVar_2024 = alloca i8, align 1
  %cppVar_2026 = alloca i64, align 8
  %cppVar_2027 = alloca i8, align 1
  %cppVar_2054 = alloca i64, align 8
  %cppVar_2055 = alloca i8, align 1
  %cppVar_2029 = alloca i64, align 8
  %cppVar_2030 = alloca i8, align 1
  %cppVar_2031 = alloca i8, align 1
  %cppVar_2033 = alloca i64, align 8
  %cppVar_2034 = alloca i8, align 1
  %cppVar_2035 = alloca i8, align 1
  %cppVar_2037 = alloca i64, align 8
  %cppVar_2038 = alloca i8, align 1
  %cppVar_2039 = alloca i8, align 1
  %cppVar_2046 = alloca i64, align 8
  %cppVar_2047 = alloca i8, align 1
  %cppVar_2048 = alloca i8, align 1
  %cppVar_2050 = alloca i64, align 8
  %cppVar_2051 = alloca i8, align 1
  %cppVar_2052 = alloca i8, align 1
  %cppVar_2041 = alloca i64, align 8
  %cppVar_2042 = alloca i64, align 8
  %cppVar_2043 = alloca i64, align 8
  %cppVar_2040 = alloca i64, align 8
  %cppVar_2044 = alloca %0, align 8
  %cppVar_2049 = alloca %0, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_2045 = alloca %0, align 8
  %cppVar_2036 = alloca %0, align 8
  %cppVar_2032 = alloca %0, align 8
  %cppVar_2028 = alloca %0, align 8
  %cppVar_2053 = alloca %0, align 8
  %cppVar_2025 = alloca %0, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_predict** %1
  call void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2044)
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2049)
          to label %18 unwind label %36

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2045)
          to label %19 unwind label %39

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2036)
          to label %20 unwind label %42

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2032)
          to label %21 unwind label %45

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2028)
          to label %22 unwind label %48

; <label>:22                                      ; preds = %21
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2053)
          to label %23 unwind label %51

; <label>:23                                      ; preds = %22
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %cppVar_2025)
          to label %24 unwind label %54

; <label>:24                                      ; preds = %23
  store i1 false, i1* %15
  invoke void @_ZN8type_memIjLj8EEC1Ev(%0* %agg.result)
          to label %25 unwind label %57

; <label>:25                                      ; preds = %24
  %26 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %27 = load i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_2024, align 1
  %30 = load i8* %cppVar_2024, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %63

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %34 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %agg.result, %0* %33)
          to label %35 unwind label %60

; <label>:35                                      ; preds = %32
  br label %230

; <label>:36                                      ; preds = %251, %0
  %37 = call i8* @llvm.eh.exception() nounwind
  store i8* %37, i8** %13
  %38 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %37, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %257

; <label>:39                                      ; preds = %248, %18
  %40 = call i8* @llvm.eh.exception() nounwind
  store i8* %40, i8** %13
  %41 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %40, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %255

; <label>:42                                      ; preds = %245, %19
  %43 = call i8* @llvm.eh.exception() nounwind
  store i8* %43, i8** %13
  %44 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %43, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %252

; <label>:45                                      ; preds = %242, %20
  %46 = call i8* @llvm.eh.exception() nounwind
  store i8* %46, i8** %13
  %47 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %46, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %249

; <label>:48                                      ; preds = %239, %21
  %49 = call i8* @llvm.eh.exception() nounwind
  store i8* %49, i8** %13
  %50 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %49, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %246

; <label>:51                                      ; preds = %236, %22
  %52 = call i8* @llvm.eh.exception() nounwind
  store i8* %52, i8** %13
  %53 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %52, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %243

; <label>:54                                      ; preds = %234, %23
  %55 = call i8* @llvm.eh.exception() nounwind
  store i8* %55, i8** %13
  %56 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %55, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %240

; <label>:57                                      ; preds = %232, %24
  %58 = call i8* @llvm.eh.exception() nounwind
  store i8* %58, i8** %13
  %59 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %58, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %237

; <label>:60                                      ; preds = %227, %224, %220, %216, %206, %203, %200, %197, %194, %190, %186, %167, %149, %146, %142, %139, %123, %104, %85, %32
  %61 = call i8* @llvm.eh.exception() nounwind
  store i8* %61, i8** %13
  %62 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %61, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %agg.result)
          to label %235 unwind label %261

; <label>:63                                      ; preds = %25
  %64 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %65 = load i64* %64, align 8
  %66 = icmp eq i64 %65, 1
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %cppVar_2027, align 1
  %68 = load i8* %cppVar_2027, align 1
  %69 = trunc i8 %68 to i1
  br i1 %69, label %70, label %209

; <label>:70                                      ; preds = %63
  %71 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %72 = load i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_2030, align 1
  %75 = load i8* %cppVar_2027, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %80

; <label>:77                                      ; preds = %70
  %78 = load i8* %cppVar_2030, align 1
  %79 = trunc i8 %78 to i1
  br label %80

; <label>:80                                      ; preds = %77, %70
  %81 = phi i1 [ false, %70 ], [ %79, %77 ]
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_2031, align 1
  %83 = load i8* %cppVar_2031, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %89

; <label>:85                                      ; preds = %80
  %86 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %87 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2028, %0* %86)
          to label %88 unwind label %60

; <label>:88                                      ; preds = %85
  br label %206

; <label>:89                                      ; preds = %80
  %90 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %91 = load i64* %90, align 8
  %92 = icmp eq i64 %91, 1
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %cppVar_2034, align 1
  %94 = load i8* %cppVar_2027, align 1
  %95 = trunc i8 %94 to i1
  br i1 %95, label %96, label %99

; <label>:96                                      ; preds = %89
  %97 = load i8* %cppVar_2034, align 1
  %98 = trunc i8 %97 to i1
  br label %99

; <label>:99                                      ; preds = %96, %89
  %100 = phi i1 [ false, %89 ], [ %98, %96 ]
  %101 = zext i1 %100 to i8
  store i8 %101, i8* %cppVar_2035, align 1
  %102 = load i8* %cppVar_2035, align 1
  %103 = trunc i8 %102 to i1
  br i1 %103, label %104, label %108

; <label>:104                                     ; preds = %99
  %105 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %106 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2032, %0* %105)
          to label %107 unwind label %60

; <label>:107                                     ; preds = %104
  br label %203

; <label>:108                                     ; preds = %99
  %109 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %110 = load i64* %109, align 8
  %111 = icmp eq i64 %110, 2
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %cppVar_2038, align 1
  %113 = load i8* %cppVar_2027, align 1
  %114 = trunc i8 %113 to i1
  br i1 %114, label %115, label %118

; <label>:115                                     ; preds = %108
  %116 = load i8* %cppVar_2038, align 1
  %117 = trunc i8 %116 to i1
  br label %118

; <label>:118                                     ; preds = %115, %108
  %119 = phi i1 [ false, %108 ], [ %117, %115 ]
  %120 = zext i1 %119 to i8
  store i8 %120, i8* %cppVar_2039, align 1
  %121 = load i8* %cppVar_2039, align 1
  %122 = trunc i8 %121 to i1
  br i1 %122, label %123, label %152

; <label>:123                                     ; preds = %118
  %124 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %125 = load i64* %124, align 8
  %126 = ashr i64 %125, 0
  %127 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 44
  %128 = load i64* %127, align 8
  %129 = and i64 %126, %128
  store i64 %129, i64* %cppVar_2040, align 8
  %130 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %131 = load i64* %130, align 8
  %132 = ashr i64 %131, 0
  %133 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 44
  %134 = load i64* %133, align 8
  %135 = and i64 %132, %134
  store i64 %135, i64* %cppVar_2041, align 8
  %136 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %137 = load i64* %cppVar_2041, align 8
  %138 = invoke i64 @_ZN8type_memItLj8EE2rdEl(%1* %136, i64 %137)
          to label %139 unwind label %60

; <label>:139                                     ; preds = %123
  store i64 %138, i64* %cppVar_2042, align 8
  %140 = load i64* %cppVar_2042, align 8
  %141 = invoke zeroext i16 @_Z10to_int_expl(i64 %140)
          to label %142 unwind label %60

; <label>:142                                     ; preds = %139
  %143 = zext i16 %141 to i64
  store i64 %143, i64* %cppVar_2043, align 8
  %144 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %145 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2044, %0* %144)
          to label %146 unwind label %60

; <label>:146                                     ; preds = %142
  %147 = load i64* %cppVar_2040, align 8
  %148 = load i64* %cppVar_2043, align 8
  invoke void @_ZN8type_memIjLj8EE2wrEll(%0* %cppVar_2044, i64 %147, i64 %148)
          to label %149 unwind label %60

; <label>:149                                     ; preds = %146
  %150 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2036, %0* %cppVar_2044)
          to label %151 unwind label %60

; <label>:151                                     ; preds = %149
  br label %200

; <label>:152                                     ; preds = %118
  %153 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %154 = load i64* %153, align 8
  %155 = icmp eq i64 %154, 3
  %156 = zext i1 %155 to i8
  store i8 %156, i8* %cppVar_2047, align 1
  %157 = load i8* %cppVar_2027, align 1
  %158 = trunc i8 %157 to i1
  br i1 %158, label %159, label %162

; <label>:159                                     ; preds = %152
  %160 = load i8* %cppVar_2047, align 1
  %161 = trunc i8 %160 to i1
  br label %162

; <label>:162                                     ; preds = %159, %152
  %163 = phi i1 [ false, %152 ], [ %161, %159 ]
  %164 = zext i1 %163 to i8
  store i8 %164, i8* %cppVar_2048, align 1
  %165 = load i8* %cppVar_2048, align 1
  %166 = trunc i8 %165 to i1
  br i1 %166, label %167, label %171

; <label>:167                                     ; preds = %162
  %168 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %169 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2045, %0* %168)
          to label %170 unwind label %60

; <label>:170                                     ; preds = %167
  br label %197

; <label>:171                                     ; preds = %162
  %172 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %173 = load i64* %172, align 8
  %174 = icmp eq i64 %173, 4
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %cppVar_2051, align 1
  %176 = load i8* %cppVar_2027, align 1
  %177 = trunc i8 %176 to i1
  br i1 %177, label %178, label %181

; <label>:178                                     ; preds = %171
  %179 = load i8* %cppVar_2051, align 1
  %180 = trunc i8 %179 to i1
  br label %181

; <label>:181                                     ; preds = %178, %171
  %182 = phi i1 [ false, %171 ], [ %180, %178 ]
  %183 = zext i1 %182 to i8
  store i8 %183, i8* %cppVar_2052, align 1
  %184 = load i8* %cppVar_2052, align 1
  %185 = trunc i8 %184 to i1
  br i1 %185, label %186, label %190

; <label>:186                                     ; preds = %181
  %187 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %188 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2049, %0* %187)
          to label %189 unwind label %60

; <label>:189                                     ; preds = %186
  br label %194

; <label>:190                                     ; preds = %181
  %191 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %192 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2049, %0* %191)
          to label %193 unwind label %60

; <label>:193                                     ; preds = %190
  br label %194

; <label>:194                                     ; preds = %193, %189
  %195 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2045, %0* %cppVar_2049)
          to label %196 unwind label %60

; <label>:196                                     ; preds = %194
  br label %197

; <label>:197                                     ; preds = %196, %170
  %198 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2036, %0* %cppVar_2045)
          to label %199 unwind label %60

; <label>:199                                     ; preds = %197
  br label %200

; <label>:200                                     ; preds = %199, %151
  %201 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2032, %0* %cppVar_2036)
          to label %202 unwind label %60

; <label>:202                                     ; preds = %200
  br label %203

; <label>:203                                     ; preds = %202, %107
  %204 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2028, %0* %cppVar_2032)
          to label %205 unwind label %60

; <label>:205                                     ; preds = %203
  br label %206

; <label>:206                                     ; preds = %205, %88
  %207 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2025, %0* %cppVar_2028)
          to label %208 unwind label %60

; <label>:208                                     ; preds = %206
  br label %227

; <label>:209                                     ; preds = %63
  %210 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %211 = load i64* %210, align 8
  %212 = icmp eq i64 %211, 2
  %213 = zext i1 %212 to i8
  store i8 %213, i8* %cppVar_2055, align 1
  %214 = load i8* %cppVar_2055, align 1
  %215 = trunc i8 %214 to i1
  br i1 %215, label %216, label %220

; <label>:216                                     ; preds = %209
  %217 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %218 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2053, %0* %217)
          to label %219 unwind label %60

; <label>:219                                     ; preds = %216
  br label %224

; <label>:220                                     ; preds = %209
  %221 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 18
  %222 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2053, %0* %221)
          to label %223 unwind label %60

; <label>:223                                     ; preds = %220
  br label %224

; <label>:224                                     ; preds = %223, %219
  %225 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %cppVar_2025, %0* %cppVar_2053)
          to label %226 unwind label %60

; <label>:226                                     ; preds = %224
  br label %227

; <label>:227                                     ; preds = %226, %208
  %228 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %agg.result, %0* %cppVar_2025)
          to label %229 unwind label %60

; <label>:229                                     ; preds = %227
  br label %230

; <label>:230                                     ; preds = %229, %35
  store i1 true, i1* %15
  store i32 1, i32* %16
  %231 = load i1* %15
  br i1 %231, label %234, label %232

; <label>:232                                     ; preds = %230
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %agg.result)
          to label %233 unwind label %57

; <label>:233                                     ; preds = %232
  br label %234

; <label>:234                                     ; preds = %233, %230
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2025)
          to label %236 unwind label %54

; <label>:235                                     ; preds = %60
  br label %237

; <label>:236                                     ; preds = %234
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2053)
          to label %239 unwind label %51

; <label>:237                                     ; preds = %235, %57
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2025)
          to label %238 unwind label %261

; <label>:238                                     ; preds = %237
  br label %240

; <label>:239                                     ; preds = %236
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2028)
          to label %242 unwind label %48

; <label>:240                                     ; preds = %238, %54
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2053)
          to label %241 unwind label %261

; <label>:241                                     ; preds = %240
  br label %243

; <label>:242                                     ; preds = %239
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2032)
          to label %245 unwind label %45

; <label>:243                                     ; preds = %241, %51
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2028)
          to label %244 unwind label %261

; <label>:244                                     ; preds = %243
  br label %246

; <label>:245                                     ; preds = %242
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2036)
          to label %248 unwind label %42

; <label>:246                                     ; preds = %244, %48
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2032)
          to label %247 unwind label %261

; <label>:247                                     ; preds = %246
  br label %249

; <label>:248                                     ; preds = %245
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2045)
          to label %251 unwind label %39

; <label>:249                                     ; preds = %247, %45
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2036)
          to label %250 unwind label %261

; <label>:250                                     ; preds = %249
  br label %252

; <label>:251                                     ; preds = %248
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2049)
          to label %254 unwind label %36

; <label>:252                                     ; preds = %250, %42
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2045)
          to label %253 unwind label %261

; <label>:253                                     ; preds = %252
  br label %255

; <label>:254                                     ; preds = %251
  call void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2044)
  ret void

; <label>:255                                     ; preds = %253, %39
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2049)
          to label %256 unwind label %261

; <label>:256                                     ; preds = %255
  br label %257

; <label>:257                                     ; preds = %256, %36
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2044)
          to label %258 unwind label %261

; <label>:258                                     ; preds = %257
  br label %259

; <label>:259                                     ; preds = %258
  %260 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %260) noreturn
  unreachable

; <label>:261                                     ; preds = %257, %255, %252, %249, %246, %243, %240, %237, %60
  %262 = call i8* @llvm.eh.exception() nounwind
  %263 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %262, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIjLj8EEC1Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  call void @_ZN8type_memIjLj8EEC2Ev(%0* %2)
  ret void
}

define linkonce_odr %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %this, %0* %r) align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  store %0* %r, %0** %2, align 8
  %3 = load %0** %1
  %4 = getelementptr inbounds %0* %3, i32 0, i32 0
  %5 = load i32** %4, align 8
  %6 = bitcast i32* %5 to i8*
  %7 = load %0** %2
  %8 = getelementptr inbounds %0* %7, i32 0, i32 0
  %9 = load i32** %8, align 8
  %10 = bitcast i32* %9 to i8*
  call void @__CPROVER_array_copy(i8* %6, i8* %10)
  ret %0* %3
}

define linkonce_odr i64 @_ZN8type_memItLj8EE2rdEl(%1* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %1** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %1* %3, i32 0, i32 0
  %6 = load i16** %5, align 8
  %7 = getelementptr inbounds i16* %6, i64 %4
  %8 = load i16* %7
  %9 = zext i16 %8 to i64
  ret i64 %9
}

define linkonce_odr void @_ZN8type_memIjLj8EE2wrEll(%0* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %0** %1
  %5 = load i64* %3, align 8
  %6 = trunc i64 %5 to i32
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %0* %4, i32 0, i32 0
  %9 = load i32** %8, align 8
  %10 = getelementptr inbounds i32* %9, i64 %7
  store i32 %6, i32* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EED1Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  call void @_ZN8type_memIjLj8EED2Ev(%0* %2)
  ret void
}

define i64 @_ZN13model_predict26cppUpdateFun_predict_h_cntElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1489 = alloca i64, align 8
  %cppVar_1481 = alloca i64, align 8
  %cppVar_1482 = alloca i8, align 1
  %cppVar_1493 = alloca i64, align 8
  %cppVar_1494 = alloca i8, align 1
  %cppVar_1520 = alloca i64, align 8
  %cppVar_1521 = alloca i8, align 1
  %cppVar_1484 = alloca i8, align 1
  %cppVar_1486 = alloca i64, align 8
  %cppVar_1487 = alloca i64, align 8
  %cppVar_1488 = alloca i8, align 1
  %cppVar_1490 = alloca i64, align 8
  %cppVar_1491 = alloca i64, align 8
  %cppVar_1485 = alloca i64, align 8
  %cppVar_1483 = alloca i64, align 8
  %cppVar_1500 = alloca i8, align 1
  %cppVar_1496 = alloca i64, align 8
  %cppVar_1497 = alloca i8, align 1
  %cppVar_1498 = alloca i8, align 1
  %cppVar_1504 = alloca i64, align 8
  %cppVar_1505 = alloca i8, align 1
  %cppVar_1506 = alloca i8, align 1
  %cppVar_1508 = alloca i64, align 8
  %cppVar_1509 = alloca i8, align 1
  %cppVar_1510 = alloca i8, align 1
  %cppVar_1512 = alloca i64, align 8
  %cppVar_1513 = alloca i8, align 1
  %cppVar_1514 = alloca i8, align 1
  %cppVar_1516 = alloca i64, align 8
  %cppVar_1517 = alloca i8, align 1
  %cppVar_1518 = alloca i8, align 1
  %cppVar_1501 = alloca i64, align 8
  %cppVar_1502 = alloca i64, align 8
  %cppVar_1499 = alloca i64, align 8
  %cppVar_1515 = alloca i64, align 8
  %cppVar_1511 = alloca i64, align 8
  %cppVar_1507 = alloca i64, align 8
  %cppVar_1503 = alloca i64, align 8
  %cppVar_1495 = alloca i64, align 8
  %cppVar_1519 = alloca i64, align 8
  %cppVar_1492 = alloca i64, align 8
  %cppVar_1480 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1482, align 1
  %18 = load i8* %cppVar_1482, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %61

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %cppVar_1484, align 1
  %27 = load i8* %cppVar_1484, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %29, label %56

; <label>:29                                      ; preds = %20
  %30 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 11
  %31 = load i64* %30, align 8
  %32 = sub nsw i64 %31, 1
  store i64 %32, i64* %cppVar_1487, align 8
  %33 = load i64* %cppVar_1487, align 8
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %35 = load i64* %34, align 8
  %36 = and i64 %33, %35
  store i64 %36, i64* %cppVar_1487, align 8
  %37 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %38 = load i64* %37, align 8
  %39 = load i64* %cppVar_1487, align 8
  %40 = icmp eq i64 %38, %39
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %cppVar_1488, align 1
  %42 = load i8* %cppVar_1488, align 1
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %29
  store i64 0, i64* %cppVar_1485, align 8
  br label %54

; <label>:45                                      ; preds = %29
  %46 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %47 = load i64* %46, align 8
  %48 = add nsw i64 %47, 1
  store i64 %48, i64* %cppVar_1491, align 8
  %49 = load i64* %cppVar_1491, align 8
  %50 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %51 = load i64* %50, align 8
  %52 = and i64 %49, %51
  store i64 %52, i64* %cppVar_1491, align 8
  %53 = load i64* %cppVar_1491, align 8
  store i64 %53, i64* %cppVar_1485, align 8
  br label %54

; <label>:54                                      ; preds = %45, %44
  %55 = load i64* %cppVar_1485, align 8
  store i64 %55, i64* %cppVar_1483, align 8
  br label %59

; <label>:56                                      ; preds = %20
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %58 = load i64* %57, align 8
  store i64 %58, i64* %cppVar_1483, align 8
  br label %59

; <label>:59                                      ; preds = %56, %54
  %60 = load i64* %cppVar_1483, align 8
  store i64 %60, i64* %cppVar_1480, align 8
  br label %206

; <label>:61                                      ; preds = %0
  %62 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %63 = load i64* %62, align 8
  %64 = icmp eq i64 %63, 1
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %cppVar_1494, align 1
  %66 = load i8* %cppVar_1494, align 1
  %67 = trunc i8 %66 to i1
  br i1 %67, label %68, label %189

; <label>:68                                      ; preds = %61
  %69 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %70 = load i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %cppVar_1497, align 1
  %73 = load i8* %cppVar_1494, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %78

; <label>:75                                      ; preds = %68
  %76 = load i8* %cppVar_1497, align 1
  %77 = trunc i8 %76 to i1
  br label %78

; <label>:78                                      ; preds = %75, %68
  %79 = phi i1 [ false, %68 ], [ %77, %75 ]
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %cppVar_1498, align 1
  %81 = load i8* %cppVar_1498, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %104

; <label>:83                                      ; preds = %78
  %84 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %85 = load i64* %84, align 8
  %86 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 11
  %87 = load i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %cppVar_1500, align 1
  %90 = load i8* %cppVar_1500, align 1
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %83
  store i64 0, i64* %cppVar_1499, align 8
  br label %102

; <label>:93                                      ; preds = %83
  %94 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %95 = load i64* %94, align 8
  %96 = add nsw i64 %95, 1
  store i64 %96, i64* %cppVar_1502, align 8
  %97 = load i64* %cppVar_1502, align 8
  %98 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %99 = load i64* %98, align 8
  %100 = and i64 %97, %99
  store i64 %100, i64* %cppVar_1502, align 8
  %101 = load i64* %cppVar_1502, align 8
  store i64 %101, i64* %cppVar_1499, align 8
  br label %102

; <label>:102                                     ; preds = %93, %92
  %103 = load i64* %cppVar_1499, align 8
  store i64 %103, i64* %cppVar_1495, align 8
  br label %187

; <label>:104                                     ; preds = %78
  %105 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %106 = load i64* %105, align 8
  %107 = icmp eq i64 %106, 1
  %108 = zext i1 %107 to i8
  store i8 %108, i8* %cppVar_1505, align 1
  %109 = load i8* %cppVar_1494, align 1
  %110 = trunc i8 %109 to i1
  br i1 %110, label %111, label %114

; <label>:111                                     ; preds = %104
  %112 = load i8* %cppVar_1505, align 1
  %113 = trunc i8 %112 to i1
  br label %114

; <label>:114                                     ; preds = %111, %104
  %115 = phi i1 [ false, %104 ], [ %113, %111 ]
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %cppVar_1506, align 1
  %117 = load i8* %cppVar_1506, align 1
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %122

; <label>:119                                     ; preds = %114
  %120 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %121 = load i64* %120, align 8
  store i64 %121, i64* %cppVar_1503, align 8
  br label %185

; <label>:122                                     ; preds = %114
  %123 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %124 = load i64* %123, align 8
  %125 = icmp eq i64 %124, 2
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %cppVar_1509, align 1
  %127 = load i8* %cppVar_1494, align 1
  %128 = trunc i8 %127 to i1
  br i1 %128, label %129, label %132

; <label>:129                                     ; preds = %122
  %130 = load i8* %cppVar_1509, align 1
  %131 = trunc i8 %130 to i1
  br label %132

; <label>:132                                     ; preds = %129, %122
  %133 = phi i1 [ false, %122 ], [ %131, %129 ]
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %cppVar_1510, align 1
  %135 = load i8* %cppVar_1510, align 1
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %140

; <label>:137                                     ; preds = %132
  %138 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %139 = load i64* %138, align 8
  store i64 %139, i64* %cppVar_1507, align 8
  br label %183

; <label>:140                                     ; preds = %132
  %141 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %142 = load i64* %141, align 8
  %143 = icmp eq i64 %142, 3
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %cppVar_1513, align 1
  %145 = load i8* %cppVar_1494, align 1
  %146 = trunc i8 %145 to i1
  br i1 %146, label %147, label %150

; <label>:147                                     ; preds = %140
  %148 = load i8* %cppVar_1513, align 1
  %149 = trunc i8 %148 to i1
  br label %150

; <label>:150                                     ; preds = %147, %140
  %151 = phi i1 [ false, %140 ], [ %149, %147 ]
  %152 = zext i1 %151 to i8
  store i8 %152, i8* %cppVar_1514, align 1
  %153 = load i8* %cppVar_1514, align 1
  %154 = trunc i8 %153 to i1
  br i1 %154, label %155, label %158

; <label>:155                                     ; preds = %150
  %156 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %157 = load i64* %156, align 8
  store i64 %157, i64* %cppVar_1511, align 8
  br label %181

; <label>:158                                     ; preds = %150
  %159 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %160 = load i64* %159, align 8
  %161 = icmp eq i64 %160, 4
  %162 = zext i1 %161 to i8
  store i8 %162, i8* %cppVar_1517, align 1
  %163 = load i8* %cppVar_1494, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %165, label %168

; <label>:165                                     ; preds = %158
  %166 = load i8* %cppVar_1517, align 1
  %167 = trunc i8 %166 to i1
  br label %168

; <label>:168                                     ; preds = %165, %158
  %169 = phi i1 [ false, %158 ], [ %167, %165 ]
  %170 = zext i1 %169 to i8
  store i8 %170, i8* %cppVar_1518, align 1
  %171 = load i8* %cppVar_1518, align 1
  %172 = trunc i8 %171 to i1
  br i1 %172, label %173, label %176

; <label>:173                                     ; preds = %168
  %174 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %175 = load i64* %174, align 8
  store i64 %175, i64* %cppVar_1515, align 8
  br label %179

; <label>:176                                     ; preds = %168
  %177 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %178 = load i64* %177, align 8
  store i64 %178, i64* %cppVar_1515, align 8
  br label %179

; <label>:179                                     ; preds = %176, %173
  %180 = load i64* %cppVar_1515, align 8
  store i64 %180, i64* %cppVar_1511, align 8
  br label %181

; <label>:181                                     ; preds = %179, %155
  %182 = load i64* %cppVar_1511, align 8
  store i64 %182, i64* %cppVar_1507, align 8
  br label %183

; <label>:183                                     ; preds = %181, %137
  %184 = load i64* %cppVar_1507, align 8
  store i64 %184, i64* %cppVar_1503, align 8
  br label %185

; <label>:185                                     ; preds = %183, %119
  %186 = load i64* %cppVar_1503, align 8
  store i64 %186, i64* %cppVar_1495, align 8
  br label %187

; <label>:187                                     ; preds = %185, %102
  %188 = load i64* %cppVar_1495, align 8
  store i64 %188, i64* %cppVar_1492, align 8
  br label %204

; <label>:189                                     ; preds = %61
  %190 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %191 = load i64* %190, align 8
  %192 = icmp eq i64 %191, 2
  %193 = zext i1 %192 to i8
  store i8 %193, i8* %cppVar_1521, align 1
  %194 = load i8* %cppVar_1521, align 1
  %195 = trunc i8 %194 to i1
  br i1 %195, label %196, label %199

; <label>:196                                     ; preds = %189
  %197 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %198 = load i64* %197, align 8
  store i64 %198, i64* %cppVar_1519, align 8
  br label %202

; <label>:199                                     ; preds = %189
  %200 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %201 = load i64* %200, align 8
  store i64 %201, i64* %cppVar_1519, align 8
  br label %202

; <label>:202                                     ; preds = %199, %196
  %203 = load i64* %cppVar_1519, align 8
  store i64 %203, i64* %cppVar_1492, align 8
  br label %204

; <label>:204                                     ; preds = %202, %187
  %205 = load i64* %cppVar_1492, align 8
  store i64 %205, i64* %cppVar_1480, align 8
  br label %206

; <label>:206                                     ; preds = %204, %59
  %207 = load i64* %cppVar_1480, align 8
  ret i64 %207
}

define i64 @_ZN13model_predict31cppUpdateFun_predict_input_doneElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1538 = alloca i64, align 8
  %cppVar_1524 = alloca i64, align 8
  %cppVar_1525 = alloca i8, align 1
  %cppVar_1527 = alloca i64, align 8
  %cppVar_1528 = alloca i8, align 1
  %cppVar_1530 = alloca i64, align 8
  %cppVar_1531 = alloca i8, align 1
  %cppVar_1533 = alloca i64, align 8
  %cppVar_1534 = alloca i8, align 1
  %cppVar_1535 = alloca i64, align 8
  %cppVar_1536 = alloca i8, align 1
  %cppVar_1537 = alloca i8, align 1
  %cppVar_1532 = alloca i64, align 8
  %cppVar_1529 = alloca i64, align 8
  %cppVar_1526 = alloca i64, align 8
  %cppVar_1523 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1525, align 1
  %18 = load i8* %cppVar_1525, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 20
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1523, align 8
  br label %72

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1528, align 1
  %28 = load i8* %cppVar_1528, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 20
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1526, align 8
  br label %70

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1531, align 1
  %38 = load i8* %cppVar_1531, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %65

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %42 = load i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %cppVar_1534, align 1
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %46 = load i64* %45, align 8
  %47 = icmp eq i64 %46, 1
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %cppVar_1536, align 1
  %49 = load i8* %cppVar_1534, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %40
  %52 = load i8* %cppVar_1536, align 1
  %53 = trunc i8 %52 to i1
  br label %54

; <label>:54                                      ; preds = %51, %40
  %55 = phi i1 [ false, %40 ], [ %53, %51 ]
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_1537, align 1
  %57 = load i8* %cppVar_1537, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %60

; <label>:59                                      ; preds = %54
  store i64 0, i64* %cppVar_1532, align 8
  br label %63

; <label>:60                                      ; preds = %54
  %61 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 20
  %62 = load i64* %61, align 8
  store i64 %62, i64* %cppVar_1532, align 8
  br label %63

; <label>:63                                      ; preds = %60, %59
  %64 = load i64* %cppVar_1532, align 8
  store i64 %64, i64* %cppVar_1529, align 8
  br label %68

; <label>:65                                      ; preds = %33
  %66 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 20
  %67 = load i64* %66, align 8
  store i64 %67, i64* %cppVar_1529, align 8
  br label %68

; <label>:68                                      ; preds = %65, %63
  %69 = load i64* %cppVar_1529, align 8
  store i64 %69, i64* %cppVar_1526, align 8
  br label %70

; <label>:70                                      ; preds = %68, %30
  %71 = load i64* %cppVar_1526, align 8
  store i64 %71, i64* %cppVar_1523, align 8
  br label %72

; <label>:72                                      ; preds = %70, %20
  %73 = load i64* %cppVar_1523, align 8
  ret i64 %73
}

define i64 @_ZN13model_predict24cppUpdateFun_predict_maxElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1556 = alloca i64, align 8
  %cppVar_1541 = alloca i64, align 8
  %cppVar_1542 = alloca i8, align 1
  %cppVar_1544 = alloca i64, align 8
  %cppVar_1545 = alloca i8, align 1
  %cppVar_1599 = alloca i64, align 8
  %cppVar_1600 = alloca i8, align 1
  %cppVar_1562 = alloca i64, align 8
  %cppVar_1563 = alloca i64, align 8
  %cppVar_1564 = alloca i64, align 8
  %cppVar_1551 = alloca i8, align 1
  %cppVar_1547 = alloca i64, align 8
  %cppVar_1548 = alloca i8, align 1
  %cppVar_1549 = alloca i8, align 1
  %cppVar_1578 = alloca i64, align 8
  %cppVar_1579 = alloca i8, align 1
  %cppVar_1580 = alloca i8, align 1
  %cppVar_1587 = alloca i64, align 8
  %cppVar_1588 = alloca i8, align 1
  %cppVar_1589 = alloca i8, align 1
  %cppVar_1591 = alloca i64, align 8
  %cppVar_1592 = alloca i8, align 1
  %cppVar_1593 = alloca i8, align 1
  %cppVar_1595 = alloca i64, align 8
  %cppVar_1596 = alloca i8, align 1
  %cppVar_1597 = alloca i8, align 1
  %cppVar_1554 = alloca i64, align 8
  %cppVar_1555 = alloca i8, align 1
  %cppVar_1553 = alloca i64, align 8
  %cppVar_1558 = alloca i64, align 8
  %cppVar_1559 = alloca i64, align 8
  %cppVar_1560 = alloca i64, align 8
  %cppVar_1561 = alloca i8, align 1
  %cppVar_1565 = alloca i64, align 8
  %cppVar_1566 = alloca i64, align 8
  %cppVar_1567 = alloca i64, align 8
  %cppVar_1568 = alloca i64, align 8
  %cppVar_1569 = alloca i64, align 8
  %cppVar_1557 = alloca i64, align 8
  %cppVar_1570 = alloca i64, align 8
  %cppVar_1572 = alloca i64, align 8
  %cppVar_1573 = alloca i8, align 1
  %cppVar_1574 = alloca i64, align 8
  %cppVar_1575 = alloca i64, align 8
  %cppVar_1571 = alloca i64, align 8
  %cppVar_1576 = alloca i8, align 1
  %cppVar_1552 = alloca i64, align 8
  %cppVar_1550 = alloca i64, align 8
  %cppVar_1584 = alloca i64, align 8
  %cppVar_1582 = alloca i64, align 8
  %cppVar_1583 = alloca i8, align 1
  %cppVar_1585 = alloca i64, align 8
  %cppVar_1581 = alloca i64, align 8
  %cppVar_1594 = alloca i64, align 8
  %cppVar_1590 = alloca i64, align 8
  %cppVar_1586 = alloca i64, align 8
  %cppVar_1577 = alloca i64, align 8
  %cppVar_1546 = alloca i64, align 8
  %cppVar_1598 = alloca i64, align 8
  %cppVar_1543 = alloca i64, align 8
  %cppVar_1540 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1542, align 1
  %18 = load i8* %cppVar_1542, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1540, align 8
  br label %316

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1545, align 1
  %28 = load i8* %cppVar_1545, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %299

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %32 = load i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %cppVar_1548, align 1
  %35 = load i8* %cppVar_1545, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %40

; <label>:37                                      ; preds = %30
  %38 = load i8* %cppVar_1548, align 1
  %39 = trunc i8 %38 to i1
  br label %40

; <label>:40                                      ; preds = %37, %30
  %41 = phi i1 [ false, %30 ], [ %39, %37 ]
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %cppVar_1549, align 1
  %43 = load i8* %cppVar_1549, align 1
  %44 = trunc i8 %43 to i1
  br i1 %44, label %45, label %196

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %47 = load i64* %46, align 8
  %48 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 11
  %49 = load i64* %48, align 8
  %50 = icmp eq i64 %47, %49
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %cppVar_1551, align 1
  %52 = load i8* %cppVar_1551, align 1
  %53 = trunc i8 %52 to i1
  br i1 %53, label %54, label %191

; <label>:54                                      ; preds = %45
  %55 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %56 = load i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  %58 = zext i1 %57 to i8
  store i8 %58, i8* %cppVar_1555, align 1
  %59 = load i8* %cppVar_1555, align 1
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %54
  store i64 0, i64* %cppVar_1553, align 8
  br label %65

; <label>:62                                      ; preds = %54
  %63 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %64 = load i64* %63, align 8
  store i64 %64, i64* %cppVar_1553, align 8
  br label %65

; <label>:65                                      ; preds = %62, %61
  %66 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %67 = load i64* %66, align 8
  %68 = ashr i64 %67, 0
  %69 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 48
  %70 = load i64* %69, align 8
  %71 = and i64 %68, %70
  store i64 %71, i64* %cppVar_1558, align 8
  %72 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 6
  %73 = load i64* %cppVar_1558, align 8
  %74 = call i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %72, i64 %73)
  store i64 %74, i64* %cppVar_1559, align 8
  %75 = load i64* %cppVar_1559, align 8
  %76 = icmp eq i64 %75, 1
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %cppVar_1561, align 1
  %78 = load i8* %cppVar_1561, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %132

; <label>:80                                      ; preds = %65
  %81 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %82 = load i64* %81, align 8
  %83 = mul nsw i64 101, %82
  store i64 %83, i64* %cppVar_1563, align 8
  %84 = load i64* %cppVar_1563, align 8
  %85 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %86 = load i64* %85, align 8
  %87 = and i64 %84, %86
  store i64 %87, i64* %cppVar_1563, align 8
  %88 = load i64* %cppVar_1563, align 8
  %89 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %90 = load i64* %89, align 8
  %91 = add nsw i64 %88, %90
  store i64 %91, i64* %cppVar_1564, align 8
  %92 = load i64* %cppVar_1564, align 8
  %93 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %94 = load i64* %93, align 8
  %95 = and i64 %92, %94
  store i64 %95, i64* %cppVar_1564, align 8
  %96 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 4
  %97 = load i64* %cppVar_1564, align 8
  %98 = call i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %96, i64 %97)
  store i64 %98, i64* %cppVar_1565, align 8
  %99 = load i64* %cppVar_1565, align 8
  %100 = ashr i64 %99, 1
  %101 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 48
  %102 = load i64* %101, align 8
  %103 = and i64 %100, %102
  store i64 %103, i64* %cppVar_1566, align 8
  %104 = load i64* %cppVar_1566, align 8
  %105 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 53
  %106 = load i64* %105, align 8
  %107 = and i64 %104, %106
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %114

; <label>:109                                     ; preds = %80
  %110 = load i64* %cppVar_1566, align 8
  %111 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 55
  %112 = load i64* %111, align 8
  %113 = or i64 %110, %112
  br label %116

; <label>:114                                     ; preds = %80
  %115 = load i64* %cppVar_1566, align 8
  br label %116

; <label>:116                                     ; preds = %114, %109
  %117 = phi i64 [ %113, %109 ], [ %115, %114 ]
  store i64 %117, i64* %cppVar_1567, align 8
  %118 = load i64* %cppVar_1565, align 8
  %119 = ashr i64 %118, 0
  %120 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 40
  %121 = load i64* %120, align 8
  %122 = and i64 %119, %121
  store i64 %122, i64* %cppVar_1568, align 8
  %123 = load i64* %cppVar_1567, align 8
  %124 = shl i64 %123, 1
  %125 = load i64* %cppVar_1568, align 8
  %126 = or i64 %124, %125
  store i64 %126, i64* %cppVar_1569, align 8
  %127 = load i64* %cppVar_1569, align 8
  %128 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %129 = load i64* %128, align 8
  %130 = and i64 %127, %129
  store i64 %130, i64* %cppVar_1569, align 8
  %131 = load i64* %cppVar_1569, align 8
  store i64 %131, i64* %cppVar_1557, align 8
  br label %133

; <label>:132                                     ; preds = %65
  store i64 0, i64* %cppVar_1557, align 8
  br label %133

; <label>:133                                     ; preds = %132, %116
  %134 = load i64* %cppVar_1553, align 8
  %135 = load i64* %cppVar_1557, align 8
  %136 = add nsw i64 %134, %135
  store i64 %136, i64* %cppVar_1570, align 8
  %137 = load i64* %cppVar_1570, align 8
  %138 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %139 = load i64* %138, align 8
  %140 = and i64 %137, %139
  store i64 %140, i64* %cppVar_1570, align 8
  %141 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %142 = load i64* %141, align 8
  %143 = icmp eq i64 %142, 0
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %cppVar_1573, align 1
  %145 = load i8* %cppVar_1573, align 1
  %146 = trunc i8 %145 to i1
  br i1 %146, label %147, label %149

; <label>:147                                     ; preds = %133
  store i64 -1000, i64* %cppVar_1575, align 8
  %148 = load i64* %cppVar_1575, align 8
  store i64 %148, i64* %cppVar_1571, align 8
  br label %152

; <label>:149                                     ; preds = %133
  %150 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %151 = load i64* %150, align 8
  store i64 %151, i64* %cppVar_1571, align 8
  br label %152

; <label>:152                                     ; preds = %149, %147
  %153 = load i64* %cppVar_1570, align 8
  %154 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 52
  %155 = load i64* %154, align 8
  %156 = and i64 %153, %155
  %157 = icmp ne i64 %156, 0
  br i1 %157, label %158, label %163

; <label>:158                                     ; preds = %152
  %159 = load i64* %cppVar_1570, align 8
  %160 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 54
  %161 = load i64* %160, align 8
  %162 = or i64 %159, %161
  br label %165

; <label>:163                                     ; preds = %152
  %164 = load i64* %cppVar_1570, align 8
  br label %165

; <label>:165                                     ; preds = %163, %158
  %166 = phi i64 [ %162, %158 ], [ %164, %163 ]
  %167 = load i64* %cppVar_1571, align 8
  %168 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 52
  %169 = load i64* %168, align 8
  %170 = and i64 %167, %169
  %171 = icmp ne i64 %170, 0
  br i1 %171, label %172, label %177

; <label>:172                                     ; preds = %165
  %173 = load i64* %cppVar_1571, align 8
  %174 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 54
  %175 = load i64* %174, align 8
  %176 = or i64 %173, %175
  br label %179

; <label>:177                                     ; preds = %165
  %178 = load i64* %cppVar_1571, align 8
  br label %179

; <label>:179                                     ; preds = %177, %172
  %180 = phi i64 [ %176, %172 ], [ %178, %177 ]
  %181 = icmp sgt i64 %166, %180
  %182 = zext i1 %181 to i8
  store i8 %182, i8* %cppVar_1576, align 1
  %183 = load i8* %cppVar_1576, align 1
  %184 = trunc i8 %183 to i1
  br i1 %184, label %185, label %187

; <label>:185                                     ; preds = %179
  %186 = load i64* %cppVar_1570, align 8
  store i64 %186, i64* %cppVar_1552, align 8
  br label %189

; <label>:187                                     ; preds = %179
  %188 = load i64* %cppVar_1571, align 8
  store i64 %188, i64* %cppVar_1552, align 8
  br label %189

; <label>:189                                     ; preds = %187, %185
  %190 = load i64* %cppVar_1552, align 8
  store i64 %190, i64* %cppVar_1550, align 8
  br label %194

; <label>:191                                     ; preds = %45
  %192 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %193 = load i64* %192, align 8
  store i64 %193, i64* %cppVar_1550, align 8
  br label %194

; <label>:194                                     ; preds = %191, %189
  %195 = load i64* %cppVar_1550, align 8
  store i64 %195, i64* %cppVar_1546, align 8
  br label %297

; <label>:196                                     ; preds = %40
  %197 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %198 = load i64* %197, align 8
  %199 = icmp eq i64 %198, 1
  %200 = zext i1 %199 to i8
  store i8 %200, i8* %cppVar_1579, align 1
  %201 = load i8* %cppVar_1545, align 1
  %202 = trunc i8 %201 to i1
  br i1 %202, label %203, label %206

; <label>:203                                     ; preds = %196
  %204 = load i8* %cppVar_1579, align 1
  %205 = trunc i8 %204 to i1
  br label %206

; <label>:206                                     ; preds = %203, %196
  %207 = phi i1 [ false, %196 ], [ %205, %203 ]
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %cppVar_1580, align 1
  %209 = load i8* %cppVar_1580, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %211, label %232

; <label>:211                                     ; preds = %206
  %212 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %213 = load i64* %212, align 8
  %214 = icmp eq i64 %213, 0
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %cppVar_1583, align 1
  %216 = load i8* %cppVar_1583, align 1
  %217 = trunc i8 %216 to i1
  br i1 %217, label %218, label %227

; <label>:218                                     ; preds = %211
  %219 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %220 = load i64* %219, align 8
  %221 = sub nsw i64 %220, 62
  store i64 %221, i64* %cppVar_1585, align 8
  %222 = load i64* %cppVar_1585, align 8
  %223 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %224 = load i64* %223, align 8
  %225 = and i64 %222, %224
  store i64 %225, i64* %cppVar_1585, align 8
  %226 = load i64* %cppVar_1585, align 8
  store i64 %226, i64* %cppVar_1581, align 8
  br label %230

; <label>:227                                     ; preds = %211
  %228 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %229 = load i64* %228, align 8
  store i64 %229, i64* %cppVar_1581, align 8
  br label %230

; <label>:230                                     ; preds = %227, %218
  %231 = load i64* %cppVar_1581, align 8
  store i64 %231, i64* %cppVar_1577, align 8
  br label %295

; <label>:232                                     ; preds = %206
  %233 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %234 = load i64* %233, align 8
  %235 = icmp eq i64 %234, 2
  %236 = zext i1 %235 to i8
  store i8 %236, i8* %cppVar_1588, align 1
  %237 = load i8* %cppVar_1545, align 1
  %238 = trunc i8 %237 to i1
  br i1 %238, label %239, label %242

; <label>:239                                     ; preds = %232
  %240 = load i8* %cppVar_1588, align 1
  %241 = trunc i8 %240 to i1
  br label %242

; <label>:242                                     ; preds = %239, %232
  %243 = phi i1 [ false, %232 ], [ %241, %239 ]
  %244 = zext i1 %243 to i8
  store i8 %244, i8* %cppVar_1589, align 1
  %245 = load i8* %cppVar_1589, align 1
  %246 = trunc i8 %245 to i1
  br i1 %246, label %247, label %250

; <label>:247                                     ; preds = %242
  %248 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %249 = load i64* %248, align 8
  store i64 %249, i64* %cppVar_1586, align 8
  br label %293

; <label>:250                                     ; preds = %242
  %251 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %252 = load i64* %251, align 8
  %253 = icmp eq i64 %252, 3
  %254 = zext i1 %253 to i8
  store i8 %254, i8* %cppVar_1592, align 1
  %255 = load i8* %cppVar_1545, align 1
  %256 = trunc i8 %255 to i1
  br i1 %256, label %257, label %260

; <label>:257                                     ; preds = %250
  %258 = load i8* %cppVar_1592, align 1
  %259 = trunc i8 %258 to i1
  br label %260

; <label>:260                                     ; preds = %257, %250
  %261 = phi i1 [ false, %250 ], [ %259, %257 ]
  %262 = zext i1 %261 to i8
  store i8 %262, i8* %cppVar_1593, align 1
  %263 = load i8* %cppVar_1593, align 1
  %264 = trunc i8 %263 to i1
  br i1 %264, label %265, label %268

; <label>:265                                     ; preds = %260
  %266 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %267 = load i64* %266, align 8
  store i64 %267, i64* %cppVar_1590, align 8
  br label %291

; <label>:268                                     ; preds = %260
  %269 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %270 = load i64* %269, align 8
  %271 = icmp eq i64 %270, 4
  %272 = zext i1 %271 to i8
  store i8 %272, i8* %cppVar_1596, align 1
  %273 = load i8* %cppVar_1545, align 1
  %274 = trunc i8 %273 to i1
  br i1 %274, label %275, label %278

; <label>:275                                     ; preds = %268
  %276 = load i8* %cppVar_1596, align 1
  %277 = trunc i8 %276 to i1
  br label %278

; <label>:278                                     ; preds = %275, %268
  %279 = phi i1 [ false, %268 ], [ %277, %275 ]
  %280 = zext i1 %279 to i8
  store i8 %280, i8* %cppVar_1597, align 1
  %281 = load i8* %cppVar_1597, align 1
  %282 = trunc i8 %281 to i1
  br i1 %282, label %283, label %286

; <label>:283                                     ; preds = %278
  %284 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %285 = load i64* %284, align 8
  store i64 %285, i64* %cppVar_1594, align 8
  br label %289

; <label>:286                                     ; preds = %278
  %287 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %288 = load i64* %287, align 8
  store i64 %288, i64* %cppVar_1594, align 8
  br label %289

; <label>:289                                     ; preds = %286, %283
  %290 = load i64* %cppVar_1594, align 8
  store i64 %290, i64* %cppVar_1590, align 8
  br label %291

; <label>:291                                     ; preds = %289, %265
  %292 = load i64* %cppVar_1590, align 8
  store i64 %292, i64* %cppVar_1586, align 8
  br label %293

; <label>:293                                     ; preds = %291, %247
  %294 = load i64* %cppVar_1586, align 8
  store i64 %294, i64* %cppVar_1577, align 8
  br label %295

; <label>:295                                     ; preds = %293, %230
  %296 = load i64* %cppVar_1577, align 8
  store i64 %296, i64* %cppVar_1546, align 8
  br label %297

; <label>:297                                     ; preds = %295, %194
  %298 = load i64* %cppVar_1546, align 8
  store i64 %298, i64* %cppVar_1543, align 8
  br label %314

; <label>:299                                     ; preds = %23
  %300 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %301 = load i64* %300, align 8
  %302 = icmp eq i64 %301, 2
  %303 = zext i1 %302 to i8
  store i8 %303, i8* %cppVar_1600, align 1
  %304 = load i8* %cppVar_1600, align 1
  %305 = trunc i8 %304 to i1
  br i1 %305, label %306, label %309

; <label>:306                                     ; preds = %299
  %307 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %308 = load i64* %307, align 8
  store i64 %308, i64* %cppVar_1598, align 8
  br label %312

; <label>:309                                     ; preds = %299
  %310 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 21
  %311 = load i64* %310, align 8
  store i64 %311, i64* %cppVar_1598, align 8
  br label %312

; <label>:312                                     ; preds = %309, %306
  %313 = load i64* %cppVar_1598, align 8
  store i64 %313, i64* %cppVar_1543, align 8
  br label %314

; <label>:314                                     ; preds = %312, %297
  %315 = load i64* %cppVar_1543, align 8
  store i64 %315, i64* %cppVar_1540, align 8
  br label %316

; <label>:316                                     ; preds = %314, %20
  %317 = load i64* %cppVar_1540, align 8
  ret i64 %317
}

define linkonce_odr i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i64
  ret i64 %10
}

define void @_ZN13model_predict27cppUpdateFun_predict_resultElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i1
  %cppVar_2058 = alloca i64, align 8
  %cppVar_2059 = alloca i8, align 1
  %cppVar_2061 = alloca i64, align 8
  %cppVar_2062 = alloca i8, align 1
  %cppVar_2063 = alloca i64, align 8
  %cppVar_2064 = alloca %class.SysCArray1D, align 8
  %14 = alloca i8*
  %15 = alloca i32
  %cppVar_2060 = alloca %class.SysCArray1D, align 8
  %16 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_predict** %1
  store i1 false, i1* %13
  call void @_ZN8type_memIhLj128EEC1Ev(%class.SysCArray1D* %agg.result)
  invoke void @_ZN8type_memIhLj128EEC1Ev(%class.SysCArray1D* %cppVar_2064)
          to label %18 unwind label %49

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIhLj128EEC1Ev(%class.SysCArray1D* %cppVar_2060)
          to label %19 unwind label %52

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %21 = load i64* %20, align 8
  %22 = icmp eq i64 %21, 3
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %cppVar_2059, align 1
  %24 = load i8* %cppVar_2059, align 1
  %25 = trunc i8 %24 to i1
  br i1 %25, label %26, label %65

; <label>:26                                      ; preds = %19
  %27 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %28 = load i64* %27, align 8
  %29 = icmp eq i64 %28, 4
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %cppVar_2062, align 1
  %31 = load i8* %cppVar_2062, align 1
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %58

; <label>:33                                      ; preds = %26
  %34 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 0
  %35 = load i64* %34, align 8
  %36 = ashr i64 %35, 0
  %37 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 48
  %38 = load i64* %37, align 8
  %39 = and i64 %36, %38
  store i64 %39, i64* %cppVar_2063, align 8
  %40 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 22
  %41 = invoke %class.SysCArray1D* @_ZN8type_memIhLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2064, %class.SysCArray1D* %40)
          to label %42 unwind label %55

; <label>:42                                      ; preds = %33
  %43 = load i64* %cppVar_2063, align 8
  %44 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 27
  %45 = load i64* %44, align 8
  invoke void @_ZN8type_memIhLj128EE2wrEll(%class.SysCArray1D* %cppVar_2064, i64 %43, i64 %45)
          to label %46 unwind label %55

; <label>:46                                      ; preds = %42
  %47 = invoke %class.SysCArray1D* @_ZN8type_memIhLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2060, %class.SysCArray1D* %cppVar_2064)
          to label %48 unwind label %55

; <label>:48                                      ; preds = %46
  br label %62

; <label>:49                                      ; preds = %70, %0
  %50 = call i8* @llvm.eh.exception() nounwind
  store i8* %50, i8** %14
  %51 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %50, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %15
  br label %78

; <label>:52                                      ; preds = %69, %18
  %53 = call i8* @llvm.eh.exception() nounwind
  store i8* %53, i8** %14
  %54 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %53, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %15
  br label %74

; <label>:55                                      ; preds = %65, %62, %58, %46, %42, %33
  %56 = call i8* @llvm.eh.exception() nounwind
  store i8* %56, i8** %14
  %57 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %56, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %15
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %cppVar_2060)
          to label %71 unwind label %82

; <label>:58                                      ; preds = %26
  %59 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 22
  %60 = invoke %class.SysCArray1D* @_ZN8type_memIhLj128EEaSERKS0_(%class.SysCArray1D* %cppVar_2060, %class.SysCArray1D* %59)
          to label %61 unwind label %55

; <label>:61                                      ; preds = %58
  br label %62

; <label>:62                                      ; preds = %61, %48
  %63 = invoke %class.SysCArray1D* @_ZN8type_memIhLj128EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_2060)
          to label %64 unwind label %55

; <label>:64                                      ; preds = %62
  br label %69

; <label>:65                                      ; preds = %19
  %66 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 22
  %67 = invoke %class.SysCArray1D* @_ZN8type_memIhLj128EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %66)
          to label %68 unwind label %55

; <label>:68                                      ; preds = %65
  br label %69

; <label>:69                                      ; preds = %68, %64
  store i1 true, i1* %13
  store i32 1, i32* %16
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %cppVar_2060)
          to label %70 unwind label %52

; <label>:70                                      ; preds = %69
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %cppVar_2064)
          to label %72 unwind label %49

; <label>:71                                      ; preds = %55
  br label %74

; <label>:72                                      ; preds = %70
  %73 = load i1* %13
  br i1 %73, label %77, label %76

; <label>:74                                      ; preds = %71, %52
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %cppVar_2064)
          to label %75 unwind label %82

; <label>:75                                      ; preds = %74
  br label %78

; <label>:76                                      ; preds = %72
  call void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %agg.result)
  br label %77

; <label>:77                                      ; preds = %76, %72
  ret void

; <label>:78                                      ; preds = %75, %49
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %agg.result)
          to label %79 unwind label %82

; <label>:79                                      ; preds = %78
  br label %80

; <label>:80                                      ; preds = %79
  %81 = load i8** %14
  call void @_Unwind_Resume_or_Rethrow(i8* %81) noreturn
  unreachable

; <label>:82                                      ; preds = %78, %74, %55
  %83 = call i8* @llvm.eh.exception() nounwind
  %84 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %83, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIhLj128EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

define linkonce_odr void @_ZN8type_memIhLj128EE2wrEll(%class.SysCArray1D* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %class.SysCArray1D** %1
  %5 = load i64* %3, align 8
  %6 = trunc i64 %5 to i8
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %class.SysCArray1D* %4, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = getelementptr inbounds i8* %9, i64 %7
  store i8 %6, i8* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define i64 @_ZN13model_predict24cppUpdateFun_predict_sumElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1634 = alloca i64, align 8
  %cppVar_1603 = alloca i64, align 8
  %cppVar_1604 = alloca i8, align 1
  %cppVar_1625 = alloca i64, align 8
  %cppVar_1626 = alloca i8, align 1
  %cppVar_1663 = alloca i64, align 8
  %cppVar_1664 = alloca i8, align 1
  %cppVar_1614 = alloca i64, align 8
  %cppVar_1615 = alloca i64, align 8
  %cppVar_1616 = alloca i64, align 8
  %cppVar_1606 = alloca i64, align 8
  %cppVar_1607 = alloca i8, align 1
  %cppVar_1608 = alloca i64, align 8
  %cppVar_1605 = alloca i64, align 8
  %cppVar_1610 = alloca i64, align 8
  %cppVar_1611 = alloca i64, align 8
  %cppVar_1612 = alloca i64, align 8
  %cppVar_1613 = alloca i8, align 1
  %cppVar_1617 = alloca i64, align 8
  %cppVar_1618 = alloca i64, align 8
  %cppVar_1619 = alloca i64, align 8
  %cppVar_1620 = alloca i64, align 8
  %cppVar_1621 = alloca i64, align 8
  %cppVar_1622 = alloca i64, align 8
  %cppVar_1609 = alloca i64, align 8
  %cppVar_1623 = alloca i64, align 8
  %cppVar_1628 = alloca i64, align 8
  %cppVar_1629 = alloca i8, align 1
  %cppVar_1630 = alloca i8, align 1
  %cppVar_1647 = alloca i64, align 8
  %cppVar_1648 = alloca i8, align 1
  %cppVar_1649 = alloca i8, align 1
  %cppVar_1651 = alloca i64, align 8
  %cppVar_1652 = alloca i8, align 1
  %cppVar_1653 = alloca i8, align 1
  %cppVar_1655 = alloca i64, align 8
  %cppVar_1656 = alloca i8, align 1
  %cppVar_1657 = alloca i8, align 1
  %cppVar_1659 = alloca i64, align 8
  %cppVar_1660 = alloca i8, align 1
  %cppVar_1661 = alloca i8, align 1
  %cppVar_1632 = alloca i64, align 8
  %cppVar_1633 = alloca i8, align 1
  %cppVar_1631 = alloca i64, align 8
  %cppVar_1636 = alloca i64, align 8
  %cppVar_1637 = alloca i64, align 8
  %cppVar_1638 = alloca i64, align 8
  %cppVar_1639 = alloca i8, align 1
  %cppVar_1640 = alloca i64, align 8
  %cppVar_1641 = alloca i64, align 8
  %cppVar_1642 = alloca i64, align 8
  %cppVar_1643 = alloca i64, align 8
  %cppVar_1644 = alloca i64, align 8
  %cppVar_1635 = alloca i64, align 8
  %cppVar_1645 = alloca i64, align 8
  %cppVar_1658 = alloca i64, align 8
  %cppVar_1654 = alloca i64, align 8
  %cppVar_1650 = alloca i64, align 8
  %cppVar_1646 = alloca i64, align 8
  %cppVar_1627 = alloca i64, align 8
  %cppVar_1662 = alloca i64, align 8
  %cppVar_1624 = alloca i64, align 8
  %cppVar_1602 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1604, align 1
  %18 = load i8* %cppVar_1604, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %108

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %22 = load i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %cppVar_1607, align 1
  %25 = load i8* %cppVar_1607, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %20
  store i64 0, i64* %cppVar_1605, align 8
  br label %31

; <label>:28                                      ; preds = %20
  %29 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %30 = load i64* %29, align 8
  store i64 %30, i64* %cppVar_1605, align 8
  br label %31

; <label>:31                                      ; preds = %28, %27
  %32 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %33 = load i64* %32, align 8
  %34 = ashr i64 %33, 0
  %35 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 51
  %36 = load i64* %35, align 8
  %37 = and i64 %34, %36
  store i64 %37, i64* %cppVar_1610, align 8
  %38 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 1
  %39 = load i64* %cppVar_1610, align 8
  %40 = call i64 @_ZN8type_memIhLj512EE2rdEl(%class.SysCArray1D* %38, i64 %39)
  store i64 %40, i64* %cppVar_1611, align 8
  %41 = load i64* %cppVar_1611, align 8
  %42 = icmp eq i64 %41, 1
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %cppVar_1613, align 1
  %44 = load i8* %cppVar_1613, align 1
  %45 = trunc i8 %44 to i1
  br i1 %45, label %46, label %98

; <label>:46                                      ; preds = %31
  %47 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %48 = load i64* %47, align 8
  %49 = mul nsw i64 101, %48
  store i64 %49, i64* %cppVar_1615, align 8
  %50 = load i64* %cppVar_1615, align 8
  %51 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %52 = load i64* %51, align 8
  %53 = and i64 %50, %52
  store i64 %53, i64* %cppVar_1615, align 8
  %54 = load i64* %cppVar_1615, align 8
  %55 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %56 = load i64* %55, align 8
  %57 = add nsw i64 %54, %56
  store i64 %57, i64* %cppVar_1616, align 8
  %58 = load i64* %cppVar_1616, align 8
  %59 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %60 = load i64* %59, align 8
  %61 = and i64 %58, %60
  store i64 %61, i64* %cppVar_1616, align 8
  %62 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 4
  %63 = load i64* %cppVar_1616, align 8
  %64 = call i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %62, i64 %63)
  store i64 %64, i64* %cppVar_1617, align 8
  %65 = load i64* %cppVar_1617, align 8
  %66 = ashr i64 %65, 1
  %67 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 48
  %68 = load i64* %67, align 8
  %69 = and i64 %66, %68
  store i64 %69, i64* %cppVar_1618, align 8
  %70 = load i64* %cppVar_1618, align 8
  %71 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 53
  %72 = load i64* %71, align 8
  %73 = and i64 %70, %72
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %80

; <label>:75                                      ; preds = %46
  %76 = load i64* %cppVar_1618, align 8
  %77 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 55
  %78 = load i64* %77, align 8
  %79 = or i64 %76, %78
  br label %82

; <label>:80                                      ; preds = %46
  %81 = load i64* %cppVar_1618, align 8
  br label %82

; <label>:82                                      ; preds = %80, %75
  %83 = phi i64 [ %79, %75 ], [ %81, %80 ]
  store i64 %83, i64* %cppVar_1619, align 8
  %84 = load i64* %cppVar_1617, align 8
  %85 = ashr i64 %84, 0
  %86 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 40
  %87 = load i64* %86, align 8
  %88 = and i64 %85, %87
  store i64 %88, i64* %cppVar_1620, align 8
  %89 = load i64* %cppVar_1619, align 8
  %90 = shl i64 %89, 1
  %91 = load i64* %cppVar_1620, align 8
  %92 = or i64 %90, %91
  store i64 %92, i64* %cppVar_1621, align 8
  %93 = load i64* %cppVar_1621, align 8
  %94 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %95 = load i64* %94, align 8
  %96 = and i64 %93, %95
  store i64 %96, i64* %cppVar_1621, align 8
  %97 = load i64* %cppVar_1621, align 8
  store i64 %97, i64* %cppVar_1609, align 8
  br label %99

; <label>:98                                      ; preds = %31
  store i64 0, i64* %cppVar_1609, align 8
  br label %99

; <label>:99                                      ; preds = %98, %82
  %100 = load i64* %cppVar_1605, align 8
  %101 = load i64* %cppVar_1609, align 8
  %102 = add nsw i64 %100, %101
  store i64 %102, i64* %cppVar_1623, align 8
  %103 = load i64* %cppVar_1623, align 8
  %104 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %105 = load i64* %104, align 8
  %106 = and i64 %103, %105
  store i64 %106, i64* %cppVar_1623, align 8
  %107 = load i64* %cppVar_1623, align 8
  store i64 %107, i64* %cppVar_1602, align 8
  br label %305

; <label>:108                                     ; preds = %0
  %109 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %110 = load i64* %109, align 8
  %111 = icmp eq i64 %110, 1
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %cppVar_1626, align 1
  %113 = load i8* %cppVar_1626, align 1
  %114 = trunc i8 %113 to i1
  br i1 %114, label %115, label %288

; <label>:115                                     ; preds = %108
  %116 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %117 = load i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %cppVar_1629, align 1
  %120 = load i8* %cppVar_1626, align 1
  %121 = trunc i8 %120 to i1
  br i1 %121, label %122, label %125

; <label>:122                                     ; preds = %115
  %123 = load i8* %cppVar_1629, align 1
  %124 = trunc i8 %123 to i1
  br label %125

; <label>:125                                     ; preds = %122, %115
  %126 = phi i1 [ false, %115 ], [ %124, %122 ]
  %127 = zext i1 %126 to i8
  store i8 %127, i8* %cppVar_1630, align 1
  %128 = load i8* %cppVar_1630, align 1
  %129 = trunc i8 %128 to i1
  br i1 %129, label %130, label %203

; <label>:130                                     ; preds = %125
  %131 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %132 = load i64* %131, align 8
  %133 = icmp eq i64 %132, 0
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %cppVar_1633, align 1
  %135 = load i8* %cppVar_1633, align 1
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %138

; <label>:137                                     ; preds = %130
  store i64 0, i64* %cppVar_1631, align 8
  br label %141

; <label>:138                                     ; preds = %130
  %139 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %140 = load i64* %139, align 8
  store i64 %140, i64* %cppVar_1631, align 8
  br label %141

; <label>:141                                     ; preds = %138, %137
  %142 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %143 = load i64* %142, align 8
  %144 = ashr i64 %143, 0
  %145 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 48
  %146 = load i64* %145, align 8
  %147 = and i64 %144, %146
  store i64 %147, i64* %cppVar_1636, align 8
  %148 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 6
  %149 = load i64* %cppVar_1636, align 8
  %150 = call i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %148, i64 %149)
  store i64 %150, i64* %cppVar_1637, align 8
  %151 = load i64* %cppVar_1637, align 8
  %152 = icmp eq i64 %151, 1
  %153 = zext i1 %152 to i8
  store i8 %153, i8* %cppVar_1639, align 1
  %154 = load i8* %cppVar_1639, align 1
  %155 = trunc i8 %154 to i1
  br i1 %155, label %156, label %193

; <label>:156                                     ; preds = %141
  %157 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 4
  %158 = load i64* %cppVar_1616, align 8
  %159 = call i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %157, i64 %158)
  store i64 %159, i64* %cppVar_1640, align 8
  %160 = load i64* %cppVar_1640, align 8
  %161 = ashr i64 %160, 1
  %162 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 48
  %163 = load i64* %162, align 8
  %164 = and i64 %161, %163
  store i64 %164, i64* %cppVar_1641, align 8
  %165 = load i64* %cppVar_1641, align 8
  %166 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 53
  %167 = load i64* %166, align 8
  %168 = and i64 %165, %167
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %175

; <label>:170                                     ; preds = %156
  %171 = load i64* %cppVar_1641, align 8
  %172 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 55
  %173 = load i64* %172, align 8
  %174 = or i64 %171, %173
  br label %177

; <label>:175                                     ; preds = %156
  %176 = load i64* %cppVar_1641, align 8
  br label %177

; <label>:177                                     ; preds = %175, %170
  %178 = phi i64 [ %174, %170 ], [ %176, %175 ]
  store i64 %178, i64* %cppVar_1642, align 8
  %179 = load i64* %cppVar_1640, align 8
  %180 = ashr i64 %179, 0
  %181 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 40
  %182 = load i64* %181, align 8
  %183 = and i64 %180, %182
  store i64 %183, i64* %cppVar_1643, align 8
  %184 = load i64* %cppVar_1642, align 8
  %185 = shl i64 %184, 1
  %186 = load i64* %cppVar_1643, align 8
  %187 = or i64 %185, %186
  store i64 %187, i64* %cppVar_1644, align 8
  %188 = load i64* %cppVar_1644, align 8
  %189 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %190 = load i64* %189, align 8
  %191 = and i64 %188, %190
  store i64 %191, i64* %cppVar_1644, align 8
  %192 = load i64* %cppVar_1644, align 8
  store i64 %192, i64* %cppVar_1635, align 8
  br label %194

; <label>:193                                     ; preds = %141
  store i64 0, i64* %cppVar_1635, align 8
  br label %194

; <label>:194                                     ; preds = %193, %177
  %195 = load i64* %cppVar_1631, align 8
  %196 = load i64* %cppVar_1635, align 8
  %197 = add nsw i64 %195, %196
  store i64 %197, i64* %cppVar_1645, align 8
  %198 = load i64* %cppVar_1645, align 8
  %199 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %200 = load i64* %199, align 8
  %201 = and i64 %198, %200
  store i64 %201, i64* %cppVar_1645, align 8
  %202 = load i64* %cppVar_1645, align 8
  store i64 %202, i64* %cppVar_1627, align 8
  br label %286

; <label>:203                                     ; preds = %125
  %204 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %205 = load i64* %204, align 8
  %206 = icmp eq i64 %205, 1
  %207 = zext i1 %206 to i8
  store i8 %207, i8* %cppVar_1648, align 1
  %208 = load i8* %cppVar_1626, align 1
  %209 = trunc i8 %208 to i1
  br i1 %209, label %210, label %213

; <label>:210                                     ; preds = %203
  %211 = load i8* %cppVar_1648, align 1
  %212 = trunc i8 %211 to i1
  br label %213

; <label>:213                                     ; preds = %210, %203
  %214 = phi i1 [ false, %203 ], [ %212, %210 ]
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %cppVar_1649, align 1
  %216 = load i8* %cppVar_1649, align 1
  %217 = trunc i8 %216 to i1
  br i1 %217, label %218, label %221

; <label>:218                                     ; preds = %213
  %219 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %220 = load i64* %219, align 8
  store i64 %220, i64* %cppVar_1646, align 8
  br label %284

; <label>:221                                     ; preds = %213
  %222 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %223 = load i64* %222, align 8
  %224 = icmp eq i64 %223, 2
  %225 = zext i1 %224 to i8
  store i8 %225, i8* %cppVar_1652, align 1
  %226 = load i8* %cppVar_1626, align 1
  %227 = trunc i8 %226 to i1
  br i1 %227, label %228, label %231

; <label>:228                                     ; preds = %221
  %229 = load i8* %cppVar_1652, align 1
  %230 = trunc i8 %229 to i1
  br label %231

; <label>:231                                     ; preds = %228, %221
  %232 = phi i1 [ false, %221 ], [ %230, %228 ]
  %233 = zext i1 %232 to i8
  store i8 %233, i8* %cppVar_1653, align 1
  %234 = load i8* %cppVar_1653, align 1
  %235 = trunc i8 %234 to i1
  br i1 %235, label %236, label %239

; <label>:236                                     ; preds = %231
  %237 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %238 = load i64* %237, align 8
  store i64 %238, i64* %cppVar_1650, align 8
  br label %282

; <label>:239                                     ; preds = %231
  %240 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %241 = load i64* %240, align 8
  %242 = icmp eq i64 %241, 3
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %cppVar_1656, align 1
  %244 = load i8* %cppVar_1626, align 1
  %245 = trunc i8 %244 to i1
  br i1 %245, label %246, label %249

; <label>:246                                     ; preds = %239
  %247 = load i8* %cppVar_1656, align 1
  %248 = trunc i8 %247 to i1
  br label %249

; <label>:249                                     ; preds = %246, %239
  %250 = phi i1 [ false, %239 ], [ %248, %246 ]
  %251 = zext i1 %250 to i8
  store i8 %251, i8* %cppVar_1657, align 1
  %252 = load i8* %cppVar_1657, align 1
  %253 = trunc i8 %252 to i1
  br i1 %253, label %254, label %257

; <label>:254                                     ; preds = %249
  %255 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %256 = load i64* %255, align 8
  store i64 %256, i64* %cppVar_1654, align 8
  br label %280

; <label>:257                                     ; preds = %249
  %258 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %259 = load i64* %258, align 8
  %260 = icmp eq i64 %259, 4
  %261 = zext i1 %260 to i8
  store i8 %261, i8* %cppVar_1660, align 1
  %262 = load i8* %cppVar_1626, align 1
  %263 = trunc i8 %262 to i1
  br i1 %263, label %264, label %267

; <label>:264                                     ; preds = %257
  %265 = load i8* %cppVar_1660, align 1
  %266 = trunc i8 %265 to i1
  br label %267

; <label>:267                                     ; preds = %264, %257
  %268 = phi i1 [ false, %257 ], [ %266, %264 ]
  %269 = zext i1 %268 to i8
  store i8 %269, i8* %cppVar_1661, align 1
  %270 = load i8* %cppVar_1661, align 1
  %271 = trunc i8 %270 to i1
  br i1 %271, label %272, label %275

; <label>:272                                     ; preds = %267
  %273 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %274 = load i64* %273, align 8
  store i64 %274, i64* %cppVar_1658, align 8
  br label %278

; <label>:275                                     ; preds = %267
  %276 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %277 = load i64* %276, align 8
  store i64 %277, i64* %cppVar_1658, align 8
  br label %278

; <label>:278                                     ; preds = %275, %272
  %279 = load i64* %cppVar_1658, align 8
  store i64 %279, i64* %cppVar_1654, align 8
  br label %280

; <label>:280                                     ; preds = %278, %254
  %281 = load i64* %cppVar_1654, align 8
  store i64 %281, i64* %cppVar_1650, align 8
  br label %282

; <label>:282                                     ; preds = %280, %236
  %283 = load i64* %cppVar_1650, align 8
  store i64 %283, i64* %cppVar_1646, align 8
  br label %284

; <label>:284                                     ; preds = %282, %218
  %285 = load i64* %cppVar_1646, align 8
  store i64 %285, i64* %cppVar_1627, align 8
  br label %286

; <label>:286                                     ; preds = %284, %194
  %287 = load i64* %cppVar_1627, align 8
  store i64 %287, i64* %cppVar_1624, align 8
  br label %303

; <label>:288                                     ; preds = %108
  %289 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %290 = load i64* %289, align 8
  %291 = icmp eq i64 %290, 2
  %292 = zext i1 %291 to i8
  store i8 %292, i8* %cppVar_1664, align 1
  %293 = load i8* %cppVar_1664, align 1
  %294 = trunc i8 %293 to i1
  br i1 %294, label %295, label %298

; <label>:295                                     ; preds = %288
  %296 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %297 = load i64* %296, align 8
  store i64 %297, i64* %cppVar_1662, align 8
  br label %301

; <label>:298                                     ; preds = %288
  %299 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 23
  %300 = load i64* %299, align 8
  store i64 %300, i64* %cppVar_1662, align 8
  br label %301

; <label>:301                                     ; preds = %298, %295
  %302 = load i64* %cppVar_1662, align 8
  store i64 %302, i64* %cppVar_1624, align 8
  br label %303

; <label>:303                                     ; preds = %301, %286
  %304 = load i64* %cppVar_1624, align 8
  store i64 %304, i64* %cppVar_1602, align 8
  br label %305

; <label>:305                                     ; preds = %303, %99
  %306 = load i64* %cppVar_1602, align 8
  ret i64 %306
}

define i64 @_ZN13model_predict24cppUpdateFun_predict_upcElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1667 = alloca i64, align 8
  %cppVar_1668 = alloca i8, align 1
  %cppVar_1676 = alloca i64, align 8
  %cppVar_1678 = alloca i64, align 8
  %cppVar_1679 = alloca i8, align 1
  %cppVar_1675 = alloca i64, align 8
  %cppVar_1698 = alloca i64, align 8
  %cppVar_1699 = alloca i8, align 1
  %cppVar_1696 = alloca i64, align 8
  %cppVar_1714 = alloca i64, align 8
  %cppVar_1715 = alloca i8, align 1
  %cppVar_1712 = alloca i64, align 8
  %cppVar_1670 = alloca i8, align 1
  %cppVar_1671 = alloca i64, align 8
  %cppVar_1672 = alloca i64, align 8
  %cppVar_1673 = alloca i8, align 1
  %cppVar_1674 = alloca i8, align 1
  %cppVar_1669 = alloca i64, align 8
  %cppVar_1684 = alloca i64, align 8
  %cppVar_1685 = alloca i8, align 1
  %cppVar_1687 = alloca i64, align 8
  %cppVar_1688 = alloca i64, align 8
  %cppVar_1689 = alloca i8, align 1
  %cppVar_1690 = alloca i64, align 8
  %cppVar_1691 = alloca i64, align 8
  %cppVar_1692 = alloca i64, align 8
  %cppVar_1693 = alloca i8, align 1
  %cppVar_1694 = alloca i8, align 1
  %cppVar_1681 = alloca i64, align 8
  %cppVar_1682 = alloca i8, align 1
  %cppVar_1683 = alloca i8, align 1
  %cppVar_1686 = alloca i8, align 1
  %cppVar_1695 = alloca i8, align 1
  %cppVar_1680 = alloca i64, align 8
  %cppVar_1701 = alloca i64, align 8
  %cppVar_1702 = alloca i64, align 8
  %cppVar_1703 = alloca i8, align 1
  %cppVar_1704 = alloca i64, align 8
  %cppVar_1705 = alloca i64, align 8
  %cppVar_1706 = alloca i64, align 8
  %cppVar_1707 = alloca i8, align 1
  %cppVar_1708 = alloca i8, align 1
  %cppVar_1709 = alloca i64, align 8
  %cppVar_1710 = alloca i8, align 1
  %cppVar_1711 = alloca i8, align 1
  %cppVar_1700 = alloca i64, align 8
  %cppVar_1717 = alloca i64, align 8
  %cppVar_1718 = alloca i8, align 1
  %cppVar_1719 = alloca i64, align 8
  %cppVar_1720 = alloca i8, align 1
  %cppVar_1721 = alloca i8, align 1
  %cppVar_1716 = alloca i64, align 8
  %cppVar_1713 = alloca i64, align 8
  %cppVar_1697 = alloca i64, align 8
  %cppVar_1677 = alloca i64, align 8
  %cppVar_1666 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1668, align 1
  %18 = load i8* %cppVar_1668, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %53

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %cppVar_1670, align 1
  %27 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 11
  %28 = load i64* %27, align 8
  %29 = sub nsw i64 %28, 1
  store i64 %29, i64* %cppVar_1672, align 8
  %30 = load i64* %cppVar_1672, align 8
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %32 = load i64* %31, align 8
  %33 = and i64 %30, %32
  store i64 %33, i64* %cppVar_1672, align 8
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 19
  %35 = load i64* %34, align 8
  %36 = load i64* %cppVar_1672, align 8
  %37 = icmp eq i64 %35, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %cppVar_1673, align 1
  %39 = load i8* %cppVar_1670, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %20
  %42 = load i8* %cppVar_1673, align 1
  %43 = trunc i8 %42 to i1
  br label %44

; <label>:44                                      ; preds = %41, %20
  %45 = phi i1 [ false, %20 ], [ %43, %41 ]
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %cppVar_1674, align 1
  %47 = load i8* %cppVar_1674, align 1
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %44
  store i64 1, i64* %cppVar_1669, align 8
  br label %51

; <label>:50                                      ; preds = %44
  store i64 0, i64* %cppVar_1669, align 8
  br label %51

; <label>:51                                      ; preds = %50, %49
  %52 = load i64* %cppVar_1669, align 8
  store i64 %52, i64* %cppVar_1666, align 8
  br label %224

; <label>:53                                      ; preds = %0
  %54 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %55 = load i64* %54, align 8
  %56 = icmp eq i64 %55, 1
  %57 = zext i1 %56 to i8
  store i8 %57, i8* %cppVar_1679, align 1
  %58 = load i8* %cppVar_1679, align 1
  %59 = trunc i8 %58 to i1
  br i1 %59, label %60, label %129

; <label>:60                                      ; preds = %53
  %61 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %62 = load i64* %61, align 8
  %63 = icmp eq i64 %62, 4
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %cppVar_1682, align 1
  %65 = load i8* %cppVar_1679, align 1
  %66 = trunc i8 %65 to i1
  br i1 %66, label %67, label %70

; <label>:67                                      ; preds = %60
  %68 = load i8* %cppVar_1682, align 1
  %69 = trunc i8 %68 to i1
  br label %70

; <label>:70                                      ; preds = %67, %60
  %71 = phi i1 [ false, %60 ], [ %69, %67 ]
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %cppVar_1683, align 1
  %73 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %74 = load i64* %73, align 8
  %75 = icmp eq i64 %74, 4
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %cppVar_1685, align 1
  %77 = load i8* %cppVar_1683, align 1
  %78 = trunc i8 %77 to i1
  br i1 %78, label %79, label %82

; <label>:79                                      ; preds = %70
  %80 = load i8* %cppVar_1685, align 1
  %81 = trunc i8 %80 to i1
  br label %82

; <label>:82                                      ; preds = %79, %70
  %83 = phi i1 [ false, %70 ], [ %81, %79 ]
  %84 = zext i1 %83 to i8
  store i8 %84, i8* %cppVar_1686, align 1
  %85 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %86 = load i64* %85, align 8
  %87 = add nsw i64 %86, 5
  store i64 %87, i64* %cppVar_1688, align 8
  %88 = load i64* %cppVar_1688, align 8
  %89 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %90 = load i64* %89, align 8
  %91 = and i64 %88, %90
  store i64 %91, i64* %cppVar_1688, align 8
  %92 = load i64* %cppVar_1688, align 8
  %93 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %94 = load i64* %93, align 8
  %95 = icmp eq i64 %92, %94
  %96 = zext i1 %95 to i8
  store i8 %96, i8* %cppVar_1689, align 1
  %97 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %98 = load i64* %97, align 8
  %99 = add nsw i64 %98, 5
  store i64 %99, i64* %cppVar_1691, align 8
  %100 = load i64* %cppVar_1691, align 8
  %101 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %102 = load i64* %101, align 8
  %103 = and i64 %100, %102
  store i64 %103, i64* %cppVar_1691, align 8
  %104 = load i64* %cppVar_1691, align 8
  %105 = icmp sge i64 %104, 500
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %cppVar_1693, align 1
  %107 = load i8* %cppVar_1689, align 1
  %108 = trunc i8 %107 to i1
  br i1 %108, label %112, label %109

; <label>:109                                     ; preds = %82
  %110 = load i8* %cppVar_1693, align 1
  %111 = trunc i8 %110 to i1
  br label %112

; <label>:112                                     ; preds = %109, %82
  %113 = phi i1 [ true, %82 ], [ %111, %109 ]
  %114 = zext i1 %113 to i8
  store i8 %114, i8* %cppVar_1694, align 1
  %115 = load i8* %cppVar_1686, align 1
  %116 = trunc i8 %115 to i1
  br i1 %116, label %117, label %120

; <label>:117                                     ; preds = %112
  %118 = load i8* %cppVar_1694, align 1
  %119 = trunc i8 %118 to i1
  br label %120

; <label>:120                                     ; preds = %117, %112
  %121 = phi i1 [ false, %112 ], [ %119, %117 ]
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %cppVar_1695, align 1
  %123 = load i8* %cppVar_1695, align 1
  %124 = trunc i8 %123 to i1
  br i1 %124, label %125, label %126

; <label>:125                                     ; preds = %120
  store i64 3, i64* %cppVar_1680, align 8
  br label %127

; <label>:126                                     ; preds = %120
  store i64 1, i64* %cppVar_1680, align 8
  br label %127

; <label>:127                                     ; preds = %126, %125
  %128 = load i64* %cppVar_1680, align 8
  store i64 %128, i64* %cppVar_1677, align 8
  br label %222

; <label>:129                                     ; preds = %53
  %130 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %131 = load i64* %130, align 8
  %132 = icmp eq i64 %131, 3
  %133 = zext i1 %132 to i8
  store i8 %133, i8* %cppVar_1699, align 1
  %134 = load i8* %cppVar_1699, align 1
  %135 = trunc i8 %134 to i1
  br i1 %135, label %136, label %185

; <label>:136                                     ; preds = %129
  %137 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %138 = load i64* %137, align 8
  %139 = add nsw i64 %138, 5
  store i64 %139, i64* %cppVar_1702, align 8
  %140 = load i64* %cppVar_1702, align 8
  %141 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %142 = load i64* %141, align 8
  %143 = and i64 %140, %142
  store i64 %143, i64* %cppVar_1702, align 8
  %144 = load i64* %cppVar_1702, align 8
  %145 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %146 = load i64* %145, align 8
  %147 = icmp eq i64 %144, %146
  %148 = zext i1 %147 to i8
  store i8 %148, i8* %cppVar_1703, align 1
  %149 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %150 = load i64* %149, align 8
  %151 = add nsw i64 %150, 5
  store i64 %151, i64* %cppVar_1705, align 8
  %152 = load i64* %cppVar_1705, align 8
  %153 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %154 = load i64* %153, align 8
  %155 = and i64 %152, %154
  store i64 %155, i64* %cppVar_1705, align 8
  %156 = load i64* %cppVar_1705, align 8
  %157 = icmp sge i64 %156, 500
  %158 = zext i1 %157 to i8
  store i8 %158, i8* %cppVar_1707, align 1
  %159 = load i8* %cppVar_1703, align 1
  %160 = trunc i8 %159 to i1
  br i1 %160, label %164, label %161

; <label>:161                                     ; preds = %136
  %162 = load i8* %cppVar_1707, align 1
  %163 = trunc i8 %162 to i1
  br label %164

; <label>:164                                     ; preds = %161, %136
  %165 = phi i1 [ true, %136 ], [ %163, %161 ]
  %166 = zext i1 %165 to i8
  store i8 %166, i8* %cppVar_1708, align 1
  %167 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %168 = load i64* %167, align 8
  %169 = icmp eq i64 %168, 4
  %170 = zext i1 %169 to i8
  store i8 %170, i8* %cppVar_1710, align 1
  %171 = load i8* %cppVar_1708, align 1
  %172 = trunc i8 %171 to i1
  br i1 %172, label %173, label %176

; <label>:173                                     ; preds = %164
  %174 = load i8* %cppVar_1710, align 1
  %175 = trunc i8 %174 to i1
  br label %176

; <label>:176                                     ; preds = %173, %164
  %177 = phi i1 [ false, %164 ], [ %175, %173 ]
  %178 = zext i1 %177 to i8
  store i8 %178, i8* %cppVar_1711, align 1
  %179 = load i8* %cppVar_1711, align 1
  %180 = trunc i8 %179 to i1
  br i1 %180, label %181, label %182

; <label>:181                                     ; preds = %176
  store i64 2, i64* %cppVar_1700, align 8
  br label %183

; <label>:182                                     ; preds = %176
  store i64 3, i64* %cppVar_1700, align 8
  br label %183

; <label>:183                                     ; preds = %182, %181
  %184 = load i64* %cppVar_1700, align 8
  store i64 %184, i64* %cppVar_1697, align 8
  br label %220

; <label>:185                                     ; preds = %129
  %186 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %187 = load i64* %186, align 8
  %188 = icmp eq i64 %187, 2
  %189 = zext i1 %188 to i8
  store i8 %189, i8* %cppVar_1715, align 1
  %190 = load i8* %cppVar_1715, align 1
  %191 = trunc i8 %190 to i1
  br i1 %191, label %192, label %215

; <label>:192                                     ; preds = %185
  %193 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %194 = load i64* %193, align 8
  %195 = icmp eq i64 %194, 0
  %196 = zext i1 %195 to i8
  store i8 %196, i8* %cppVar_1718, align 1
  %197 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %198 = load i64* %197, align 8
  %199 = icmp eq i64 %198, 1
  %200 = zext i1 %199 to i8
  store i8 %200, i8* %cppVar_1720, align 1
  %201 = load i8* %cppVar_1718, align 1
  %202 = trunc i8 %201 to i1
  br i1 %202, label %203, label %206

; <label>:203                                     ; preds = %192
  %204 = load i8* %cppVar_1720, align 1
  %205 = trunc i8 %204 to i1
  br label %206

; <label>:206                                     ; preds = %203, %192
  %207 = phi i1 [ false, %192 ], [ %205, %203 ]
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %cppVar_1721, align 1
  %209 = load i8* %cppVar_1721, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %211, label %212

; <label>:211                                     ; preds = %206
  store i64 2, i64* %cppVar_1716, align 8
  br label %213

; <label>:212                                     ; preds = %206
  store i64 2, i64* %cppVar_1716, align 8
  br label %213

; <label>:213                                     ; preds = %212, %211
  %214 = load i64* %cppVar_1716, align 8
  store i64 %214, i64* %cppVar_1713, align 8
  br label %218

; <label>:215                                     ; preds = %185
  %216 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %217 = load i64* %216, align 8
  store i64 %217, i64* %cppVar_1713, align 8
  br label %218

; <label>:218                                     ; preds = %215, %213
  %219 = load i64* %cppVar_1713, align 8
  store i64 %219, i64* %cppVar_1697, align 8
  br label %220

; <label>:220                                     ; preds = %218, %183
  %221 = load i64* %cppVar_1697, align 8
  store i64 %221, i64* %cppVar_1677, align 8
  br label %222

; <label>:222                                     ; preds = %220, %127
  %223 = load i64* %cppVar_1677, align 8
  store i64 %223, i64* %cppVar_1666, align 8
  br label %224

; <label>:224                                     ; preds = %222, %51
  %225 = load i64* %cppVar_1666, align 8
  ret i64 %225
}

define i64 @_ZN13model_predict26cppUpdateFun_predict_v_cntElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1728 = alloca i64, align 8
  %cppVar_1724 = alloca i64, align 8
  %cppVar_1725 = alloca i8, align 1
  %cppVar_1732 = alloca i64, align 8
  %cppVar_1733 = alloca i8, align 1
  %cppVar_1753 = alloca i64, align 8
  %cppVar_1754 = alloca i8, align 1
  %cppVar_1769 = alloca i64, align 8
  %cppVar_1770 = alloca i8, align 1
  %cppVar_1727 = alloca i8, align 1
  %cppVar_1729 = alloca i64, align 8
  %cppVar_1730 = alloca i64, align 8
  %cppVar_1726 = alloca i64, align 8
  %cppVar_1738 = alloca i64, align 8
  %cppVar_1739 = alloca i8, align 1
  %cppVar_1742 = alloca i64, align 8
  %cppVar_1743 = alloca i64, align 8
  %cppVar_1744 = alloca i8, align 1
  %cppVar_1745 = alloca i64, align 8
  %cppVar_1746 = alloca i64, align 8
  %cppVar_1747 = alloca i64, align 8
  %cppVar_1748 = alloca i8, align 1
  %cppVar_1749 = alloca i8, align 1
  %cppVar_1735 = alloca i64, align 8
  %cppVar_1736 = alloca i8, align 1
  %cppVar_1737 = alloca i8, align 1
  %cppVar_1740 = alloca i8, align 1
  %cppVar_1750 = alloca i64, align 8
  %cppVar_1751 = alloca i64, align 8
  %cppVar_1741 = alloca i64, align 8
  %cppVar_1734 = alloca i64, align 8
  %cppVar_1756 = alloca i64, align 8
  %cppVar_1757 = alloca i64, align 8
  %cppVar_1758 = alloca i8, align 1
  %cppVar_1759 = alloca i64, align 8
  %cppVar_1760 = alloca i64, align 8
  %cppVar_1761 = alloca i64, align 8
  %cppVar_1762 = alloca i8, align 1
  %cppVar_1763 = alloca i8, align 1
  %cppVar_1764 = alloca i64, align 8
  %cppVar_1765 = alloca i64, align 8
  %cppVar_1766 = alloca i64, align 8
  %cppVar_1767 = alloca i64, align 8
  %cppVar_1755 = alloca i64, align 8
  %cppVar_1768 = alloca i64, align 8
  %cppVar_1752 = alloca i64, align 8
  %cppVar_1731 = alloca i64, align 8
  %cppVar_1723 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1725, align 1
  %18 = load i8* %cppVar_1725, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %41

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %cppVar_1727, align 1
  %27 = load i8* %cppVar_1727, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %20
  store i64 0, i64* %cppVar_1726, align 8
  br label %39

; <label>:30                                      ; preds = %20
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %32 = load i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %cppVar_1730, align 8
  %34 = load i64* %cppVar_1730, align 8
  %35 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %36 = load i64* %35, align 8
  %37 = and i64 %34, %36
  store i64 %37, i64* %cppVar_1730, align 8
  %38 = load i64* %cppVar_1730, align 8
  store i64 %38, i64* %cppVar_1726, align 8
  br label %39

; <label>:39                                      ; preds = %30, %29
  %40 = load i64* %cppVar_1726, align 8
  store i64 %40, i64* %cppVar_1723, align 8
  br label %204

; <label>:41                                      ; preds = %0
  %42 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %43 = load i64* %42, align 8
  %44 = icmp eq i64 %43, 1
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %cppVar_1733, align 1
  %46 = load i8* %cppVar_1733, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %125

; <label>:48                                      ; preds = %41
  %49 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %50, 4
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_1736, align 1
  %53 = load i8* %cppVar_1733, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %48
  %56 = load i8* %cppVar_1736, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %48
  %59 = phi i1 [ false, %48 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_1737, align 1
  %61 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %62 = load i64* %61, align 8
  %63 = icmp eq i64 %62, 4
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %cppVar_1739, align 1
  %65 = load i8* %cppVar_1737, align 1
  %66 = trunc i8 %65 to i1
  br i1 %66, label %67, label %70

; <label>:67                                      ; preds = %58
  %68 = load i8* %cppVar_1739, align 1
  %69 = trunc i8 %68 to i1
  br label %70

; <label>:70                                      ; preds = %67, %58
  %71 = phi i1 [ false, %58 ], [ %69, %67 ]
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %cppVar_1740, align 1
  %73 = load i8* %cppVar_1740, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %120

; <label>:75                                      ; preds = %70
  %76 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %77 = load i64* %76, align 8
  %78 = add nsw i64 %77, 5
  store i64 %78, i64* %cppVar_1743, align 8
  %79 = load i64* %cppVar_1743, align 8
  %80 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %81 = load i64* %80, align 8
  %82 = and i64 %79, %81
  store i64 %82, i64* %cppVar_1743, align 8
  %83 = load i64* %cppVar_1743, align 8
  %84 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %85 = load i64* %84, align 8
  %86 = icmp eq i64 %83, %85
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %cppVar_1744, align 1
  %88 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %89 = load i64* %88, align 8
  %90 = add nsw i64 %89, 5
  store i64 %90, i64* %cppVar_1746, align 8
  %91 = load i64* %cppVar_1746, align 8
  %92 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %93 = load i64* %92, align 8
  %94 = and i64 %91, %93
  store i64 %94, i64* %cppVar_1746, align 8
  %95 = load i64* %cppVar_1746, align 8
  %96 = icmp sge i64 %95, 500
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %cppVar_1748, align 1
  %98 = load i8* %cppVar_1744, align 1
  %99 = trunc i8 %98 to i1
  br i1 %99, label %103, label %100

; <label>:100                                     ; preds = %75
  %101 = load i8* %cppVar_1748, align 1
  %102 = trunc i8 %101 to i1
  br label %103

; <label>:103                                     ; preds = %100, %75
  %104 = phi i1 [ true, %75 ], [ %102, %100 ]
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %cppVar_1749, align 1
  %106 = load i8* %cppVar_1749, align 1
  %107 = trunc i8 %106 to i1
  br i1 %107, label %108, label %109

; <label>:108                                     ; preds = %103
  store i64 0, i64* %cppVar_1741, align 8
  br label %118

; <label>:109                                     ; preds = %103
  %110 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %111 = load i64* %110, align 8
  %112 = add nsw i64 %111, 5
  store i64 %112, i64* %cppVar_1751, align 8
  %113 = load i64* %cppVar_1751, align 8
  %114 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %115 = load i64* %114, align 8
  %116 = and i64 %113, %115
  store i64 %116, i64* %cppVar_1751, align 8
  %117 = load i64* %cppVar_1751, align 8
  store i64 %117, i64* %cppVar_1741, align 8
  br label %118

; <label>:118                                     ; preds = %109, %108
  %119 = load i64* %cppVar_1741, align 8
  store i64 %119, i64* %cppVar_1734, align 8
  br label %123

; <label>:120                                     ; preds = %70
  %121 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %122 = load i64* %121, align 8
  store i64 %122, i64* %cppVar_1734, align 8
  br label %123

; <label>:123                                     ; preds = %120, %118
  %124 = load i64* %cppVar_1734, align 8
  store i64 %124, i64* %cppVar_1731, align 8
  br label %202

; <label>:125                                     ; preds = %41
  %126 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %127 = load i64* %126, align 8
  %128 = icmp eq i64 %127, 3
  %129 = zext i1 %128 to i8
  store i8 %129, i8* %cppVar_1754, align 1
  %130 = load i8* %cppVar_1754, align 1
  %131 = trunc i8 %130 to i1
  br i1 %131, label %132, label %185

; <label>:132                                     ; preds = %125
  %133 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %134 = load i64* %133, align 8
  %135 = add nsw i64 %134, 5
  store i64 %135, i64* %cppVar_1757, align 8
  %136 = load i64* %cppVar_1757, align 8
  %137 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %138 = load i64* %137, align 8
  %139 = and i64 %136, %138
  store i64 %139, i64* %cppVar_1757, align 8
  %140 = load i64* %cppVar_1757, align 8
  %141 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %142 = load i64* %141, align 8
  %143 = icmp eq i64 %140, %142
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %cppVar_1758, align 1
  %145 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %146 = load i64* %145, align 8
  %147 = add nsw i64 %146, 5
  store i64 %147, i64* %cppVar_1760, align 8
  %148 = load i64* %cppVar_1760, align 8
  %149 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %150 = load i64* %149, align 8
  %151 = and i64 %148, %150
  store i64 %151, i64* %cppVar_1760, align 8
  %152 = load i64* %cppVar_1760, align 8
  %153 = icmp sge i64 %152, 500
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %cppVar_1762, align 1
  %155 = load i8* %cppVar_1758, align 1
  %156 = trunc i8 %155 to i1
  br i1 %156, label %160, label %157

; <label>:157                                     ; preds = %132
  %158 = load i8* %cppVar_1762, align 1
  %159 = trunc i8 %158 to i1
  br label %160

; <label>:160                                     ; preds = %157, %132
  %161 = phi i1 [ true, %132 ], [ %159, %157 ]
  %162 = zext i1 %161 to i8
  store i8 %162, i8* %cppVar_1763, align 1
  %163 = load i8* %cppVar_1763, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %165, label %174

; <label>:165                                     ; preds = %160
  %166 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %167 = load i64* %166, align 8
  %168 = add nsw i64 %167, 5
  store i64 %168, i64* %cppVar_1765, align 8
  %169 = load i64* %cppVar_1765, align 8
  %170 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %171 = load i64* %170, align 8
  %172 = and i64 %169, %171
  store i64 %172, i64* %cppVar_1765, align 8
  %173 = load i64* %cppVar_1765, align 8
  store i64 %173, i64* %cppVar_1755, align 8
  br label %183

; <label>:174                                     ; preds = %160
  %175 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %176 = load i64* %175, align 8
  %177 = add nsw i64 %176, 5
  store i64 %177, i64* %cppVar_1767, align 8
  %178 = load i64* %cppVar_1767, align 8
  %179 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %180 = load i64* %179, align 8
  %181 = and i64 %178, %180
  store i64 %181, i64* %cppVar_1767, align 8
  %182 = load i64* %cppVar_1767, align 8
  store i64 %182, i64* %cppVar_1755, align 8
  br label %183

; <label>:183                                     ; preds = %174, %165
  %184 = load i64* %cppVar_1755, align 8
  store i64 %184, i64* %cppVar_1752, align 8
  br label %200

; <label>:185                                     ; preds = %125
  %186 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %187 = load i64* %186, align 8
  %188 = icmp eq i64 %187, 2
  %189 = zext i1 %188 to i8
  store i8 %189, i8* %cppVar_1770, align 1
  %190 = load i8* %cppVar_1770, align 1
  %191 = trunc i8 %190 to i1
  br i1 %191, label %192, label %195

; <label>:192                                     ; preds = %185
  %193 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %194 = load i64* %193, align 8
  store i64 %194, i64* %cppVar_1768, align 8
  br label %198

; <label>:195                                     ; preds = %185
  %196 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %197 = load i64* %196, align 8
  store i64 %197, i64* %cppVar_1768, align 8
  br label %198

; <label>:198                                     ; preds = %195, %192
  %199 = load i64* %cppVar_1768, align 8
  store i64 %199, i64* %cppVar_1752, align 8
  br label %200

; <label>:200                                     ; preds = %198, %183
  %201 = load i64* %cppVar_1752, align 8
  store i64 %201, i64* %cppVar_1731, align 8
  br label %202

; <label>:202                                     ; preds = %200, %123
  %203 = load i64* %cppVar_1731, align 8
  store i64 %203, i64* %cppVar_1723, align 8
  br label %204

; <label>:204                                     ; preds = %202, %39
  %205 = load i64* %cppVar_1723, align 8
  ret i64 %205
}

define void @_ZN13model_predict27cppUpdateFun_predict_vectorElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_2096 = alloca i64, align 8
  %cppVar_2095 = alloca i64, align 8
  %cppVar_2067 = alloca i64, align 8
  %cppVar_2068 = alloca i8, align 1
  %cppVar_2070 = alloca i64, align 8
  %cppVar_2071 = alloca i8, align 1
  %cppVar_2101 = alloca i64, align 8
  %cppVar_2102 = alloca i8, align 1
  %cppVar_2086 = alloca i64, align 8
  %cppVar_2087 = alloca i8, align 1
  %cppVar_2077 = alloca i64, align 8
  %cppVar_2078 = alloca i64, align 8
  %cppVar_2079 = alloca i8, align 1
  %cppVar_2080 = alloca i64, align 8
  %cppVar_2081 = alloca i64, align 8
  %cppVar_2082 = alloca i64, align 8
  %cppVar_2083 = alloca i8, align 1
  %cppVar_2084 = alloca i8, align 1
  %cppVar_2073 = alloca i64, align 8
  %cppVar_2074 = alloca i8, align 1
  %cppVar_2075 = alloca i8, align 1
  %cppVar_2092 = alloca i64, align 8
  %cppVar_2093 = alloca i64, align 8
  %cppVar_2094 = alloca i8, align 1
  %cppVar_2091 = alloca i64, align 8
  %cppVar_2089 = alloca i64, align 8
  %cppVar_2090 = alloca i64, align 8
  %cppVar_2097 = alloca %class.SysCArray1D, align 8
  %cppVar_2085 = alloca i8, align 1
  %cppVar_2088 = alloca i8, align 1
  %cppVar_2098 = alloca i64, align 8
  %cppVar_2099 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_2076 = alloca %class.SysCArray1D, align 8
  %cppVar_2072 = alloca %class.SysCArray1D, align 8
  %cppVar_2100 = alloca %class.SysCArray1D, align 8
  %cppVar_2069 = alloca %class.SysCArray1D, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_predict** %1
  call void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_2097)
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_2099)
          to label %18 unwind label %34

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_2076)
          to label %19 unwind label %37

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_2072)
          to label %20 unwind label %40

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_2100)
          to label %21 unwind label %43

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %cppVar_2069)
          to label %22 unwind label %46

; <label>:22                                      ; preds = %21
  store i1 false, i1* %15
  invoke void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %agg.result)
          to label %23 unwind label %49

; <label>:23                                      ; preds = %22
  %24 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_2068, align 1
  %28 = load i8* %cppVar_2068, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %55

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 26
  %32 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %31)
          to label %33 unwind label %52

; <label>:33                                      ; preds = %30
  br label %216

; <label>:34                                      ; preds = %231, %0
  %35 = call i8* @llvm.eh.exception() nounwind
  store i8* %35, i8** %13
  %36 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %35, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %237

; <label>:37                                      ; preds = %228, %18
  %38 = call i8* @llvm.eh.exception() nounwind
  store i8* %38, i8** %13
  %39 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %38, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %235

; <label>:40                                      ; preds = %225, %19
  %41 = call i8* @llvm.eh.exception() nounwind
  store i8* %41, i8** %13
  %42 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %41, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %232

; <label>:43                                      ; preds = %222, %20
  %44 = call i8* @llvm.eh.exception() nounwind
  store i8* %44, i8** %13
  %45 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %44, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %229

; <label>:46                                      ; preds = %220, %21
  %47 = call i8* @llvm.eh.exception() nounwind
  store i8* %47, i8** %13
  %48 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %47, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %226

; <label>:49                                      ; preds = %218, %22
  %50 = call i8* @llvm.eh.exception() nounwind
  store i8* %50, i8** %13
  %51 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %50, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %223

; <label>:52                                      ; preds = %213, %210, %206, %202, %192, %188, %185, %182, %179, %177, %169, %166, %163, %130, %30
  %53 = call i8* @llvm.eh.exception() nounwind
  store i8* %53, i8** %13
  %54 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %53, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %agg.result)
          to label %221 unwind label %241

; <label>:55                                      ; preds = %23
  %56 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %57 = load i64* %56, align 8
  %58 = icmp eq i64 %57, 1
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %cppVar_2071, align 1
  %60 = load i8* %cppVar_2071, align 1
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %195

; <label>:62                                      ; preds = %55
  %63 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %64 = load i64* %63, align 8
  %65 = icmp eq i64 %64, 4
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %cppVar_2074, align 1
  %67 = load i8* %cppVar_2071, align 1
  %68 = trunc i8 %67 to i1
  br i1 %68, label %69, label %72

; <label>:69                                      ; preds = %62
  %70 = load i8* %cppVar_2074, align 1
  %71 = trunc i8 %70 to i1
  br label %72

; <label>:72                                      ; preds = %69, %62
  %73 = phi i1 [ false, %62 ], [ %71, %69 ]
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_2075, align 1
  %75 = load i8* %cppVar_2075, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %188

; <label>:77                                      ; preds = %72
  %78 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %79 = load i64* %78, align 8
  %80 = add nsw i64 %79, 5
  store i64 %80, i64* %cppVar_2078, align 8
  %81 = load i64* %cppVar_2078, align 8
  %82 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %83 = load i64* %82, align 8
  %84 = and i64 %81, %83
  store i64 %84, i64* %cppVar_2078, align 8
  %85 = load i64* %cppVar_2078, align 8
  %86 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 16
  %87 = load i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %cppVar_2079, align 1
  %90 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %91 = load i64* %90, align 8
  %92 = add nsw i64 %91, 5
  store i64 %92, i64* %cppVar_2081, align 8
  %93 = load i64* %cppVar_2081, align 8
  %94 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %95 = load i64* %94, align 8
  %96 = and i64 %93, %95
  store i64 %96, i64* %cppVar_2081, align 8
  %97 = load i64* %cppVar_2081, align 8
  %98 = icmp sge i64 %97, 500
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %cppVar_2083, align 1
  %100 = load i8* %cppVar_2079, align 1
  %101 = trunc i8 %100 to i1
  br i1 %101, label %105, label %102

; <label>:102                                     ; preds = %77
  %103 = load i8* %cppVar_2083, align 1
  %104 = trunc i8 %103 to i1
  br label %105

; <label>:105                                     ; preds = %102, %77
  %106 = phi i1 [ true, %77 ], [ %104, %102 ]
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %cppVar_2084, align 1
  %108 = load i8* %cppVar_2075, align 1
  %109 = trunc i8 %108 to i1
  br i1 %109, label %110, label %113

; <label>:110                                     ; preds = %105
  %111 = load i8* %cppVar_2084, align 1
  %112 = trunc i8 %111 to i1
  br label %113

; <label>:113                                     ; preds = %110, %105
  %114 = phi i1 [ false, %105 ], [ %112, %110 ]
  %115 = zext i1 %114 to i8
  store i8 %115, i8* %cppVar_2085, align 1
  %116 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %117 = load i64* %116, align 8
  %118 = icmp eq i64 %117, 4
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %cppVar_2087, align 1
  %120 = load i8* %cppVar_2085, align 1
  %121 = trunc i8 %120 to i1
  br i1 %121, label %122, label %125

; <label>:122                                     ; preds = %113
  %123 = load i8* %cppVar_2087, align 1
  %124 = trunc i8 %123 to i1
  br label %125

; <label>:125                                     ; preds = %122, %113
  %126 = phi i1 [ false, %113 ], [ %124, %122 ]
  %127 = zext i1 %126 to i8
  store i8 %127, i8* %cppVar_2088, align 1
  %128 = load i8* %cppVar_2088, align 1
  %129 = trunc i8 %128 to i1
  br i1 %129, label %130, label %182

; <label>:130                                     ; preds = %125
  %131 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %132 = load i64* %131, align 8
  %133 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %134 = load i64* %133, align 8
  %135 = add nsw i64 %132, %134
  store i64 %135, i64* %cppVar_2089, align 8
  %136 = load i64* %cppVar_2089, align 8
  %137 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %138 = load i64* %137, align 8
  %139 = and i64 %136, %138
  store i64 %139, i64* %cppVar_2089, align 8
  %140 = load i64* %cppVar_2089, align 8
  %141 = ashr i64 %140, 0
  %142 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 51
  %143 = load i64* %142, align 8
  %144 = and i64 %141, %143
  store i64 %144, i64* %cppVar_2090, align 8
  %145 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 5
  %146 = load i64* %145, align 8
  %147 = invoke zeroext i16 @_Z5roundl(i64 %146)
          to label %148 unwind label %52

; <label>:148                                     ; preds = %130
  %149 = zext i16 %147 to i64
  store i64 %149, i64* %cppVar_2092, align 8
  %150 = load i64* %cppVar_2092, align 8
  %151 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 49
  %152 = load i64* %151, align 8
  %153 = and i64 %150, %152
  store i64 %153, i64* %cppVar_2093, align 8
  %154 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %155 = load i64* %154, align 8
  %156 = load i64* %cppVar_2093, align 8
  %157 = icmp eq i64 %155, %156
  %158 = zext i1 %157 to i8
  store i8 %158, i8* %cppVar_2094, align 1
  %159 = load i8* %cppVar_2094, align 1
  %160 = trunc i8 %159 to i1
  br i1 %160, label %161, label %162

; <label>:161                                     ; preds = %148
  store i64 1, i64* %cppVar_2091, align 8
  br label %163

; <label>:162                                     ; preds = %148
  store i64 0, i64* %cppVar_2091, align 8
  br label %163

; <label>:163                                     ; preds = %162, %161
  %164 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 26
  %165 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2097, %class.SysCArray1D* %164)
          to label %166 unwind label %52

; <label>:166                                     ; preds = %163
  %167 = load i64* %cppVar_2090, align 8
  %168 = load i64* %cppVar_2091, align 8
  invoke void @_ZN8type_memIbLj512EE2wrEll(%class.SysCArray1D* %cppVar_2097, i64 %167, i64 %168)
          to label %169 unwind label %52

; <label>:169                                     ; preds = %166
  %170 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 16
  %171 = load i64* %170, align 8
  %172 = ashr i64 %171, 0
  %173 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 51
  %174 = load i64* %173, align 8
  %175 = and i64 %172, %174
  store i64 %175, i64* %cppVar_2098, align 8
  %176 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2099, %class.SysCArray1D* %cppVar_2097)
          to label %177 unwind label %52

; <label>:177                                     ; preds = %169
  %178 = load i64* %cppVar_2098, align 8
  invoke void @_ZN8type_memIbLj512EE2wrEll(%class.SysCArray1D* %cppVar_2099, i64 %178, i64 1)
          to label %179 unwind label %52

; <label>:179                                     ; preds = %177
  %180 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2076, %class.SysCArray1D* %cppVar_2099)
          to label %181 unwind label %52

; <label>:181                                     ; preds = %179
  br label %185

; <label>:182                                     ; preds = %125
  %183 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2076, %class.SysCArray1D* %cppVar_2097)
          to label %184 unwind label %52

; <label>:184                                     ; preds = %182
  br label %185

; <label>:185                                     ; preds = %184, %181
  %186 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2072, %class.SysCArray1D* %cppVar_2076)
          to label %187 unwind label %52

; <label>:187                                     ; preds = %185
  br label %192

; <label>:188                                     ; preds = %72
  %189 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 26
  %190 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2072, %class.SysCArray1D* %189)
          to label %191 unwind label %52

; <label>:191                                     ; preds = %188
  br label %192

; <label>:192                                     ; preds = %191, %187
  %193 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2069, %class.SysCArray1D* %cppVar_2072)
          to label %194 unwind label %52

; <label>:194                                     ; preds = %192
  br label %213

; <label>:195                                     ; preds = %55
  %196 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %197 = load i64* %196, align 8
  %198 = icmp eq i64 %197, 2
  %199 = zext i1 %198 to i8
  store i8 %199, i8* %cppVar_2102, align 1
  %200 = load i8* %cppVar_2102, align 1
  %201 = trunc i8 %200 to i1
  br i1 %201, label %202, label %206

; <label>:202                                     ; preds = %195
  %203 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 26
  %204 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2100, %class.SysCArray1D* %203)
          to label %205 unwind label %52

; <label>:205                                     ; preds = %202
  br label %210

; <label>:206                                     ; preds = %195
  %207 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 26
  %208 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2100, %class.SysCArray1D* %207)
          to label %209 unwind label %52

; <label>:209                                     ; preds = %206
  br label %210

; <label>:210                                     ; preds = %209, %205
  %211 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %cppVar_2069, %class.SysCArray1D* %cppVar_2100)
          to label %212 unwind label %52

; <label>:212                                     ; preds = %210
  br label %213

; <label>:213                                     ; preds = %212, %194
  %214 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %cppVar_2069)
          to label %215 unwind label %52

; <label>:215                                     ; preds = %213
  br label %216

; <label>:216                                     ; preds = %215, %33
  store i1 true, i1* %15
  store i32 1, i32* %16
  %217 = load i1* %15
  br i1 %217, label %220, label %218

; <label>:218                                     ; preds = %216
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %agg.result)
          to label %219 unwind label %49

; <label>:219                                     ; preds = %218
  br label %220

; <label>:220                                     ; preds = %219, %216
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2069)
          to label %222 unwind label %46

; <label>:221                                     ; preds = %52
  br label %223

; <label>:222                                     ; preds = %220
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2100)
          to label %225 unwind label %43

; <label>:223                                     ; preds = %221, %49
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2069)
          to label %224 unwind label %241

; <label>:224                                     ; preds = %223
  br label %226

; <label>:225                                     ; preds = %222
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2072)
          to label %228 unwind label %40

; <label>:226                                     ; preds = %224, %46
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2100)
          to label %227 unwind label %241

; <label>:227                                     ; preds = %226
  br label %229

; <label>:228                                     ; preds = %225
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2076)
          to label %231 unwind label %37

; <label>:229                                     ; preds = %227, %43
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2072)
          to label %230 unwind label %241

; <label>:230                                     ; preds = %229
  br label %232

; <label>:231                                     ; preds = %228
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2099)
          to label %234 unwind label %34

; <label>:232                                     ; preds = %230, %40
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2076)
          to label %233 unwind label %241

; <label>:233                                     ; preds = %232
  br label %235

; <label>:234                                     ; preds = %231
  call void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2097)
  ret void

; <label>:235                                     ; preds = %233, %37
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2099)
          to label %236 unwind label %241

; <label>:236                                     ; preds = %235
  br label %237

; <label>:237                                     ; preds = %236, %34
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2097)
          to label %238 unwind label %241

; <label>:238                                     ; preds = %237
  br label %239

; <label>:239                                     ; preds = %238
  %240 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %240) noreturn
  unreachable

; <label>:241                                     ; preds = %237, %235, %232, %229, %226, %223, %52
  %242 = call i8* @llvm.eh.exception() nounwind
  %243 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %242, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIbLj512EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj512EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

define linkonce_odr void @_ZN8type_memIbLj512EE2wrEll(%class.SysCArray1D* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %class.SysCArray1D** %1
  %5 = load i64* %3, align 8
  %6 = icmp ne i64 %5, 0
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %class.SysCArray1D* %4, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = getelementptr inbounds i8* %9, i64 %7
  %11 = zext i1 %6 to i8
  store i8 %11, i8* %10
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIbLj512EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define i64 @_ZN13model_predict23cppUpdateFun_predictionElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1787 = alloca i64, align 8
  %cppVar_1773 = alloca i64, align 8
  %cppVar_1774 = alloca i8, align 1
  %cppVar_1785 = alloca i64, align 8
  %cppVar_1786 = alloca i8, align 1
  %cppVar_1784 = alloca i64, align 8
  %cppVar_1776 = alloca i64, align 8
  %cppVar_1777 = alloca i64, align 8
  %cppVar_1778 = alloca i64, align 8
  %cppVar_1779 = alloca i64, align 8
  %cppVar_1780 = alloca i8, align 1
  %cppVar_1781 = alloca i64, align 8
  %cppVar_1782 = alloca i64, align 8
  %cppVar_1783 = alloca i64, align 8
  %cppVar_1775 = alloca i64, align 8
  %cppVar_1772 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 3
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1774, align 1
  %18 = load i8* %cppVar_1774, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %72

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %24 = load i64* %23, align 8
  %25 = add nsw i64 %22, %24
  store i64 %25, i64* %cppVar_1776, align 8
  %26 = load i64* %cppVar_1776, align 8
  %27 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %28 = load i64* %27, align 8
  %29 = and i64 %26, %28
  store i64 %29, i64* %cppVar_1776, align 8
  %30 = load i64* %cppVar_1776, align 8
  %31 = ashr i64 %30, 0
  %32 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 51
  %33 = load i64* %32, align 8
  %34 = and i64 %31, %33
  store i64 %34, i64* %cppVar_1777, align 8
  %35 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 26
  %36 = load i64* %cppVar_1777, align 8
  %37 = call i64 @_ZN8type_memIbLj512EE2rdEl(%class.SysCArray1D* %35, i64 %36)
  store i64 %37, i64* %cppVar_1778, align 8
  %38 = load i64* %cppVar_1778, align 8
  %39 = icmp eq i64 %38, 1
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %cppVar_1780, align 1
  %41 = load i8* %cppVar_1780, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %57

; <label>:43                                      ; preds = %20
  %44 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %45 = load i64* %44, align 8
  %46 = add nsw i64 %45, 1
  store i64 %46, i64* %cppVar_1782, align 8
  %47 = load i64* %cppVar_1782, align 8
  %48 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %49 = load i64* %48, align 8
  %50 = and i64 %47, %49
  store i64 %50, i64* %cppVar_1782, align 8
  %51 = load i64* %cppVar_1782, align 8
  %52 = ashr i64 %51, 0
  %53 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 49
  %54 = load i64* %53, align 8
  %55 = and i64 %52, %54
  store i64 %55, i64* %cppVar_1783, align 8
  %56 = load i64* %cppVar_1783, align 8
  store i64 %56, i64* %cppVar_1775, align 8
  br label %70

; <label>:57                                      ; preds = %20
  %58 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %59 = load i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %cppVar_1786, align 1
  %62 = load i8* %cppVar_1786, align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %57
  store i64 0, i64* %cppVar_1784, align 8
  br label %68

; <label>:65                                      ; preds = %57
  %66 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 27
  %67 = load i64* %66, align 8
  store i64 %67, i64* %cppVar_1784, align 8
  br label %68

; <label>:68                                      ; preds = %65, %64
  %69 = load i64* %cppVar_1784, align 8
  store i64 %69, i64* %cppVar_1775, align 8
  br label %70

; <label>:70                                      ; preds = %68, %43
  %71 = load i64* %cppVar_1775, align 8
  store i64 %71, i64* %cppVar_1772, align 8
  br label %75

; <label>:72                                      ; preds = %0
  %73 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 27
  %74 = load i64* %73, align 8
  store i64 %74, i64* %cppVar_1772, align 8
  br label %75

; <label>:75                                      ; preds = %72, %70
  %76 = load i64* %cppVar_1772, align 8
  ret i64 %76
}

define linkonce_odr i64 @_ZN8type_memIbLj512EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i64
  ret i64 %10
}

define i64 @_ZN13model_predict22cppUpdateFun_sumOfpow2Elllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1790 = alloca i64, align 8
  %cppVar_1791 = alloca i8, align 1
  %cppVar_1793 = alloca i64, align 8
  %cppVar_1794 = alloca i8, align 1
  %cppVar_1826 = alloca i64, align 8
  %cppVar_1827 = alloca i8, align 1
  %cppVar_1810 = alloca i64, align 8
  %cppVar_1796 = alloca i64, align 8
  %cppVar_1797 = alloca i8, align 1
  %cppVar_1798 = alloca i8, align 1
  %cppVar_1800 = alloca i64, align 8
  %cppVar_1801 = alloca i8, align 1
  %cppVar_1802 = alloca i8, align 1
  %cppVar_1804 = alloca i64, align 8
  %cppVar_1805 = alloca i8, align 1
  %cppVar_1806 = alloca i8, align 1
  %cppVar_1818 = alloca i64, align 8
  %cppVar_1819 = alloca i8, align 1
  %cppVar_1820 = alloca i8, align 1
  %cppVar_1822 = alloca i64, align 8
  %cppVar_1823 = alloca i8, align 1
  %cppVar_1824 = alloca i8, align 1
  %cppVar_1811 = alloca i64, align 8
  %cppVar_1812 = alloca i64, align 8
  %cppVar_1813 = alloca i64, align 8
  %cppVar_1814 = alloca i64, align 8
  %cppVar_1815 = alloca i64, align 8
  %cppVar_1808 = alloca i64, align 8
  %cppVar_1809 = alloca i8, align 1
  %cppVar_1807 = alloca i64, align 8
  %cppVar_1816 = alloca i64, align 8
  %cppVar_1821 = alloca i64, align 8
  %cppVar_1817 = alloca i64, align 8
  %cppVar_1803 = alloca i64, align 8
  %cppVar_1799 = alloca i64, align 8
  %cppVar_1795 = alloca i64, align 8
  %cppVar_1825 = alloca i64, align 8
  %cppVar_1792 = alloca i64, align 8
  %cppVar_1789 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1791, align 1
  %18 = load i8* %cppVar_1791, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1789, align 8
  br label %188

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1794, align 1
  %28 = load i8* %cppVar_1794, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %171

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %32 = load i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %cppVar_1797, align 1
  %35 = load i8* %cppVar_1794, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %40

; <label>:37                                      ; preds = %30
  %38 = load i8* %cppVar_1797, align 1
  %39 = trunc i8 %38 to i1
  br label %40

; <label>:40                                      ; preds = %37, %30
  %41 = phi i1 [ false, %30 ], [ %39, %37 ]
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %cppVar_1798, align 1
  %43 = load i8* %cppVar_1798, align 1
  %44 = trunc i8 %43 to i1
  br i1 %44, label %45, label %48

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %47 = load i64* %46, align 8
  store i64 %47, i64* %cppVar_1795, align 8
  br label %169

; <label>:48                                      ; preds = %40
  %49 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %50, 1
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_1801, align 1
  %53 = load i8* %cppVar_1794, align 1
  %54 = trunc i8 %53 to i1
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %48
  %56 = load i8* %cppVar_1801, align 1
  %57 = trunc i8 %56 to i1
  br label %58

; <label>:58                                      ; preds = %55, %48
  %59 = phi i1 [ false, %48 ], [ %57, %55 ]
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %cppVar_1802, align 1
  %61 = load i8* %cppVar_1802, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %66

; <label>:63                                      ; preds = %58
  %64 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %65 = load i64* %64, align 8
  store i64 %65, i64* %cppVar_1799, align 8
  br label %167

; <label>:66                                      ; preds = %58
  %67 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %68 = load i64* %67, align 8
  %69 = icmp eq i64 %68, 2
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_1805, align 1
  %71 = load i8* %cppVar_1794, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %76

; <label>:73                                      ; preds = %66
  %74 = load i8* %cppVar_1805, align 1
  %75 = trunc i8 %74 to i1
  br label %76

; <label>:76                                      ; preds = %73, %66
  %77 = phi i1 [ false, %66 ], [ %75, %73 ]
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %cppVar_1806, align 1
  %79 = load i8* %cppVar_1806, align 1
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %122

; <label>:81                                      ; preds = %76
  %82 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %83 = load i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %cppVar_1809, align 1
  %86 = load i8* %cppVar_1809, align 1
  %87 = trunc i8 %86 to i1
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %81
  store i64 0, i64* %cppVar_1807, align 8
  br label %92

; <label>:89                                      ; preds = %81
  %90 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %91 = load i64* %90, align 8
  store i64 %91, i64* %cppVar_1807, align 8
  br label %92

; <label>:92                                      ; preds = %89, %88
  %93 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %94 = load i64* %93, align 8
  %95 = ashr i64 %94, 0
  %96 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 44
  %97 = load i64* %96, align 8
  %98 = and i64 %95, %97
  store i64 %98, i64* %cppVar_1811, align 8
  %99 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 35
  %100 = load i64* %cppVar_1811, align 8
  %101 = call i64 @_ZN8type_memItLj8EE2rdEl(%1* %99, i64 %100)
  store i64 %101, i64* %cppVar_1812, align 8
  %102 = load i64* %cppVar_1812, align 8
  %103 = call zeroext i16 @_Z10to_int_expl(i64 %102)
  %104 = zext i16 %103 to i64
  store i64 %104, i64* %cppVar_1813, align 8
  %105 = load i64* %cppVar_1813, align 8
  %106 = ashr i64 %105, 0
  %107 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 45
  %108 = load i64* %107, align 8
  %109 = and i64 %106, %108
  store i64 %109, i64* %cppVar_1814, align 8
  %110 = load i64* %cppVar_1814, align 8
  %111 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 45
  %112 = load i64* %111, align 8
  %113 = and i64 %110, %112
  store i64 %113, i64* %cppVar_1815, align 8
  %114 = load i64* %cppVar_1807, align 8
  %115 = load i64* %cppVar_1815, align 8
  %116 = add nsw i64 %114, %115
  store i64 %116, i64* %cppVar_1816, align 8
  %117 = load i64* %cppVar_1816, align 8
  %118 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 47
  %119 = load i64* %118, align 8
  %120 = and i64 %117, %119
  store i64 %120, i64* %cppVar_1816, align 8
  %121 = load i64* %cppVar_1816, align 8
  store i64 %121, i64* %cppVar_1803, align 8
  br label %165

; <label>:122                                     ; preds = %76
  %123 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %124 = load i64* %123, align 8
  %125 = icmp eq i64 %124, 3
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %cppVar_1819, align 1
  %127 = load i8* %cppVar_1794, align 1
  %128 = trunc i8 %127 to i1
  br i1 %128, label %129, label %132

; <label>:129                                     ; preds = %122
  %130 = load i8* %cppVar_1819, align 1
  %131 = trunc i8 %130 to i1
  br label %132

; <label>:132                                     ; preds = %129, %122
  %133 = phi i1 [ false, %122 ], [ %131, %129 ]
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %cppVar_1820, align 1
  %135 = load i8* %cppVar_1820, align 1
  %136 = trunc i8 %135 to i1
  br i1 %136, label %137, label %140

; <label>:137                                     ; preds = %132
  %138 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %139 = load i64* %138, align 8
  store i64 %139, i64* %cppVar_1817, align 8
  br label %163

; <label>:140                                     ; preds = %132
  %141 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 17
  %142 = load i64* %141, align 8
  %143 = icmp eq i64 %142, 4
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %cppVar_1823, align 1
  %145 = load i8* %cppVar_1794, align 1
  %146 = trunc i8 %145 to i1
  br i1 %146, label %147, label %150

; <label>:147                                     ; preds = %140
  %148 = load i8* %cppVar_1823, align 1
  %149 = trunc i8 %148 to i1
  br label %150

; <label>:150                                     ; preds = %147, %140
  %151 = phi i1 [ false, %140 ], [ %149, %147 ]
  %152 = zext i1 %151 to i8
  store i8 %152, i8* %cppVar_1824, align 1
  %153 = load i8* %cppVar_1824, align 1
  %154 = trunc i8 %153 to i1
  br i1 %154, label %155, label %158

; <label>:155                                     ; preds = %150
  %156 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %157 = load i64* %156, align 8
  store i64 %157, i64* %cppVar_1821, align 8
  br label %161

; <label>:158                                     ; preds = %150
  %159 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %160 = load i64* %159, align 8
  store i64 %160, i64* %cppVar_1821, align 8
  br label %161

; <label>:161                                     ; preds = %158, %155
  %162 = load i64* %cppVar_1821, align 8
  store i64 %162, i64* %cppVar_1817, align 8
  br label %163

; <label>:163                                     ; preds = %161, %137
  %164 = load i64* %cppVar_1817, align 8
  store i64 %164, i64* %cppVar_1803, align 8
  br label %165

; <label>:165                                     ; preds = %163, %92
  %166 = load i64* %cppVar_1803, align 8
  store i64 %166, i64* %cppVar_1799, align 8
  br label %167

; <label>:167                                     ; preds = %165, %63
  %168 = load i64* %cppVar_1799, align 8
  store i64 %168, i64* %cppVar_1795, align 8
  br label %169

; <label>:169                                     ; preds = %167, %45
  %170 = load i64* %cppVar_1795, align 8
  store i64 %170, i64* %cppVar_1792, align 8
  br label %186

; <label>:171                                     ; preds = %23
  %172 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %173 = load i64* %172, align 8
  %174 = icmp eq i64 %173, 2
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %cppVar_1827, align 1
  %176 = load i8* %cppVar_1827, align 1
  %177 = trunc i8 %176 to i1
  br i1 %177, label %178, label %181

; <label>:178                                     ; preds = %171
  %179 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %180 = load i64* %179, align 8
  store i64 %180, i64* %cppVar_1825, align 8
  br label %184

; <label>:181                                     ; preds = %171
  %182 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 32
  %183 = load i64* %182, align 8
  store i64 %183, i64* %cppVar_1825, align 8
  br label %184

; <label>:184                                     ; preds = %181, %178
  %185 = load i64* %cppVar_1825, align 8
  store i64 %185, i64* %cppVar_1792, align 8
  br label %186

; <label>:186                                     ; preds = %184, %169
  %187 = load i64* %cppVar_1792, align 8
  store i64 %187, i64* %cppVar_1789, align 8
  br label %188

; <label>:188                                     ; preds = %186, %20
  %189 = load i64* %cppVar_1789, align 8
  ret i64 %189
}

define i64 @_ZN13model_predict16cppUpdateFun_upcElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1851 = alloca i64, align 8
  %cppVar_1850 = alloca i64, align 8
  %cppVar_1830 = alloca i64, align 8
  %cppVar_1831 = alloca i8, align 1
  %cppVar_1833 = alloca i64, align 8
  %cppVar_1834 = alloca i8, align 1
  %cppVar_1836 = alloca i64, align 8
  %cppVar_1837 = alloca i8, align 1
  %cppVar_1839 = alloca i64, align 8
  %cppVar_1840 = alloca i8, align 1
  %cppVar_1841 = alloca i64, align 8
  %cppVar_1842 = alloca i8, align 1
  %cppVar_1843 = alloca i8, align 1
  %cppVar_1845 = alloca i64, align 8
  %cppVar_1846 = alloca i64, align 8
  %cppVar_1847 = alloca i8, align 1
  %cppVar_1848 = alloca i8, align 1
  %cppVar_1849 = alloca i8, align 1
  %cppVar_1844 = alloca i64, align 8
  %cppVar_1838 = alloca i64, align 8
  %cppVar_1835 = alloca i64, align 8
  %cppVar_1832 = alloca i64, align 8
  %cppVar_1829 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1831, align 1
  %18 = load i8* %cppVar_1831, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 34
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1829, align 8
  br label %104

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1834, align 1
  %28 = load i8* %cppVar_1834, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 34
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1832, align 8
  br label %102

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1837, align 1
  %38 = load i8* %cppVar_1837, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %97

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %42 = load i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %cppVar_1840, align 1
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %46 = load i64* %45, align 8
  %47 = icmp eq i64 %46, 1
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %cppVar_1842, align 1
  %49 = load i8* %cppVar_1840, align 1
  %50 = trunc i8 %49 to i1
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %40
  %52 = load i8* %cppVar_1842, align 1
  %53 = trunc i8 %52 to i1
  br label %54

; <label>:54                                      ; preds = %51, %40
  %55 = phi i1 [ false, %40 ], [ %53, %51 ]
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %cppVar_1843, align 1
  %57 = load i8* %cppVar_1843, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %92

; <label>:59                                      ; preds = %54
  %60 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 14
  %61 = load i64* %60, align 8
  %62 = sub nsw i64 %61, 1
  store i64 %62, i64* %cppVar_1846, align 8
  %63 = load i64* %cppVar_1846, align 8
  %64 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %65 = load i64* %64, align 8
  %66 = and i64 %63, %65
  store i64 %66, i64* %cppVar_1846, align 8
  %67 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %68 = load i64* %67, align 8
  %69 = load i64* %cppVar_1846, align 8
  %70 = icmp eq i64 %68, %69
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %cppVar_1847, align 1
  %72 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 10
  %73 = load i64* %72, align 8
  %74 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 12
  %75 = load i64* %74, align 8
  %76 = icmp eq i64 %73, %75
  %77 = zext i1 %76 to i8
  store i8 %77, i8* %cppVar_1848, align 1
  %78 = load i8* %cppVar_1847, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %83

; <label>:80                                      ; preds = %59
  %81 = load i8* %cppVar_1848, align 1
  %82 = trunc i8 %81 to i1
  br label %83

; <label>:83                                      ; preds = %80, %59
  %84 = phi i1 [ false, %59 ], [ %82, %80 ]
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %cppVar_1849, align 1
  %86 = load i8* %cppVar_1849, align 1
  %87 = trunc i8 %86 to i1
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %83
  store i64 3, i64* %cppVar_1844, align 8
  br label %90

; <label>:89                                      ; preds = %83
  store i64 0, i64* %cppVar_1844, align 8
  br label %90

; <label>:90                                      ; preds = %89, %88
  %91 = load i64* %cppVar_1844, align 8
  store i64 %91, i64* %cppVar_1838, align 8
  br label %95

; <label>:92                                      ; preds = %54
  %93 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 34
  %94 = load i64* %93, align 8
  store i64 %94, i64* %cppVar_1838, align 8
  br label %95

; <label>:95                                      ; preds = %92, %90
  %96 = load i64* %cppVar_1838, align 8
  store i64 %96, i64* %cppVar_1835, align 8
  br label %100

; <label>:97                                      ; preds = %33
  %98 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 34
  %99 = load i64* %98, align 8
  store i64 %99, i64* %cppVar_1835, align 8
  br label %100

; <label>:100                                     ; preds = %97, %95
  %101 = load i64* %cppVar_1835, align 8
  store i64 %101, i64* %cppVar_1832, align 8
  br label %102

; <label>:102                                     ; preds = %100, %30
  %103 = load i64* %cppVar_1832, align 8
  store i64 %103, i64* %cppVar_1829, align 8
  br label %104

; <label>:104                                     ; preds = %102, %20
  %105 = load i64* %cppVar_1829, align 8
  ret i64 %105
}

define void @_ZN13model_predict28cppUpdateFun_visibleEnergiesElllllllllll(%1* sret %agg.result, %class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_2120 = alloca i64, align 8
  %cppVar_2105 = alloca i64, align 8
  %cppVar_2106 = alloca i8, align 1
  %cppVar_2108 = alloca i64, align 8
  %cppVar_2109 = alloca i8, align 1
  %cppVar_2163 = alloca i64, align 8
  %cppVar_2164 = alloca i8, align 1
  %cppVar_2126 = alloca i64, align 8
  %cppVar_2127 = alloca i64, align 8
  %cppVar_2128 = alloca i64, align 8
  %cppVar_2115 = alloca i8, align 1
  %cppVar_2111 = alloca i64, align 8
  %cppVar_2112 = alloca i8, align 1
  %cppVar_2113 = alloca i8, align 1
  %cppVar_2137 = alloca i64, align 8
  %cppVar_2138 = alloca i8, align 1
  %cppVar_2139 = alloca i8, align 1
  %cppVar_2151 = alloca i64, align 8
  %cppVar_2152 = alloca i8, align 1
  %cppVar_2153 = alloca i8, align 1
  %cppVar_2155 = alloca i64, align 8
  %cppVar_2156 = alloca i8, align 1
  %cppVar_2157 = alloca i8, align 1
  %cppVar_2159 = alloca i64, align 8
  %cppVar_2160 = alloca i8, align 1
  %cppVar_2161 = alloca i8, align 1
  %cppVar_2118 = alloca i64, align 8
  %cppVar_2119 = alloca i8, align 1
  %cppVar_2117 = alloca i64, align 8
  %cppVar_2122 = alloca i64, align 8
  %cppVar_2123 = alloca i64, align 8
  %cppVar_2124 = alloca i64, align 8
  %cppVar_2125 = alloca i8, align 1
  %cppVar_2129 = alloca i64, align 8
  %cppVar_2130 = alloca i64, align 8
  %cppVar_2131 = alloca i64, align 8
  %cppVar_2132 = alloca i64, align 8
  %cppVar_2133 = alloca i64, align 8
  %cppVar_2121 = alloca i64, align 8
  %cppVar_2134 = alloca i64, align 8
  %cppVar_2116 = alloca i64, align 8
  %cppVar_2135 = alloca %1, align 8
  %cppVar_2114 = alloca %1, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_2146 = alloca i64, align 8
  %cppVar_2144 = alloca i64, align 8
  %cppVar_2145 = alloca i8, align 1
  %cppVar_2147 = alloca i64, align 8
  %cppVar_2143 = alloca i64, align 8
  %cppVar_2141 = alloca i64, align 8
  %cppVar_2142 = alloca i64, align 8
  %cppVar_2148 = alloca i64, align 8
  %cppVar_2140 = alloca i64, align 8
  %cppVar_2149 = alloca %1, align 8
  %cppVar_2158 = alloca %1, align 8
  %cppVar_2154 = alloca %1, align 8
  %cppVar_2150 = alloca %1, align 8
  %cppVar_2136 = alloca %1, align 8
  %cppVar_2110 = alloca %1, align 8
  %cppVar_2162 = alloca %1, align 8
  %cppVar_2107 = alloca %1, align 8
  %15 = alloca i1
  %16 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %17 = load %class.model_predict** %1
  call void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2135)
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2114)
          to label %18 unwind label %38

; <label>:18                                      ; preds = %0
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2149)
          to label %19 unwind label %41

; <label>:19                                      ; preds = %18
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2158)
          to label %20 unwind label %44

; <label>:20                                      ; preds = %19
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2154)
          to label %21 unwind label %47

; <label>:21                                      ; preds = %20
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2150)
          to label %22 unwind label %50

; <label>:22                                      ; preds = %21
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2136)
          to label %23 unwind label %53

; <label>:23                                      ; preds = %22
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2110)
          to label %24 unwind label %56

; <label>:24                                      ; preds = %23
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2162)
          to label %25 unwind label %59

; <label>:25                                      ; preds = %24
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %cppVar_2107)
          to label %26 unwind label %62

; <label>:26                                      ; preds = %25
  store i1 false, i1* %15
  invoke void @_ZN8type_memItLj8EEC1Ev(%1* %agg.result)
          to label %27 unwind label %65

; <label>:27                                      ; preds = %26
  %28 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %29 = load i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %cppVar_2106, align 1
  %32 = load i8* %cppVar_2106, align 1
  %33 = trunc i8 %32 to i1
  br i1 %33, label %34, label %71

; <label>:34                                      ; preds = %27
  %35 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %36 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %agg.result, %1* %35)
          to label %37 unwind label %68

; <label>:37                                      ; preds = %34
  br label %375

; <label>:38                                      ; preds = %402, %0
  %39 = call i8* @llvm.eh.exception() nounwind
  store i8* %39, i8** %13
  %40 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %39, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %408

; <label>:41                                      ; preds = %399, %18
  %42 = call i8* @llvm.eh.exception() nounwind
  store i8* %42, i8** %13
  %43 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %42, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %406

; <label>:44                                      ; preds = %396, %19
  %45 = call i8* @llvm.eh.exception() nounwind
  store i8* %45, i8** %13
  %46 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %45, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %403

; <label>:47                                      ; preds = %393, %20
  %48 = call i8* @llvm.eh.exception() nounwind
  store i8* %48, i8** %13
  %49 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %48, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %400

; <label>:50                                      ; preds = %390, %21
  %51 = call i8* @llvm.eh.exception() nounwind
  store i8* %51, i8** %13
  %52 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %51, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %397

; <label>:53                                      ; preds = %387, %22
  %54 = call i8* @llvm.eh.exception() nounwind
  store i8* %54, i8** %13
  %55 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %54, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %394

; <label>:56                                      ; preds = %384, %23
  %57 = call i8* @llvm.eh.exception() nounwind
  store i8* %57, i8** %13
  %58 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %57, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %391

; <label>:59                                      ; preds = %381, %24
  %60 = call i8* @llvm.eh.exception() nounwind
  store i8* %60, i8** %13
  %61 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %60, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %388

; <label>:62                                      ; preds = %379, %25
  %63 = call i8* @llvm.eh.exception() nounwind
  store i8* %63, i8** %13
  %64 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %63, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %385

; <label>:65                                      ; preds = %377, %26
  %66 = call i8* @llvm.eh.exception() nounwind
  store i8* %66, i8** %13
  %67 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %66, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %382

; <label>:68                                      ; preds = %372, %369, %365, %361, %351, %348, %345, %342, %339, %335, %331, %312, %293, %275, %272, %262, %227, %209, %205, %202, %199, %189, %135, %119, %34
  %69 = call i8* @llvm.eh.exception() nounwind
  store i8* %69, i8** %13
  %70 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %69, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %agg.result)
          to label %380 unwind label %412

; <label>:71                                      ; preds = %27
  %72 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %73 = load i64* %72, align 8
  %74 = icmp eq i64 %73, 1
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %cppVar_2109, align 1
  %76 = load i8* %cppVar_2109, align 1
  %77 = trunc i8 %76 to i1
  br i1 %77, label %78, label %354

; <label>:78                                      ; preds = %71
  %79 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %80 = load i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_2112, align 1
  %83 = load i8* %cppVar_2109, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %88

; <label>:85                                      ; preds = %78
  %86 = load i8* %cppVar_2112, align 1
  %87 = trunc i8 %86 to i1
  br label %88

; <label>:88                                      ; preds = %85, %78
  %89 = phi i1 [ false, %78 ], [ %87, %85 ]
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %cppVar_2113, align 1
  %91 = load i8* %cppVar_2113, align 1
  %92 = trunc i8 %91 to i1
  br i1 %92, label %93, label %212

; <label>:93                                      ; preds = %88
  %94 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 19
  %95 = load i64* %94, align 8
  %96 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 11
  %97 = load i64* %96, align 8
  %98 = icmp eq i64 %95, %97
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %cppVar_2115, align 1
  %100 = load i8* %cppVar_2115, align 1
  %101 = trunc i8 %100 to i1
  br i1 %101, label %102, label %205

; <label>:102                                     ; preds = %93
  %103 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %104 = load i64* %103, align 8
  %105 = ashr i64 %104, 0
  %106 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 44
  %107 = load i64* %106, align 8
  %108 = and i64 %105, %107
  store i64 %108, i64* %cppVar_2116, align 8
  %109 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 19
  %110 = load i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %cppVar_2119, align 1
  %113 = load i8* %cppVar_2119, align 1
  %114 = trunc i8 %113 to i1
  br i1 %114, label %115, label %116

; <label>:115                                     ; preds = %102
  store i64 0, i64* %cppVar_2117, align 8
  br label %119

; <label>:116                                     ; preds = %102
  %117 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 23
  %118 = load i64* %117, align 8
  store i64 %118, i64* %cppVar_2117, align 8
  br label %119

; <label>:119                                     ; preds = %116, %115
  %120 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 19
  %121 = load i64* %120, align 8
  %122 = ashr i64 %121, 0
  %123 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 48
  %124 = load i64* %123, align 8
  %125 = and i64 %122, %124
  store i64 %125, i64* %cppVar_2122, align 8
  %126 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 6
  %127 = load i64* %cppVar_2122, align 8
  %128 = invoke i64 @_ZN8type_memIbLj128EE2rdEl(%class.SysCArray1D* %126, i64 %127)
          to label %129 unwind label %68

; <label>:129                                     ; preds = %119
  store i64 %128, i64* %cppVar_2123, align 8
  %130 = load i64* %cppVar_2123, align 8
  %131 = icmp eq i64 %130, 1
  %132 = zext i1 %131 to i8
  store i8 %132, i8* %cppVar_2125, align 1
  %133 = load i8* %cppVar_2125, align 1
  %134 = trunc i8 %133 to i1
  br i1 %134, label %135, label %188

; <label>:135                                     ; preds = %129
  %136 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 25
  %137 = load i64* %136, align 8
  %138 = mul nsw i64 101, %137
  store i64 %138, i64* %cppVar_2127, align 8
  %139 = load i64* %cppVar_2127, align 8
  %140 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %141 = load i64* %140, align 8
  %142 = and i64 %139, %141
  store i64 %142, i64* %cppVar_2127, align 8
  %143 = load i64* %cppVar_2127, align 8
  %144 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 19
  %145 = load i64* %144, align 8
  %146 = add nsw i64 %143, %145
  store i64 %146, i64* %cppVar_2128, align 8
  %147 = load i64* %cppVar_2128, align 8
  %148 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %149 = load i64* %148, align 8
  %150 = and i64 %147, %149
  store i64 %150, i64* %cppVar_2128, align 8
  %151 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 4
  %152 = load i64* %cppVar_2128, align 8
  %153 = invoke i64 @_ZN8type_memIhLj65536EE2rdEl(%class.SysCArray1D* %151, i64 %152)
          to label %154 unwind label %68

; <label>:154                                     ; preds = %135
  store i64 %153, i64* %cppVar_2129, align 8
  %155 = load i64* %cppVar_2129, align 8
  %156 = ashr i64 %155, 1
  %157 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 48
  %158 = load i64* %157, align 8
  %159 = and i64 %156, %158
  store i64 %159, i64* %cppVar_2130, align 8
  %160 = load i64* %cppVar_2130, align 8
  %161 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 53
  %162 = load i64* %161, align 8
  %163 = and i64 %160, %162
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %170

; <label>:165                                     ; preds = %154
  %166 = load i64* %cppVar_2130, align 8
  %167 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 55
  %168 = load i64* %167, align 8
  %169 = or i64 %166, %168
  br label %172

; <label>:170                                     ; preds = %154
  %171 = load i64* %cppVar_2130, align 8
  br label %172

; <label>:172                                     ; preds = %170, %165
  %173 = phi i64 [ %169, %165 ], [ %171, %170 ]
  store i64 %173, i64* %cppVar_2131, align 8
  %174 = load i64* %cppVar_2129, align 8
  %175 = ashr i64 %174, 0
  %176 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 40
  %177 = load i64* %176, align 8
  %178 = and i64 %175, %177
  store i64 %178, i64* %cppVar_2132, align 8
  %179 = load i64* %cppVar_2131, align 8
  %180 = shl i64 %179, 1
  %181 = load i64* %cppVar_2132, align 8
  %182 = or i64 %180, %181
  store i64 %182, i64* %cppVar_2133, align 8
  %183 = load i64* %cppVar_2133, align 8
  %184 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %185 = load i64* %184, align 8
  %186 = and i64 %183, %185
  store i64 %186, i64* %cppVar_2133, align 8
  %187 = load i64* %cppVar_2133, align 8
  store i64 %187, i64* %cppVar_2121, align 8
  br label %189

; <label>:188                                     ; preds = %129
  store i64 0, i64* %cppVar_2121, align 8
  br label %189

; <label>:189                                     ; preds = %188, %172
  %190 = load i64* %cppVar_2117, align 8
  %191 = load i64* %cppVar_2121, align 8
  %192 = add nsw i64 %190, %191
  store i64 %192, i64* %cppVar_2134, align 8
  %193 = load i64* %cppVar_2134, align 8
  %194 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %195 = load i64* %194, align 8
  %196 = and i64 %193, %195
  store i64 %196, i64* %cppVar_2134, align 8
  %197 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %198 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2135, %1* %197)
          to label %199 unwind label %68

; <label>:199                                     ; preds = %189
  %200 = load i64* %cppVar_2116, align 8
  %201 = load i64* %cppVar_2134, align 8
  invoke void @_ZN8type_memItLj8EE2wrEll(%1* %cppVar_2135, i64 %200, i64 %201)
          to label %202 unwind label %68

; <label>:202                                     ; preds = %199
  %203 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2114, %1* %cppVar_2135)
          to label %204 unwind label %68

; <label>:204                                     ; preds = %202
  br label %209

; <label>:205                                     ; preds = %93
  %206 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %207 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2114, %1* %206)
          to label %208 unwind label %68

; <label>:208                                     ; preds = %205
  br label %209

; <label>:209                                     ; preds = %208, %204
  %210 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2110, %1* %cppVar_2114)
          to label %211 unwind label %68

; <label>:211                                     ; preds = %209
  br label %351

; <label>:212                                     ; preds = %88
  %213 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %214 = load i64* %213, align 8
  %215 = icmp eq i64 %214, 1
  %216 = zext i1 %215 to i8
  store i8 %216, i8* %cppVar_2138, align 1
  %217 = load i8* %cppVar_2109, align 1
  %218 = trunc i8 %217 to i1
  br i1 %218, label %219, label %222

; <label>:219                                     ; preds = %212
  %220 = load i8* %cppVar_2138, align 1
  %221 = trunc i8 %220 to i1
  br label %222

; <label>:222                                     ; preds = %219, %212
  %223 = phi i1 [ false, %212 ], [ %221, %219 ]
  %224 = zext i1 %223 to i8
  store i8 %224, i8* %cppVar_2139, align 1
  %225 = load i8* %cppVar_2139, align 1
  %226 = trunc i8 %225 to i1
  br i1 %226, label %227, label %278

; <label>:227                                     ; preds = %222
  %228 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %229 = load i64* %228, align 8
  %230 = ashr i64 %229, 0
  %231 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 44
  %232 = load i64* %231, align 8
  %233 = and i64 %230, %232
  store i64 %233, i64* %cppVar_2140, align 8
  %234 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %235 = load i64* %234, align 8
  %236 = ashr i64 %235, 0
  %237 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 44
  %238 = load i64* %237, align 8
  %239 = and i64 %236, %238
  store i64 %239, i64* %cppVar_2141, align 8
  %240 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %241 = load i64* %cppVar_2141, align 8
  %242 = invoke i64 @_ZN8type_memItLj8EE2rdEl(%1* %240, i64 %241)
          to label %243 unwind label %68

; <label>:243                                     ; preds = %227
  store i64 %242, i64* %cppVar_2142, align 8
  %244 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 9
  %245 = load i64* %244, align 8
  %246 = icmp eq i64 %245, 0
  %247 = zext i1 %246 to i8
  store i8 %247, i8* %cppVar_2145, align 1
  %248 = load i8* %cppVar_2145, align 1
  %249 = trunc i8 %248 to i1
  br i1 %249, label %250, label %259

; <label>:250                                     ; preds = %243
  %251 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 21
  %252 = load i64* %251, align 8
  %253 = sub nsw i64 %252, 62
  store i64 %253, i64* %cppVar_2147, align 8
  %254 = load i64* %cppVar_2147, align 8
  %255 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %256 = load i64* %255, align 8
  %257 = and i64 %254, %256
  store i64 %257, i64* %cppVar_2147, align 8
  %258 = load i64* %cppVar_2147, align 8
  store i64 %258, i64* %cppVar_2143, align 8
  br label %262

; <label>:259                                     ; preds = %243
  %260 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 21
  %261 = load i64* %260, align 8
  store i64 %261, i64* %cppVar_2143, align 8
  br label %262

; <label>:262                                     ; preds = %259, %250
  %263 = load i64* %cppVar_2142, align 8
  %264 = load i64* %cppVar_2143, align 8
  %265 = sub nsw i64 %263, %264
  store i64 %265, i64* %cppVar_2148, align 8
  %266 = load i64* %cppVar_2148, align 8
  %267 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 41
  %268 = load i64* %267, align 8
  %269 = and i64 %266, %268
  store i64 %269, i64* %cppVar_2148, align 8
  %270 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %271 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2149, %1* %270)
          to label %272 unwind label %68

; <label>:272                                     ; preds = %262
  %273 = load i64* %cppVar_2140, align 8
  %274 = load i64* %cppVar_2148, align 8
  invoke void @_ZN8type_memItLj8EE2wrEll(%1* %cppVar_2149, i64 %273, i64 %274)
          to label %275 unwind label %68

; <label>:275                                     ; preds = %272
  %276 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2136, %1* %cppVar_2149)
          to label %277 unwind label %68

; <label>:277                                     ; preds = %275
  br label %348

; <label>:278                                     ; preds = %222
  %279 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %280 = load i64* %279, align 8
  %281 = icmp eq i64 %280, 2
  %282 = zext i1 %281 to i8
  store i8 %282, i8* %cppVar_2152, align 1
  %283 = load i8* %cppVar_2109, align 1
  %284 = trunc i8 %283 to i1
  br i1 %284, label %285, label %288

; <label>:285                                     ; preds = %278
  %286 = load i8* %cppVar_2152, align 1
  %287 = trunc i8 %286 to i1
  br label %288

; <label>:288                                     ; preds = %285, %278
  %289 = phi i1 [ false, %278 ], [ %287, %285 ]
  %290 = zext i1 %289 to i8
  store i8 %290, i8* %cppVar_2153, align 1
  %291 = load i8* %cppVar_2153, align 1
  %292 = trunc i8 %291 to i1
  br i1 %292, label %293, label %297

; <label>:293                                     ; preds = %288
  %294 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %295 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2150, %1* %294)
          to label %296 unwind label %68

; <label>:296                                     ; preds = %293
  br label %345

; <label>:297                                     ; preds = %288
  %298 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %299 = load i64* %298, align 8
  %300 = icmp eq i64 %299, 3
  %301 = zext i1 %300 to i8
  store i8 %301, i8* %cppVar_2156, align 1
  %302 = load i8* %cppVar_2109, align 1
  %303 = trunc i8 %302 to i1
  br i1 %303, label %304, label %307

; <label>:304                                     ; preds = %297
  %305 = load i8* %cppVar_2156, align 1
  %306 = trunc i8 %305 to i1
  br label %307

; <label>:307                                     ; preds = %304, %297
  %308 = phi i1 [ false, %297 ], [ %306, %304 ]
  %309 = zext i1 %308 to i8
  store i8 %309, i8* %cppVar_2157, align 1
  %310 = load i8* %cppVar_2157, align 1
  %311 = trunc i8 %310 to i1
  br i1 %311, label %312, label %316

; <label>:312                                     ; preds = %307
  %313 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %314 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2154, %1* %313)
          to label %315 unwind label %68

; <label>:315                                     ; preds = %312
  br label %342

; <label>:316                                     ; preds = %307
  %317 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 17
  %318 = load i64* %317, align 8
  %319 = icmp eq i64 %318, 4
  %320 = zext i1 %319 to i8
  store i8 %320, i8* %cppVar_2160, align 1
  %321 = load i8* %cppVar_2109, align 1
  %322 = trunc i8 %321 to i1
  br i1 %322, label %323, label %326

; <label>:323                                     ; preds = %316
  %324 = load i8* %cppVar_2160, align 1
  %325 = trunc i8 %324 to i1
  br label %326

; <label>:326                                     ; preds = %323, %316
  %327 = phi i1 [ false, %316 ], [ %325, %323 ]
  %328 = zext i1 %327 to i8
  store i8 %328, i8* %cppVar_2161, align 1
  %329 = load i8* %cppVar_2161, align 1
  %330 = trunc i8 %329 to i1
  br i1 %330, label %331, label %335

; <label>:331                                     ; preds = %326
  %332 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %333 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2158, %1* %332)
          to label %334 unwind label %68

; <label>:334                                     ; preds = %331
  br label %339

; <label>:335                                     ; preds = %326
  %336 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %337 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2158, %1* %336)
          to label %338 unwind label %68

; <label>:338                                     ; preds = %335
  br label %339

; <label>:339                                     ; preds = %338, %334
  %340 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2154, %1* %cppVar_2158)
          to label %341 unwind label %68

; <label>:341                                     ; preds = %339
  br label %342

; <label>:342                                     ; preds = %341, %315
  %343 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2150, %1* %cppVar_2154)
          to label %344 unwind label %68

; <label>:344                                     ; preds = %342
  br label %345

; <label>:345                                     ; preds = %344, %296
  %346 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2136, %1* %cppVar_2150)
          to label %347 unwind label %68

; <label>:347                                     ; preds = %345
  br label %348

; <label>:348                                     ; preds = %347, %277
  %349 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2110, %1* %cppVar_2136)
          to label %350 unwind label %68

; <label>:350                                     ; preds = %348
  br label %351

; <label>:351                                     ; preds = %350, %211
  %352 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2107, %1* %cppVar_2110)
          to label %353 unwind label %68

; <label>:353                                     ; preds = %351
  br label %372

; <label>:354                                     ; preds = %71
  %355 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 24
  %356 = load i64* %355, align 8
  %357 = icmp eq i64 %356, 2
  %358 = zext i1 %357 to i8
  store i8 %358, i8* %cppVar_2164, align 1
  %359 = load i8* %cppVar_2164, align 1
  %360 = trunc i8 %359 to i1
  br i1 %360, label %361, label %365

; <label>:361                                     ; preds = %354
  %362 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %363 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2162, %1* %362)
          to label %364 unwind label %68

; <label>:364                                     ; preds = %361
  br label %369

; <label>:365                                     ; preds = %354
  %366 = getelementptr inbounds %class.model_predict* %17, i32 0, i32 35
  %367 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2162, %1* %366)
          to label %368 unwind label %68

; <label>:368                                     ; preds = %365
  br label %369

; <label>:369                                     ; preds = %368, %364
  %370 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %cppVar_2107, %1* %cppVar_2162)
          to label %371 unwind label %68

; <label>:371                                     ; preds = %369
  br label %372

; <label>:372                                     ; preds = %371, %353
  %373 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %agg.result, %1* %cppVar_2107)
          to label %374 unwind label %68

; <label>:374                                     ; preds = %372
  br label %375

; <label>:375                                     ; preds = %374, %37
  store i1 true, i1* %15
  store i32 1, i32* %16
  %376 = load i1* %15
  br i1 %376, label %379, label %377

; <label>:377                                     ; preds = %375
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %agg.result)
          to label %378 unwind label %65

; <label>:378                                     ; preds = %377
  br label %379

; <label>:379                                     ; preds = %378, %375
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2107)
          to label %381 unwind label %62

; <label>:380                                     ; preds = %68
  br label %382

; <label>:381                                     ; preds = %379
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2162)
          to label %384 unwind label %59

; <label>:382                                     ; preds = %380, %65
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2107)
          to label %383 unwind label %412

; <label>:383                                     ; preds = %382
  br label %385

; <label>:384                                     ; preds = %381
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2110)
          to label %387 unwind label %56

; <label>:385                                     ; preds = %383, %62
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2162)
          to label %386 unwind label %412

; <label>:386                                     ; preds = %385
  br label %388

; <label>:387                                     ; preds = %384
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2136)
          to label %390 unwind label %53

; <label>:388                                     ; preds = %386, %59
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2110)
          to label %389 unwind label %412

; <label>:389                                     ; preds = %388
  br label %391

; <label>:390                                     ; preds = %387
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2150)
          to label %393 unwind label %50

; <label>:391                                     ; preds = %389, %56
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2136)
          to label %392 unwind label %412

; <label>:392                                     ; preds = %391
  br label %394

; <label>:393                                     ; preds = %390
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2154)
          to label %396 unwind label %47

; <label>:394                                     ; preds = %392, %53
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2150)
          to label %395 unwind label %412

; <label>:395                                     ; preds = %394
  br label %397

; <label>:396                                     ; preds = %393
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2158)
          to label %399 unwind label %44

; <label>:397                                     ; preds = %395, %50
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2154)
          to label %398 unwind label %412

; <label>:398                                     ; preds = %397
  br label %400

; <label>:399                                     ; preds = %396
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2149)
          to label %402 unwind label %41

; <label>:400                                     ; preds = %398, %47
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2158)
          to label %401 unwind label %412

; <label>:401                                     ; preds = %400
  br label %403

; <label>:402                                     ; preds = %399
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2114)
          to label %405 unwind label %38

; <label>:403                                     ; preds = %401, %44
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2149)
          to label %404 unwind label %412

; <label>:404                                     ; preds = %403
  br label %406

; <label>:405                                     ; preds = %402
  call void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2135)
  ret void

; <label>:406                                     ; preds = %404, %41
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2114)
          to label %407 unwind label %412

; <label>:407                                     ; preds = %406
  br label %408

; <label>:408                                     ; preds = %407, %38
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2135)
          to label %409 unwind label %412

; <label>:409                                     ; preds = %408
  br label %410

; <label>:410                                     ; preds = %409
  %411 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %411) noreturn
  unreachable

; <label>:412                                     ; preds = %408, %406, %403, %400, %397, %394, %391, %388, %385, %382, %68
  %413 = call i8* @llvm.eh.exception() nounwind
  %414 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %413, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memItLj8EEC1Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  call void @_ZN8type_memItLj8EEC2Ev(%1* %2)
  ret void
}

define linkonce_odr %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %this, %1* %r) align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  store %1* %r, %1** %2, align 8
  %3 = load %1** %1
  %4 = getelementptr inbounds %1* %3, i32 0, i32 0
  %5 = load i16** %4, align 8
  %6 = bitcast i16* %5 to i8*
  %7 = load %1** %2
  %8 = getelementptr inbounds %1* %7, i32 0, i32 0
  %9 = load i16** %8, align 8
  %10 = bitcast i16* %9 to i8*
  call void @__CPROVER_array_copy(i8* %6, i8* %10)
  ret %1* %3
}

define linkonce_odr void @_ZN8type_memItLj8EE2wrEll(%1* %this, i64 %addr, i64 %data) nounwind align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %addr, i64* %2, align 8
  store i64 %data, i64* %3, align 8
  %4 = load %1** %1
  %5 = load i64* %3, align 8
  %6 = trunc i64 %5 to i16
  %7 = load i64* %2, align 8
  %8 = getelementptr inbounds %1* %4, i32 0, i32 0
  %9 = load i16** %8, align 8
  %10 = getelementptr inbounds i16* %9, i64 %7
  store i16 %6, i16* %10
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EED1Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  call void @_ZN8type_memItLj8EED2Ev(%1* %2)
  ret void
}

define i64 @_ZN13model_predict24cppUpdateFun_wr_completeElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1874 = alloca i64, align 8
  %cppVar_1854 = alloca i64, align 8
  %cppVar_1855 = alloca i8, align 1
  %cppVar_1857 = alloca i64, align 8
  %cppVar_1858 = alloca i8, align 1
  %cppVar_1860 = alloca i64, align 8
  %cppVar_1861 = alloca i8, align 1
  %cppVar_1876 = alloca i64, align 8
  %cppVar_1877 = alloca i8, align 1
  %cppVar_1863 = alloca i64, align 8
  %cppVar_1864 = alloca i64, align 8
  %cppVar_1865 = alloca i8, align 1
  %cppVar_1866 = alloca i64, align 8
  %cppVar_1867 = alloca i64, align 8
  %cppVar_1868 = alloca i64, align 8
  %cppVar_1869 = alloca i8, align 1
  %cppVar_1870 = alloca i8, align 1
  %cppVar_1871 = alloca i64, align 8
  %cppVar_1872 = alloca i8, align 1
  %cppVar_1873 = alloca i8, align 1
  %cppVar_1862 = alloca i64, align 8
  %cppVar_1879 = alloca i64, align 8
  %cppVar_1880 = alloca i8, align 1
  %cppVar_1881 = alloca i64, align 8
  %cppVar_1882 = alloca i8, align 1
  %cppVar_1883 = alloca i8, align 1
  %cppVar_1878 = alloca i64, align 8
  %cppVar_1875 = alloca i64, align 8
  %cppVar_1859 = alloca i64, align 8
  %cppVar_1856 = alloca i64, align 8
  %cppVar_1853 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1855, align 1
  %18 = load i8* %cppVar_1855, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1853, align 8
  br label %132

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1858, align 1
  %28 = load i8* %cppVar_1858, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1856, align 8
  br label %130

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 3
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1861, align 1
  %38 = load i8* %cppVar_1861, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %91

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = add nsw i64 %42, 5
  store i64 %43, i64* %cppVar_1864, align 8
  %44 = load i64* %cppVar_1864, align 8
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %46 = load i64* %45, align 8
  %47 = and i64 %44, %46
  store i64 %47, i64* %cppVar_1864, align 8
  %48 = load i64* %cppVar_1864, align 8
  %49 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_1865, align 1
  %53 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %54 = load i64* %53, align 8
  %55 = add nsw i64 %54, 5
  store i64 %55, i64* %cppVar_1867, align 8
  %56 = load i64* %cppVar_1867, align 8
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %58 = load i64* %57, align 8
  %59 = and i64 %56, %58
  store i64 %59, i64* %cppVar_1867, align 8
  %60 = load i64* %cppVar_1867, align 8
  %61 = icmp sge i64 %60, 500
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %cppVar_1869, align 1
  %63 = load i8* %cppVar_1865, align 1
  %64 = trunc i8 %63 to i1
  br i1 %64, label %68, label %65

; <label>:65                                      ; preds = %40
  %66 = load i8* %cppVar_1869, align 1
  %67 = trunc i8 %66 to i1
  br label %68

; <label>:68                                      ; preds = %65, %40
  %69 = phi i1 [ true, %40 ], [ %67, %65 ]
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_1870, align 1
  %71 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %72 = load i64* %71, align 8
  %73 = icmp eq i64 %72, 4
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_1872, align 1
  %75 = load i8* %cppVar_1870, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %80

; <label>:77                                      ; preds = %68
  %78 = load i8* %cppVar_1872, align 1
  %79 = trunc i8 %78 to i1
  br label %80

; <label>:80                                      ; preds = %77, %68
  %81 = phi i1 [ false, %68 ], [ %79, %77 ]
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_1873, align 1
  %83 = load i8* %cppVar_1873, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %86

; <label>:85                                      ; preds = %80
  store i64 0, i64* %cppVar_1862, align 8
  br label %89

; <label>:86                                      ; preds = %80
  %87 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %88 = load i64* %87, align 8
  store i64 %88, i64* %cppVar_1862, align 8
  br label %89

; <label>:89                                      ; preds = %86, %85
  %90 = load i64* %cppVar_1862, align 8
  store i64 %90, i64* %cppVar_1859, align 8
  br label %128

; <label>:91                                      ; preds = %33
  %92 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %93 = load i64* %92, align 8
  %94 = icmp eq i64 %93, 2
  %95 = zext i1 %94 to i8
  store i8 %95, i8* %cppVar_1877, align 1
  %96 = load i8* %cppVar_1877, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %123

; <label>:98                                      ; preds = %91
  %99 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %100 = load i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %cppVar_1880, align 1
  %103 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %104 = load i64* %103, align 8
  %105 = icmp eq i64 %104, 1
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %cppVar_1882, align 1
  %107 = load i8* %cppVar_1880, align 1
  %108 = trunc i8 %107 to i1
  br i1 %108, label %109, label %112

; <label>:109                                     ; preds = %98
  %110 = load i8* %cppVar_1882, align 1
  %111 = trunc i8 %110 to i1
  br label %112

; <label>:112                                     ; preds = %109, %98
  %113 = phi i1 [ false, %98 ], [ %111, %109 ]
  %114 = zext i1 %113 to i8
  store i8 %114, i8* %cppVar_1883, align 1
  %115 = load i8* %cppVar_1883, align 1
  %116 = trunc i8 %115 to i1
  br i1 %116, label %117, label %118

; <label>:117                                     ; preds = %112
  store i64 0, i64* %cppVar_1878, align 8
  br label %121

; <label>:118                                     ; preds = %112
  %119 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %120 = load i64* %119, align 8
  store i64 %120, i64* %cppVar_1878, align 8
  br label %121

; <label>:121                                     ; preds = %118, %117
  %122 = load i64* %cppVar_1878, align 8
  store i64 %122, i64* %cppVar_1875, align 8
  br label %126

; <label>:123                                     ; preds = %91
  %124 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 36
  %125 = load i64* %124, align 8
  store i64 %125, i64* %cppVar_1875, align 8
  br label %126

; <label>:126                                     ; preds = %123, %121
  %127 = load i64* %cppVar_1875, align 8
  store i64 %127, i64* %cppVar_1859, align 8
  br label %128

; <label>:128                                     ; preds = %126, %89
  %129 = load i64* %cppVar_1859, align 8
  store i64 %129, i64* %cppVar_1856, align 8
  br label %130

; <label>:130                                     ; preds = %128, %30
  %131 = load i64* %cppVar_1856, align 8
  store i64 %131, i64* %cppVar_1853, align 8
  br label %132

; <label>:132                                     ; preds = %130, %20
  %133 = load i64* %cppVar_1853, align 8
  ret i64 %133
}

define i64 @_ZN13model_predict21cppUpdateFun_wr_indexElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1886 = alloca i64, align 8
  %cppVar_1887 = alloca i8, align 1
  %cppVar_1889 = alloca i64, align 8
  %cppVar_1890 = alloca i8, align 1
  %cppVar_1892 = alloca i64, align 8
  %cppVar_1893 = alloca i8, align 1
  %cppVar_1911 = alloca i64, align 8
  %cppVar_1912 = alloca i8, align 1
  %cppVar_1895 = alloca i64, align 8
  %cppVar_1896 = alloca i64, align 8
  %cppVar_1897 = alloca i8, align 1
  %cppVar_1898 = alloca i64, align 8
  %cppVar_1899 = alloca i64, align 8
  %cppVar_1900 = alloca i64, align 8
  %cppVar_1901 = alloca i8, align 1
  %cppVar_1902 = alloca i8, align 1
  %cppVar_1903 = alloca i64, align 8
  %cppVar_1904 = alloca i8, align 1
  %cppVar_1905 = alloca i8, align 1
  %cppVar_1907 = alloca i64, align 8
  %cppVar_1908 = alloca i64, align 8
  %cppVar_1909 = alloca i64, align 8
  %cppVar_1894 = alloca i64, align 8
  %cppVar_1906 = alloca i64, align 8
  %cppVar_1910 = alloca i64, align 8
  %cppVar_1891 = alloca i64, align 8
  %cppVar_1888 = alloca i64, align 8
  %cppVar_1885 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1887, align 1
  %18 = load i8* %cppVar_1887, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 37
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1885, align 8
  br label %132

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1890, align 1
  %28 = load i8* %cppVar_1890, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 37
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1888, align 8
  br label %130

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 3
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1893, align 1
  %38 = load i8* %cppVar_1893, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %113

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = add nsw i64 %42, 5
  store i64 %43, i64* %cppVar_1896, align 8
  %44 = load i64* %cppVar_1896, align 8
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %46 = load i64* %45, align 8
  %47 = and i64 %44, %46
  store i64 %47, i64* %cppVar_1896, align 8
  %48 = load i64* %cppVar_1896, align 8
  %49 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_1897, align 1
  %53 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %54 = load i64* %53, align 8
  %55 = add nsw i64 %54, 5
  store i64 %55, i64* %cppVar_1899, align 8
  %56 = load i64* %cppVar_1899, align 8
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %58 = load i64* %57, align 8
  %59 = and i64 %56, %58
  store i64 %59, i64* %cppVar_1899, align 8
  %60 = load i64* %cppVar_1899, align 8
  %61 = icmp sge i64 %60, 500
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %cppVar_1901, align 1
  %63 = load i8* %cppVar_1897, align 1
  %64 = trunc i8 %63 to i1
  br i1 %64, label %68, label %65

; <label>:65                                      ; preds = %40
  %66 = load i8* %cppVar_1901, align 1
  %67 = trunc i8 %66 to i1
  br label %68

; <label>:68                                      ; preds = %65, %40
  %69 = phi i1 [ true, %40 ], [ %67, %65 ]
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_1902, align 1
  %71 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %72 = load i64* %71, align 8
  %73 = icmp eq i64 %72, 4
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_1904, align 1
  %75 = load i8* %cppVar_1902, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %80

; <label>:77                                      ; preds = %68
  %78 = load i8* %cppVar_1904, align 1
  %79 = trunc i8 %78 to i1
  br label %80

; <label>:80                                      ; preds = %77, %68
  %81 = phi i1 [ false, %68 ], [ %79, %77 ]
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_1905, align 1
  %83 = load i8* %cppVar_1905, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %108

; <label>:85                                      ; preds = %80
  %86 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 13
  %87 = load i64* %86, align 8
  %88 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %89 = load i64* %88, align 8
  %90 = and i64 %87, %89
  store i64 %90, i64* %cppVar_1906, align 8
  %91 = load i64* %cppVar_1906, align 8
  %92 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 45
  %93 = load i64* %92, align 8
  %94 = and i64 %91, %93
  store i64 %94, i64* %cppVar_1907, align 8
  %95 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 7
  %96 = load i64* %95, align 8
  %97 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %98 = load i64* %97, align 8
  %99 = and i64 %96, %98
  store i64 %99, i64* %cppVar_1908, align 8
  %100 = load i64* %cppVar_1907, align 8
  %101 = load i64* %cppVar_1908, align 8
  %102 = mul nsw i64 %100, %101
  store i64 %102, i64* %cppVar_1909, align 8
  %103 = load i64* %cppVar_1909, align 8
  %104 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 45
  %105 = load i64* %104, align 8
  %106 = and i64 %103, %105
  store i64 %106, i64* %cppVar_1909, align 8
  %107 = load i64* %cppVar_1909, align 8
  store i64 %107, i64* %cppVar_1894, align 8
  br label %111

; <label>:108                                     ; preds = %80
  %109 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 37
  %110 = load i64* %109, align 8
  store i64 %110, i64* %cppVar_1894, align 8
  br label %111

; <label>:111                                     ; preds = %108, %85
  %112 = load i64* %cppVar_1894, align 8
  store i64 %112, i64* %cppVar_1891, align 8
  br label %128

; <label>:113                                     ; preds = %33
  %114 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %115 = load i64* %114, align 8
  %116 = icmp eq i64 %115, 2
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %cppVar_1912, align 1
  %118 = load i8* %cppVar_1912, align 1
  %119 = trunc i8 %118 to i1
  br i1 %119, label %120, label %123

; <label>:120                                     ; preds = %113
  %121 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 37
  %122 = load i64* %121, align 8
  store i64 %122, i64* %cppVar_1910, align 8
  br label %126

; <label>:123                                     ; preds = %113
  %124 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 37
  %125 = load i64* %124, align 8
  store i64 %125, i64* %cppVar_1910, align 8
  br label %126

; <label>:126                                     ; preds = %123, %120
  %127 = load i64* %cppVar_1910, align 8
  store i64 %127, i64* %cppVar_1891, align 8
  br label %128

; <label>:128                                     ; preds = %126, %111
  %129 = load i64* %cppVar_1891, align 8
  store i64 %129, i64* %cppVar_1888, align 8
  br label %130

; <label>:130                                     ; preds = %128, %30
  %131 = load i64* %cppVar_1888, align 8
  store i64 %131, i64* %cppVar_1885, align 8
  br label %132

; <label>:132                                     ; preds = %130, %20
  %133 = load i64* %cppVar_1885, align 8
  ret i64 %133
}

define i64 @_ZN13model_predict22cppUpdateFun_wr_lengthElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1915 = alloca i64, align 8
  %cppVar_1916 = alloca i8, align 1
  %cppVar_1918 = alloca i64, align 8
  %cppVar_1919 = alloca i8, align 1
  %cppVar_1921 = alloca i64, align 8
  %cppVar_1922 = alloca i8, align 1
  %cppVar_1938 = alloca i64, align 8
  %cppVar_1939 = alloca i8, align 1
  %cppVar_1924 = alloca i64, align 8
  %cppVar_1925 = alloca i64, align 8
  %cppVar_1926 = alloca i8, align 1
  %cppVar_1927 = alloca i64, align 8
  %cppVar_1928 = alloca i64, align 8
  %cppVar_1929 = alloca i64, align 8
  %cppVar_1930 = alloca i8, align 1
  %cppVar_1931 = alloca i8, align 1
  %cppVar_1932 = alloca i64, align 8
  %cppVar_1933 = alloca i8, align 1
  %cppVar_1934 = alloca i8, align 1
  %cppVar_1936 = alloca i64, align 8
  %cppVar_1923 = alloca i64, align 8
  %cppVar_1935 = alloca i64, align 8
  %cppVar_1937 = alloca i64, align 8
  %cppVar_1920 = alloca i64, align 8
  %cppVar_1917 = alloca i64, align 8
  %cppVar_1914 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1916, align 1
  %18 = load i8* %cppVar_1916, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 38
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1914, align 8
  br label %120

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1919, align 1
  %28 = load i8* %cppVar_1919, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 38
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1917, align 8
  br label %118

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 3
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1922, align 1
  %38 = load i8* %cppVar_1922, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %101

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = add nsw i64 %42, 5
  store i64 %43, i64* %cppVar_1925, align 8
  %44 = load i64* %cppVar_1925, align 8
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %46 = load i64* %45, align 8
  %47 = and i64 %44, %46
  store i64 %47, i64* %cppVar_1925, align 8
  %48 = load i64* %cppVar_1925, align 8
  %49 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_1926, align 1
  %53 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %54 = load i64* %53, align 8
  %55 = add nsw i64 %54, 5
  store i64 %55, i64* %cppVar_1928, align 8
  %56 = load i64* %cppVar_1928, align 8
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %58 = load i64* %57, align 8
  %59 = and i64 %56, %58
  store i64 %59, i64* %cppVar_1928, align 8
  %60 = load i64* %cppVar_1928, align 8
  %61 = icmp sge i64 %60, 500
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %cppVar_1930, align 1
  %63 = load i8* %cppVar_1926, align 1
  %64 = trunc i8 %63 to i1
  br i1 %64, label %68, label %65

; <label>:65                                      ; preds = %40
  %66 = load i8* %cppVar_1930, align 1
  %67 = trunc i8 %66 to i1
  br label %68

; <label>:68                                      ; preds = %65, %40
  %69 = phi i1 [ true, %40 ], [ %67, %65 ]
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_1931, align 1
  %71 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %72 = load i64* %71, align 8
  %73 = icmp eq i64 %72, 4
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_1933, align 1
  %75 = load i8* %cppVar_1931, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %80

; <label>:77                                      ; preds = %68
  %78 = load i8* %cppVar_1933, align 1
  %79 = trunc i8 %78 to i1
  br label %80

; <label>:80                                      ; preds = %77, %68
  %81 = phi i1 [ false, %68 ], [ %79, %77 ]
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_1934, align 1
  %83 = load i8* %cppVar_1934, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %96

; <label>:85                                      ; preds = %80
  %86 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 13
  %87 = load i64* %86, align 8
  %88 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %89 = load i64* %88, align 8
  %90 = and i64 %87, %89
  store i64 %90, i64* %cppVar_1935, align 8
  %91 = load i64* %cppVar_1935, align 8
  %92 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 45
  %93 = load i64* %92, align 8
  %94 = and i64 %91, %93
  store i64 %94, i64* %cppVar_1936, align 8
  %95 = load i64* %cppVar_1936, align 8
  store i64 %95, i64* %cppVar_1923, align 8
  br label %99

; <label>:96                                      ; preds = %80
  %97 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 38
  %98 = load i64* %97, align 8
  store i64 %98, i64* %cppVar_1923, align 8
  br label %99

; <label>:99                                      ; preds = %96, %85
  %100 = load i64* %cppVar_1923, align 8
  store i64 %100, i64* %cppVar_1920, align 8
  br label %116

; <label>:101                                     ; preds = %33
  %102 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %103 = load i64* %102, align 8
  %104 = icmp eq i64 %103, 2
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %cppVar_1939, align 1
  %106 = load i8* %cppVar_1939, align 1
  %107 = trunc i8 %106 to i1
  br i1 %107, label %108, label %111

; <label>:108                                     ; preds = %101
  %109 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 38
  %110 = load i64* %109, align 8
  store i64 %110, i64* %cppVar_1937, align 8
  br label %114

; <label>:111                                     ; preds = %101
  %112 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 38
  %113 = load i64* %112, align 8
  store i64 %113, i64* %cppVar_1937, align 8
  br label %114

; <label>:114                                     ; preds = %111, %108
  %115 = load i64* %cppVar_1937, align 8
  store i64 %115, i64* %cppVar_1920, align 8
  br label %116

; <label>:116                                     ; preds = %114, %99
  %117 = load i64* %cppVar_1920, align 8
  store i64 %117, i64* %cppVar_1917, align 8
  br label %118

; <label>:118                                     ; preds = %116, %30
  %119 = load i64* %cppVar_1917, align 8
  store i64 %119, i64* %cppVar_1914, align 8
  br label %120

; <label>:120                                     ; preds = %118, %20
  %121 = load i64* %cppVar_1914, align 8
  ret i64 %121
}

define i64 @_ZN13model_predict23cppUpdateFun_wr_requestElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1962 = alloca i64, align 8
  %cppVar_1942 = alloca i64, align 8
  %cppVar_1943 = alloca i8, align 1
  %cppVar_1945 = alloca i64, align 8
  %cppVar_1946 = alloca i8, align 1
  %cppVar_1948 = alloca i64, align 8
  %cppVar_1949 = alloca i8, align 1
  %cppVar_1964 = alloca i64, align 8
  %cppVar_1965 = alloca i8, align 1
  %cppVar_1951 = alloca i64, align 8
  %cppVar_1952 = alloca i64, align 8
  %cppVar_1953 = alloca i8, align 1
  %cppVar_1954 = alloca i64, align 8
  %cppVar_1955 = alloca i64, align 8
  %cppVar_1956 = alloca i64, align 8
  %cppVar_1957 = alloca i8, align 1
  %cppVar_1958 = alloca i8, align 1
  %cppVar_1959 = alloca i64, align 8
  %cppVar_1960 = alloca i8, align 1
  %cppVar_1961 = alloca i8, align 1
  %cppVar_1950 = alloca i64, align 8
  %cppVar_1963 = alloca i64, align 8
  %cppVar_1947 = alloca i64, align 8
  %cppVar_1944 = alloca i64, align 8
  %cppVar_1941 = alloca i64, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_predict** %1
  %14 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_1943, align 1
  %18 = load i8* %cppVar_1943, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %22 = load i64* %21, align 8
  store i64 %22, i64* %cppVar_1941, align 8
  br label %110

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = icmp eq i64 %25, 1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %cppVar_1946, align 1
  %28 = load i8* %cppVar_1946, align 1
  %29 = trunc i8 %28 to i1
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %32 = load i64* %31, align 8
  store i64 %32, i64* %cppVar_1944, align 8
  br label %108

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %35 = load i64* %34, align 8
  %36 = icmp eq i64 %35, 3
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_1949, align 1
  %38 = load i8* %cppVar_1949, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %91

; <label>:40                                      ; preds = %33
  %41 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %42 = load i64* %41, align 8
  %43 = add nsw i64 %42, 5
  store i64 %43, i64* %cppVar_1952, align 8
  %44 = load i64* %cppVar_1952, align 8
  %45 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %46 = load i64* %45, align 8
  %47 = and i64 %44, %46
  store i64 %47, i64* %cppVar_1952, align 8
  %48 = load i64* %cppVar_1952, align 8
  %49 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 16
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %cppVar_1953, align 1
  %53 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 25
  %54 = load i64* %53, align 8
  %55 = add nsw i64 %54, 5
  store i64 %55, i64* %cppVar_1955, align 8
  %56 = load i64* %cppVar_1955, align 8
  %57 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 41
  %58 = load i64* %57, align 8
  %59 = and i64 %56, %58
  store i64 %59, i64* %cppVar_1955, align 8
  %60 = load i64* %cppVar_1955, align 8
  %61 = icmp sge i64 %60, 500
  %62 = zext i1 %61 to i8
  store i8 %62, i8* %cppVar_1957, align 1
  %63 = load i8* %cppVar_1953, align 1
  %64 = trunc i8 %63 to i1
  br i1 %64, label %68, label %65

; <label>:65                                      ; preds = %40
  %66 = load i8* %cppVar_1957, align 1
  %67 = trunc i8 %66 to i1
  br label %68

; <label>:68                                      ; preds = %65, %40
  %69 = phi i1 [ true, %40 ], [ %67, %65 ]
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %cppVar_1958, align 1
  %71 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 9
  %72 = load i64* %71, align 8
  %73 = icmp eq i64 %72, 4
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %cppVar_1960, align 1
  %75 = load i8* %cppVar_1958, align 1
  %76 = trunc i8 %75 to i1
  br i1 %76, label %77, label %80

; <label>:77                                      ; preds = %68
  %78 = load i8* %cppVar_1960, align 1
  %79 = trunc i8 %78 to i1
  br label %80

; <label>:80                                      ; preds = %77, %68
  %81 = phi i1 [ false, %68 ], [ %79, %77 ]
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %cppVar_1961, align 1
  %83 = load i8* %cppVar_1961, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %85, label %86

; <label>:85                                      ; preds = %80
  store i64 1, i64* %cppVar_1950, align 8
  br label %89

; <label>:86                                      ; preds = %80
  %87 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %88 = load i64* %87, align 8
  store i64 %88, i64* %cppVar_1950, align 8
  br label %89

; <label>:89                                      ; preds = %86, %85
  %90 = load i64* %cppVar_1950, align 8
  store i64 %90, i64* %cppVar_1947, align 8
  br label %106

; <label>:91                                      ; preds = %33
  %92 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 24
  %93 = load i64* %92, align 8
  %94 = icmp eq i64 %93, 2
  %95 = zext i1 %94 to i8
  store i8 %95, i8* %cppVar_1965, align 1
  %96 = load i8* %cppVar_1965, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %101

; <label>:98                                      ; preds = %91
  %99 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %100 = load i64* %99, align 8
  store i64 %100, i64* %cppVar_1963, align 8
  br label %104

; <label>:101                                     ; preds = %91
  %102 = getelementptr inbounds %class.model_predict* %13, i32 0, i32 39
  %103 = load i64* %102, align 8
  store i64 %103, i64* %cppVar_1963, align 8
  br label %104

; <label>:104                                     ; preds = %101, %98
  %105 = load i64* %cppVar_1963, align 8
  store i64 %105, i64* %cppVar_1947, align 8
  br label %106

; <label>:106                                     ; preds = %104, %89
  %107 = load i64* %cppVar_1947, align 8
  store i64 %107, i64* %cppVar_1944, align 8
  br label %108

; <label>:108                                     ; preds = %106, %30
  %109 = load i64* %cppVar_1944, align 8
  store i64 %109, i64* %cppVar_1941, align 8
  br label %110

; <label>:110                                     ; preds = %108, %20
  %111 = load i64* %cppVar_1941, align 8
  ret i64 %111
}

define void @_ZN13model_predict6updateElllllllllll(%class.model_predict* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_1299 = alloca i64, align 8
  %cppVar_1323 = alloca i64, align 8
  %cppVar_1353 = alloca i64, align 8
  %cppVar_1377 = alloca i64, align 8
  %cppVar_1426 = alloca i64, align 8
  %cppVar_1479 = alloca i64, align 8
  %cppVar_1522 = alloca i64, align 8
  %cppVar_1539 = alloca i64, align 8
  %cppVar_1601 = alloca i64, align 8
  %cppVar_1665 = alloca i64, align 8
  %cppVar_1722 = alloca i64, align 8
  %cppVar_1771 = alloca i64, align 8
  %cppVar_1788 = alloca i64, align 8
  %cppVar_1828 = alloca i64, align 8
  %cppVar_1852 = alloca i64, align 8
  %cppVar_1884 = alloca i64, align 8
  %cppVar_1913 = alloca i64, align 8
  %cppVar_1940 = alloca i64, align 8
  %cppVar_1966 = alloca i64, align 8
  %cppVar_2021 = alloca %class.SysCArray1D, align 8
  %cppVar_2056 = alloca %0, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %cppVar_2065 = alloca %class.SysCArray1D, align 8
  %cppVar_2103 = alloca %class.SysCArray1D, align 8
  %cppVar_2165 = alloca %1, align 8
  %15 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %16 = load %class.model_predict** %1
  %17 = load i64* %2, align 8
  %18 = load i64* %3, align 8
  %19 = load i64* %4, align 8
  %20 = load i64* %5, align 8
  %21 = load i64* %6, align 8
  %22 = load i64* %7, align 8
  %23 = load i64* %8, align 8
  %24 = load i64* %9, align 8
  %25 = load i64* %10, align 8
  %26 = load i64* %11, align 8
  %27 = load i64* %12, align 8
  %28 = call i64 @_ZN13model_predict18cppUpdateFun_countElllllllllll(%class.model_predict* %16, i64 %17, i64 %18, i64 %19, i64 %20, i64 %21, i64 %22, i64 %23, i64 %24, i64 %25, i64 %26, i64 %27)
  store i64 %28, i64* %cppVar_1299, align 8
  %29 = load i64* %2, align 8
  %30 = load i64* %3, align 8
  %31 = load i64* %4, align 8
  %32 = load i64* %5, align 8
  %33 = load i64* %6, align 8
  %34 = load i64* %7, align 8
  %35 = load i64* %8, align 8
  %36 = load i64* %9, align 8
  %37 = load i64* %10, align 8
  %38 = load i64* %11, align 8
  %39 = load i64* %12, align 8
  %40 = call i64 @_ZN13model_predict17cppUpdateFun_doneElllllllllll(%class.model_predict* %16, i64 %29, i64 %30, i64 %31, i64 %32, i64 %33, i64 %34, i64 %35, i64 %36, i64 %37, i64 %38, i64 %39)
  store i64 %40, i64* %cppVar_1323, align 8
  %41 = load i64* %2, align 8
  %42 = load i64* %3, align 8
  %43 = load i64* %4, align 8
  %44 = load i64* %5, align 8
  %45 = load i64* %6, align 8
  %46 = load i64* %7, align 8
  %47 = load i64* %8, align 8
  %48 = load i64* %9, align 8
  %49 = load i64* %10, align 8
  %50 = load i64* %11, align 8
  %51 = load i64* %12, align 8
  %52 = call i64 @_ZN13model_predict24cppUpdateFun_expectationElllllllllll(%class.model_predict* %16, i64 %41, i64 %42, i64 %43, i64 %44, i64 %45, i64 %46, i64 %47, i64 %48, i64 %49, i64 %50, i64 %51)
  store i64 %52, i64* %cppVar_1353, align 8
  %53 = load i64* %2, align 8
  %54 = load i64* %3, align 8
  %55 = load i64* %4, align 8
  %56 = load i64* %5, align 8
  %57 = load i64* %6, align 8
  %58 = load i64* %7, align 8
  %59 = load i64* %8, align 8
  %60 = load i64* %9, align 8
  %61 = load i64* %10, align 8
  %62 = load i64* %11, align 8
  %63 = load i64* %12, align 8
  %64 = call i64 @_ZN13model_predict18cppUpdateFun_indexElllllllllll(%class.model_predict* %16, i64 %53, i64 %54, i64 %55, i64 %56, i64 %57, i64 %58, i64 %59, i64 %60, i64 %61, i64 %62, i64 %63)
  store i64 %64, i64* %cppVar_1377, align 8
  %65 = load i64* %2, align 8
  %66 = load i64* %3, align 8
  %67 = load i64* %4, align 8
  %68 = load i64* %5, align 8
  %69 = load i64* %6, align 8
  %70 = load i64* %7, align 8
  %71 = load i64* %8, align 8
  %72 = load i64* %9, align 8
  %73 = load i64* %10, align 8
  %74 = load i64* %11, align 8
  %75 = load i64* %12, align 8
  %76 = call i64 @_ZN13model_predict19cppUpdateFun_jstateElllllllllll(%class.model_predict* %16, i64 %65, i64 %66, i64 %67, i64 %68, i64 %69, i64 %70, i64 %71, i64 %72, i64 %73, i64 %74, i64 %75)
  store i64 %76, i64* %cppVar_1426, align 8
  %77 = load i64* %2, align 8
  %78 = load i64* %3, align 8
  %79 = load i64* %4, align 8
  %80 = load i64* %5, align 8
  %81 = load i64* %6, align 8
  %82 = load i64* %7, align 8
  %83 = load i64* %8, align 8
  %84 = load i64* %9, align 8
  %85 = load i64* %10, align 8
  %86 = load i64* %11, align 8
  %87 = load i64* %12, align 8
  %88 = call i64 @_ZN13model_predict21cppUpdateFun_per_v_pcElllllllllll(%class.model_predict* %16, i64 %77, i64 %78, i64 %79, i64 %80, i64 %81, i64 %82, i64 %83, i64 %84, i64 %85, i64 %86, i64 %87)
  store i64 %88, i64* %cppVar_1479, align 8
  %89 = load i64* %2, align 8
  %90 = load i64* %3, align 8
  %91 = load i64* %4, align 8
  %92 = load i64* %5, align 8
  %93 = load i64* %6, align 8
  %94 = load i64* %7, align 8
  %95 = load i64* %8, align 8
  %96 = load i64* %9, align 8
  %97 = load i64* %10, align 8
  %98 = load i64* %11, align 8
  %99 = load i64* %12, align 8
  %100 = call i64 @_ZN13model_predict26cppUpdateFun_predict_h_cntElllllllllll(%class.model_predict* %16, i64 %89, i64 %90, i64 %91, i64 %92, i64 %93, i64 %94, i64 %95, i64 %96, i64 %97, i64 %98, i64 %99)
  store i64 %100, i64* %cppVar_1522, align 8
  %101 = load i64* %2, align 8
  %102 = load i64* %3, align 8
  %103 = load i64* %4, align 8
  %104 = load i64* %5, align 8
  %105 = load i64* %6, align 8
  %106 = load i64* %7, align 8
  %107 = load i64* %8, align 8
  %108 = load i64* %9, align 8
  %109 = load i64* %10, align 8
  %110 = load i64* %11, align 8
  %111 = load i64* %12, align 8
  %112 = call i64 @_ZN13model_predict31cppUpdateFun_predict_input_doneElllllllllll(%class.model_predict* %16, i64 %101, i64 %102, i64 %103, i64 %104, i64 %105, i64 %106, i64 %107, i64 %108, i64 %109, i64 %110, i64 %111)
  store i64 %112, i64* %cppVar_1539, align 8
  %113 = load i64* %2, align 8
  %114 = load i64* %3, align 8
  %115 = load i64* %4, align 8
  %116 = load i64* %5, align 8
  %117 = load i64* %6, align 8
  %118 = load i64* %7, align 8
  %119 = load i64* %8, align 8
  %120 = load i64* %9, align 8
  %121 = load i64* %10, align 8
  %122 = load i64* %11, align 8
  %123 = load i64* %12, align 8
  %124 = call i64 @_ZN13model_predict24cppUpdateFun_predict_maxElllllllllll(%class.model_predict* %16, i64 %113, i64 %114, i64 %115, i64 %116, i64 %117, i64 %118, i64 %119, i64 %120, i64 %121, i64 %122, i64 %123)
  store i64 %124, i64* %cppVar_1601, align 8
  %125 = load i64* %2, align 8
  %126 = load i64* %3, align 8
  %127 = load i64* %4, align 8
  %128 = load i64* %5, align 8
  %129 = load i64* %6, align 8
  %130 = load i64* %7, align 8
  %131 = load i64* %8, align 8
  %132 = load i64* %9, align 8
  %133 = load i64* %10, align 8
  %134 = load i64* %11, align 8
  %135 = load i64* %12, align 8
  %136 = call i64 @_ZN13model_predict24cppUpdateFun_predict_sumElllllllllll(%class.model_predict* %16, i64 %125, i64 %126, i64 %127, i64 %128, i64 %129, i64 %130, i64 %131, i64 %132, i64 %133, i64 %134, i64 %135)
  store i64 %136, i64* %cppVar_1665, align 8
  %137 = load i64* %2, align 8
  %138 = load i64* %3, align 8
  %139 = load i64* %4, align 8
  %140 = load i64* %5, align 8
  %141 = load i64* %6, align 8
  %142 = load i64* %7, align 8
  %143 = load i64* %8, align 8
  %144 = load i64* %9, align 8
  %145 = load i64* %10, align 8
  %146 = load i64* %11, align 8
  %147 = load i64* %12, align 8
  %148 = call i64 @_ZN13model_predict24cppUpdateFun_predict_upcElllllllllll(%class.model_predict* %16, i64 %137, i64 %138, i64 %139, i64 %140, i64 %141, i64 %142, i64 %143, i64 %144, i64 %145, i64 %146, i64 %147)
  store i64 %148, i64* %cppVar_1722, align 8
  %149 = load i64* %2, align 8
  %150 = load i64* %3, align 8
  %151 = load i64* %4, align 8
  %152 = load i64* %5, align 8
  %153 = load i64* %6, align 8
  %154 = load i64* %7, align 8
  %155 = load i64* %8, align 8
  %156 = load i64* %9, align 8
  %157 = load i64* %10, align 8
  %158 = load i64* %11, align 8
  %159 = load i64* %12, align 8
  %160 = call i64 @_ZN13model_predict26cppUpdateFun_predict_v_cntElllllllllll(%class.model_predict* %16, i64 %149, i64 %150, i64 %151, i64 %152, i64 %153, i64 %154, i64 %155, i64 %156, i64 %157, i64 %158, i64 %159)
  store i64 %160, i64* %cppVar_1771, align 8
  %161 = load i64* %2, align 8
  %162 = load i64* %3, align 8
  %163 = load i64* %4, align 8
  %164 = load i64* %5, align 8
  %165 = load i64* %6, align 8
  %166 = load i64* %7, align 8
  %167 = load i64* %8, align 8
  %168 = load i64* %9, align 8
  %169 = load i64* %10, align 8
  %170 = load i64* %11, align 8
  %171 = load i64* %12, align 8
  %172 = call i64 @_ZN13model_predict23cppUpdateFun_predictionElllllllllll(%class.model_predict* %16, i64 %161, i64 %162, i64 %163, i64 %164, i64 %165, i64 %166, i64 %167, i64 %168, i64 %169, i64 %170, i64 %171)
  store i64 %172, i64* %cppVar_1788, align 8
  %173 = load i64* %2, align 8
  %174 = load i64* %3, align 8
  %175 = load i64* %4, align 8
  %176 = load i64* %5, align 8
  %177 = load i64* %6, align 8
  %178 = load i64* %7, align 8
  %179 = load i64* %8, align 8
  %180 = load i64* %9, align 8
  %181 = load i64* %10, align 8
  %182 = load i64* %11, align 8
  %183 = load i64* %12, align 8
  %184 = call i64 @_ZN13model_predict22cppUpdateFun_sumOfpow2Elllllllllll(%class.model_predict* %16, i64 %173, i64 %174, i64 %175, i64 %176, i64 %177, i64 %178, i64 %179, i64 %180, i64 %181, i64 %182, i64 %183)
  store i64 %184, i64* %cppVar_1828, align 8
  %185 = load i64* %2, align 8
  %186 = load i64* %3, align 8
  %187 = load i64* %4, align 8
  %188 = load i64* %5, align 8
  %189 = load i64* %6, align 8
  %190 = load i64* %7, align 8
  %191 = load i64* %8, align 8
  %192 = load i64* %9, align 8
  %193 = load i64* %10, align 8
  %194 = load i64* %11, align 8
  %195 = load i64* %12, align 8
  %196 = call i64 @_ZN13model_predict16cppUpdateFun_upcElllllllllll(%class.model_predict* %16, i64 %185, i64 %186, i64 %187, i64 %188, i64 %189, i64 %190, i64 %191, i64 %192, i64 %193, i64 %194, i64 %195)
  store i64 %196, i64* %cppVar_1852, align 8
  %197 = load i64* %2, align 8
  %198 = load i64* %3, align 8
  %199 = load i64* %4, align 8
  %200 = load i64* %5, align 8
  %201 = load i64* %6, align 8
  %202 = load i64* %7, align 8
  %203 = load i64* %8, align 8
  %204 = load i64* %9, align 8
  %205 = load i64* %10, align 8
  %206 = load i64* %11, align 8
  %207 = load i64* %12, align 8
  %208 = call i64 @_ZN13model_predict24cppUpdateFun_wr_completeElllllllllll(%class.model_predict* %16, i64 %197, i64 %198, i64 %199, i64 %200, i64 %201, i64 %202, i64 %203, i64 %204, i64 %205, i64 %206, i64 %207)
  store i64 %208, i64* %cppVar_1884, align 8
  %209 = load i64* %2, align 8
  %210 = load i64* %3, align 8
  %211 = load i64* %4, align 8
  %212 = load i64* %5, align 8
  %213 = load i64* %6, align 8
  %214 = load i64* %7, align 8
  %215 = load i64* %8, align 8
  %216 = load i64* %9, align 8
  %217 = load i64* %10, align 8
  %218 = load i64* %11, align 8
  %219 = load i64* %12, align 8
  %220 = call i64 @_ZN13model_predict21cppUpdateFun_wr_indexElllllllllll(%class.model_predict* %16, i64 %209, i64 %210, i64 %211, i64 %212, i64 %213, i64 %214, i64 %215, i64 %216, i64 %217, i64 %218, i64 %219)
  store i64 %220, i64* %cppVar_1913, align 8
  %221 = load i64* %2, align 8
  %222 = load i64* %3, align 8
  %223 = load i64* %4, align 8
  %224 = load i64* %5, align 8
  %225 = load i64* %6, align 8
  %226 = load i64* %7, align 8
  %227 = load i64* %8, align 8
  %228 = load i64* %9, align 8
  %229 = load i64* %10, align 8
  %230 = load i64* %11, align 8
  %231 = load i64* %12, align 8
  %232 = call i64 @_ZN13model_predict22cppUpdateFun_wr_lengthElllllllllll(%class.model_predict* %16, i64 %221, i64 %222, i64 %223, i64 %224, i64 %225, i64 %226, i64 %227, i64 %228, i64 %229, i64 %230, i64 %231)
  store i64 %232, i64* %cppVar_1940, align 8
  %233 = load i64* %2, align 8
  %234 = load i64* %3, align 8
  %235 = load i64* %4, align 8
  %236 = load i64* %5, align 8
  %237 = load i64* %6, align 8
  %238 = load i64* %7, align 8
  %239 = load i64* %8, align 8
  %240 = load i64* %9, align 8
  %241 = load i64* %10, align 8
  %242 = load i64* %11, align 8
  %243 = load i64* %12, align 8
  %244 = call i64 @_ZN13model_predict23cppUpdateFun_wr_requestElllllllllll(%class.model_predict* %16, i64 %233, i64 %234, i64 %235, i64 %236, i64 %237, i64 %238, i64 %239, i64 %240, i64 %241, i64 %242, i64 %243)
  store i64 %244, i64* %cppVar_1966, align 8
  %245 = load i64* %2, align 8
  %246 = load i64* %3, align 8
  %247 = load i64* %4, align 8
  %248 = load i64* %5, align 8
  %249 = load i64* %6, align 8
  %250 = load i64* %7, align 8
  %251 = load i64* %8, align 8
  %252 = load i64* %9, align 8
  %253 = load i64* %10, align 8
  %254 = load i64* %11, align 8
  %255 = load i64* %12, align 8
  call void @_ZN13model_predict24cppUpdateFun_hidden_unitElllllllllll(%class.SysCArray1D* sret %cppVar_2021, %class.model_predict* %16, i64 %245, i64 %246, i64 %247, i64 %248, i64 %249, i64 %250, i64 %251, i64 %252, i64 %253, i64 %254, i64 %255)
  %256 = load i64* %2, align 8
  %257 = load i64* %3, align 8
  %258 = load i64* %4, align 8
  %259 = load i64* %5, align 8
  %260 = load i64* %6, align 8
  %261 = load i64* %7, align 8
  %262 = load i64* %8, align 8
  %263 = load i64* %9, align 8
  %264 = load i64* %10, align 8
  %265 = load i64* %11, align 8
  %266 = load i64* %12, align 8
  invoke void @_ZN13model_predict17cppUpdateFun_pow2Elllllllllll(%0* sret %cppVar_2056, %class.model_predict* %16, i64 %256, i64 %257, i64 %258, i64 %259, i64 %260, i64 %261, i64 %262, i64 %263, i64 %264, i64 %265, i64 %266)
          to label %267 unwind label %357

; <label>:267                                     ; preds = %0
  %268 = load i64* %2, align 8
  %269 = load i64* %3, align 8
  %270 = load i64* %4, align 8
  %271 = load i64* %5, align 8
  %272 = load i64* %6, align 8
  %273 = load i64* %7, align 8
  %274 = load i64* %8, align 8
  %275 = load i64* %9, align 8
  %276 = load i64* %10, align 8
  %277 = load i64* %11, align 8
  %278 = load i64* %12, align 8
  invoke void @_ZN13model_predict27cppUpdateFun_predict_resultElllllllllll(%class.SysCArray1D* sret %cppVar_2065, %class.model_predict* %16, i64 %268, i64 %269, i64 %270, i64 %271, i64 %272, i64 %273, i64 %274, i64 %275, i64 %276, i64 %277, i64 %278)
          to label %279 unwind label %360

; <label>:279                                     ; preds = %267
  %280 = load i64* %2, align 8
  %281 = load i64* %3, align 8
  %282 = load i64* %4, align 8
  %283 = load i64* %5, align 8
  %284 = load i64* %6, align 8
  %285 = load i64* %7, align 8
  %286 = load i64* %8, align 8
  %287 = load i64* %9, align 8
  %288 = load i64* %10, align 8
  %289 = load i64* %11, align 8
  %290 = load i64* %12, align 8
  invoke void @_ZN13model_predict27cppUpdateFun_predict_vectorElllllllllll(%class.SysCArray1D* sret %cppVar_2103, %class.model_predict* %16, i64 %280, i64 %281, i64 %282, i64 %283, i64 %284, i64 %285, i64 %286, i64 %287, i64 %288, i64 %289, i64 %290)
          to label %291 unwind label %363

; <label>:291                                     ; preds = %279
  %292 = load i64* %2, align 8
  %293 = load i64* %3, align 8
  %294 = load i64* %4, align 8
  %295 = load i64* %5, align 8
  %296 = load i64* %6, align 8
  %297 = load i64* %7, align 8
  %298 = load i64* %8, align 8
  %299 = load i64* %9, align 8
  %300 = load i64* %10, align 8
  %301 = load i64* %11, align 8
  %302 = load i64* %12, align 8
  invoke void @_ZN13model_predict28cppUpdateFun_visibleEnergiesElllllllllll(%1* sret %cppVar_2165, %class.model_predict* %16, i64 %292, i64 %293, i64 %294, i64 %295, i64 %296, i64 %297, i64 %298, i64 %299, i64 %300, i64 %301, i64 %302)
          to label %303 unwind label %366

; <label>:303                                     ; preds = %291
  %304 = load i64* %cppVar_1299, align 8
  %305 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 0
  store i64 %304, i64* %305, align 8
  %306 = load i64* %cppVar_1323, align 8
  %307 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 3
  store i64 %306, i64* %307, align 8
  %308 = load i64* %cppVar_1353, align 8
  %309 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 5
  store i64 %308, i64* %309, align 8
  %310 = load i64* %cppVar_1377, align 8
  %311 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 7
  store i64 %310, i64* %311, align 8
  %312 = load i64* %cppVar_1426, align 8
  %313 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 9
  store i64 %312, i64* %313, align 8
  %314 = load i64* %cppVar_1479, align 8
  %315 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 17
  store i64 %314, i64* %315, align 8
  %316 = load i64* %cppVar_1522, align 8
  %317 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 19
  store i64 %316, i64* %317, align 8
  %318 = load i64* %cppVar_1539, align 8
  %319 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 20
  store i64 %318, i64* %319, align 8
  %320 = load i64* %cppVar_1601, align 8
  %321 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 21
  store i64 %320, i64* %321, align 8
  %322 = load i64* %cppVar_1665, align 8
  %323 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 23
  store i64 %322, i64* %323, align 8
  %324 = load i64* %cppVar_1722, align 8
  %325 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 24
  store i64 %324, i64* %325, align 8
  %326 = load i64* %cppVar_1771, align 8
  %327 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 25
  store i64 %326, i64* %327, align 8
  %328 = load i64* %cppVar_1788, align 8
  %329 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 27
  store i64 %328, i64* %329, align 8
  %330 = load i64* %cppVar_1828, align 8
  %331 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 32
  store i64 %330, i64* %331, align 8
  %332 = load i64* %cppVar_1852, align 8
  %333 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 34
  store i64 %332, i64* %333, align 8
  %334 = load i64* %cppVar_1884, align 8
  %335 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 36
  store i64 %334, i64* %335, align 8
  %336 = load i64* %cppVar_1913, align 8
  %337 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 37
  store i64 %336, i64* %337, align 8
  %338 = load i64* %cppVar_1940, align 8
  %339 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 38
  store i64 %338, i64* %339, align 8
  %340 = load i64* %cppVar_1966, align 8
  %341 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 39
  store i64 %340, i64* %341, align 8
  %342 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 6
  %343 = invoke %class.SysCArray1D* @_ZN8type_memIbLj128EEaSERKS0_(%class.SysCArray1D* %342, %class.SysCArray1D* %cppVar_2021)
          to label %344 unwind label %369

; <label>:344                                     ; preds = %303
  %345 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 18
  %346 = invoke %0* @_ZN8type_memIjLj8EEaSERKS0_(%0* %345, %0* %cppVar_2056)
          to label %347 unwind label %369

; <label>:347                                     ; preds = %344
  %348 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 22
  %349 = invoke %class.SysCArray1D* @_ZN8type_memIhLj128EEaSERKS0_(%class.SysCArray1D* %348, %class.SysCArray1D* %cppVar_2065)
          to label %350 unwind label %369

; <label>:350                                     ; preds = %347
  %351 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 26
  %352 = invoke %class.SysCArray1D* @_ZN8type_memIbLj512EEaSERKS0_(%class.SysCArray1D* %351, %class.SysCArray1D* %cppVar_2103)
          to label %353 unwind label %369

; <label>:353                                     ; preds = %350
  %354 = getelementptr inbounds %class.model_predict* %16, i32 0, i32 35
  %355 = invoke %1* @_ZN8type_memItLj8EEaSERKS0_(%1* %354, %1* %cppVar_2165)
          to label %356 unwind label %369

; <label>:356                                     ; preds = %353
  store i32 1, i32* %15
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2165)
          to label %372 unwind label %366

; <label>:357                                     ; preds = %377, %0
  %358 = call i8* @llvm.eh.exception() nounwind
  store i8* %358, i8** %13
  %359 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %358, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %383

; <label>:360                                     ; preds = %374, %267
  %361 = call i8* @llvm.eh.exception() nounwind
  store i8* %361, i8** %13
  %362 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %361, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %381

; <label>:363                                     ; preds = %372, %279
  %364 = call i8* @llvm.eh.exception() nounwind
  store i8* %364, i8** %13
  %365 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %364, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %378

; <label>:366                                     ; preds = %356, %291
  %367 = call i8* @llvm.eh.exception() nounwind
  store i8* %367, i8** %13
  %368 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %367, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  br label %375

; <label>:369                                     ; preds = %353, %350, %347, %344, %303
  %370 = call i8* @llvm.eh.exception() nounwind
  store i8* %370, i8** %13
  %371 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %370, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %cppVar_2165)
          to label %373 unwind label %387

; <label>:372                                     ; preds = %356
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2103)
          to label %374 unwind label %363

; <label>:373                                     ; preds = %369
  br label %375

; <label>:374                                     ; preds = %372
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %cppVar_2065)
          to label %377 unwind label %360

; <label>:375                                     ; preds = %373, %366
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %cppVar_2103)
          to label %376 unwind label %387

; <label>:376                                     ; preds = %375
  br label %378

; <label>:377                                     ; preds = %374
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2056)
          to label %380 unwind label %357

; <label>:378                                     ; preds = %376, %363
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %cppVar_2065)
          to label %379 unwind label %387

; <label>:379                                     ; preds = %378
  br label %381

; <label>:380                                     ; preds = %377
  call void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2021)
  ret void

; <label>:381                                     ; preds = %379, %360
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %cppVar_2056)
          to label %382 unwind label %387

; <label>:382                                     ; preds = %381
  br label %383

; <label>:383                                     ; preds = %382, %357
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %cppVar_2021)
          to label %384 unwind label %387

; <label>:384                                     ; preds = %383
  br label %385

; <label>:385                                     ; preds = %384
  %386 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %386) noreturn
  unreachable

; <label>:387                                     ; preds = %383, %381, %378, %375, %369
  %388 = call i8* @llvm.eh.exception() nounwind
  %389 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %388, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define internal void @__cxx_global_var_init() {
  call void @_ZN13model_predictC1Ev(%class.model_predict* @GM)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.model_predict*)* @_ZN13model_predictD1Ev to void (i8*)*), i8* bitcast (%class.model_predict* @GM to i8*), i8* bitcast (i8** @__dso_handle to i8*))
  ret void
}

define linkonce_odr void @_ZN13model_predictC1Ev(%class.model_predict* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_predict*, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  %2 = load %class.model_predict** %1
  call void @_ZN13model_predictC2Ev(%class.model_predict* %2)
  ret void
}

define linkonce_odr void @_ZN13model_predictD1Ev(%class.model_predict* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_predict*, align 8
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  %2 = load %class.model_predict** %1
  call void @_ZN13model_predictD2Ev(%class.model_predict* %2)
  ret void
}

declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*)

define void @_Z4waitv() nounwind {
  %1 = load i32* @cycleCnt, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @cycleCnt, align 4
  ret void
}

define void @_Z15reset_signal_isib(i32, i1 zeroext) nounwind {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  ret void
}

define void @_Z14set_stack_sizei(i32) nounwind {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  ret void
}

define i64 @_Z8_c_16_15f(float %in) nounwind {
  %1 = alloca float, align 4
  store float %in, float* %1, align 4
  %2 = load float* %1, align 4
  %3 = fmul float %2, 2.000000e+00
  %4 = fptosi float %3 to i64
  %5 = and i64 %4, 65535
  ret i64 %5
}

define float @_Z8_b_16_15l(i64 %in) nounwind {
  %1 = alloca i64, align 8
  store i64 %in, i64* %1, align 8
  %2 = load i64* %1, align 8
  %3 = and i64 %2, 65535
  %4 = sitofp i64 %3 to double
  %5 = fdiv double %4, 2.000000e+00
  %6 = fptrunc double %5 to float
  ret float %6
}

define void @_ZN3rbm11predict_rbmEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %ntu = alloca i16, align 2
  %nv = alloca i16, align 2
  %nh = alloca i16, align 2
  %nu = alloca i16, align 2
  %nlp = alloca i16, align 2
  %user = alloca i16, align 2
  %prediction = alloca i8, align 1
  %j = alloca i8, align 1
  %count = alloca i8, align 1
  %i = alloca i16, align 2
  %tmp1 = alloca i16, align 2
  %tmp2 = alloca i16, align 2
  %pingpong = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %current_pv = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %15 = load %struct.rbm** %1
  %16 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %17 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %16, i8* %2)
  %18 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 42
  store i8 0, i8* %3, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %18, i8* %3)
  %19 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 43
  store i8 0, i8* %4, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %19, i8* %4)
  br label %20

; <label>:20                                      ; preds = %21, %0
  call void @_Z4waitv()
  br label %21

; <label>:21                                      ; preds = %20
  %22 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  %23 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %22)
  %24 = xor i1 %23, true
  br i1 %24, label %20, label %25

; <label>:25                                      ; preds = %21
  %26 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %27 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 11), align 8
  %28 = trunc i64 %27 to i16
  store i16 %28, i16* %5, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %26, i16* %5)
  %29 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %30 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 16), align 8
  %31 = trunc i64 %30 to i16
  store i16 %31, i16* %6, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %29, i16* %6)
  %32 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %33 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 15), align 8
  %34 = trunc i64 %33 to i16
  store i16 %34, i16* %7, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %32, i16* %7)
  %35 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %36 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 12), align 8
  %37 = trunc i64 %36 to i16
  store i16 %37, i16* %8, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %35, i16* %8)
  %38 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 34
  %39 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 14), align 8
  %40 = trunc i64 %39 to i16
  store i16 %40, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %38, i16* %9)
  %41 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  %42 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 13), align 8
  %43 = trunc i64 %42 to i16
  store i16 %43, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %41, i16* %10)
  %44 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 34
  %45 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %44)
  store i16 %45, i16* %ntu, align 2
  %46 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %47 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %46)
  store i16 %47, i16* %nv, align 2
  %48 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %49 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %48)
  store i16 %49, i16* %nh, align 2
  %50 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %51 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %50)
  store i16 %51, i16* %nu, align 2
  %52 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %53 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %52)
  store i16 %53, i16* %nlp, align 2
  store i16 0, i16* %user, align 2
  store i8 0, i8* %count, align 1
  br label %107
                                                  ; No predecessors!
  br label %55

; <label>:55                                      ; preds = %54, %181
  %56 = load i16* %user, align 2
  %57 = zext i16 %56 to i32
  %58 = load i16* %ntu, align 2
  %59 = zext i16 %58 to i32
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %65

; <label>:61                                      ; preds = %55
  br label %62

; <label>:62                                      ; preds = %63, %61
  call void @_Z4waitv()
  br label %63

; <label>:63                                      ; preds = %62
  br i1 true, label %62, label %64

; <label>:64                                      ; preds = %63
  br label %65

; <label>:65                                      ; preds = %64, %55
  br label %66

; <label>:66                                      ; preds = %67, %65
  call void @_Z4waitv()
  br label %67

; <label>:67                                      ; preds = %66
  %68 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 38
  %69 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %68)
  %70 = xor i1 %69, true
  br i1 %70, label %66, label %71

; <label>:71                                      ; preds = %67
  %72 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 42
  store i8 1, i8* %11, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %72, i8* %11)
  br label %73

; <label>:73                                      ; preds = %74, %71
  call void @_Z4waitv()
  br label %74

; <label>:74                                      ; preds = %73
  %75 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 38
  %76 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %75)
  br i1 %76, label %73, label %77

; <label>:77                                      ; preds = %74
  %78 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 42
  store i8 0, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %78, i8* %12)
  br label %79

; <label>:79                                      ; preds = %80, %77
  call void @_Z4waitv()
  br label %80

; <label>:80                                      ; preds = %79
  %81 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 45
  %82 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %81)
  %83 = xor i1 %82, true
  br i1 %83, label %79, label %84

; <label>:84                                      ; preds = %80
  %85 = load i16* %nlp, align 2
  %86 = zext i16 %85 to i32
  %87 = load i16* %nu, align 2
  %88 = zext i16 %87 to i32
  %89 = mul nsw i32 %86, %88
  %90 = trunc i32 %89 to i16
  store i16 %90, i16* %tmp1, align 2
  %91 = load i16* %tmp1, align 2
  %92 = zext i16 %91 to i32
  %93 = load i16* %user, align 2
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 %92, %94
  %96 = trunc i32 %95 to i16
  store i16 %96, i16* %tmp2, align 2
  %97 = load i16* %tmp2, align 2
  %98 = zext i16 %97 to i32
  %99 = srem i32 %98, 2
  %100 = icmp ne i32 %99, 0
  %101 = zext i1 %100 to i8
  store i8 %101, i8* %pingpong, align 1
  br label %102

; <label>:102                                     ; preds = %84
  store i32 2, i32* @upc, align 4
  %103 = load i8* %pingpong, align 1
  %104 = trunc i8 %103 to i1
  %105 = load i16* %nh, align 2
  %106 = load i16* %nv, align 2
  call void @_ZN3rbm27activateHiddenUnits_predictEbtt(%struct.rbm* %15, i1 zeroext %104, i16 zeroext %105, i16 zeroext %106)
  br label %186

; <label>:107                                     ; preds = %25
  store i32 3, i32* @predict_upc, align 4
  %108 = load i16* %nh, align 2
  %109 = load i16* %nv, align 2
  call void @_ZN3rbm28activateVisibleUnits_predictEtt(%struct.rbm* %15, i16 zeroext %108, i16 zeroext %109)
  br label %186
                                                  ; No predecessors!
  store i16 0, i16* %i, align 2
  br label %111

; <label>:111                                     ; preds = %163, %110
  %112 = load i16* %i, align 2
  %113 = zext i16 %112 to i32
  %114 = icmp slt i32 %113, 500
  br i1 %114, label %115, label %168

; <label>:115                                     ; preds = %111
  %116 = load i16* %i, align 2
  %117 = zext i16 %116 to i32
  %118 = load i16* %nv, align 2
  %119 = zext i16 %118 to i32
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %122

; <label>:121                                     ; preds = %115
  br label %168

; <label>:122                                     ; preds = %115
  store i8 0, i8* %prediction, align 1
  br label %123

; <label>:123                                     ; preds = %122
  store i8 0, i8* %j, align 1
  br label %124

; <label>:124                                     ; preds = %149, %123
  %125 = load i8* %j, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp slt i32 %126, 5
  br i1 %127, label %128, label %152

; <label>:128                                     ; preds = %124
  %129 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 27
  %130 = load i16* %i, align 2
  %131 = zext i16 %130 to i32
  %132 = load i8* %j, align 1
  %133 = zext i8 %132 to i32
  %134 = add nsw i32 %131, %133
  %135 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %129, i32 %134)
  %136 = load i8* %135
  %137 = trunc i8 %136 to i1
  %138 = zext i1 %137 to i8
  store i8 %138, i8* %current_pv, align 1
  call void @_Z4waitv()
  %139 = load i8* %current_pv, align 1
  %140 = trunc i8 %139 to i1
  %141 = zext i1 %140 to i32
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %148

; <label>:143                                     ; preds = %128
  %144 = load i8* %j, align 1
  %145 = zext i8 %144 to i32
  %146 = add nsw i32 %145, 1
  %147 = trunc i32 %146 to i8
  store i8 %147, i8* %prediction, align 1
  br label %148

; <label>:148                                     ; preds = %143, %128
  br label %149

; <label>:149                                     ; preds = %148
  %150 = load i8* %j, align 1
  %151 = add i8 %150, 1
  store i8 %151, i8* %j, align 1
  br label %124

; <label>:152                                     ; preds = %124
  %153 = load i8* %prediction, align 1
  %154 = load i8* %count, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 28
  %157 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %156, i32 0)
  %158 = getelementptr inbounds i8* %157, i64 %155
  store i8 %153, i8* %158
  call void @_Z4waitv()
  %159 = load i8* %count, align 1
  %160 = zext i8 %159 to i32
  %161 = add nsw i32 %160, 1
  %162 = trunc i32 %161 to i8
  store i8 %162, i8* %count, align 1
  br label %163

; <label>:163                                     ; preds = %152
  %164 = load i16* %i, align 2
  %165 = zext i16 %164 to i32
  %166 = add nsw i32 %165, 5
  %167 = trunc i32 %166 to i16
  store i16 %167, i16* %i, align 2
  br label %111

; <label>:168                                     ; preds = %121, %111
  store i8 0, i8* %count, align 1
  %169 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 43
  store i8 1, i8* %13, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %169, i8* %13)
  br label %170

; <label>:170                                     ; preds = %171, %168
  call void @_Z4waitv()
  br label %171

; <label>:171                                     ; preds = %170
  %172 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 44
  %173 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %172)
  %174 = xor i1 %173, true
  br i1 %174, label %170, label %175

; <label>:175                                     ; preds = %171
  %176 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 43
  store i8 0, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %176, i8* %14)
  br label %177

; <label>:177                                     ; preds = %178, %175
  call void @_Z4waitv()
  br label %178

; <label>:178                                     ; preds = %177
  %179 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 44
  %180 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %179)
  br i1 %180, label %177, label %181

; <label>:181                                     ; preds = %178
  %182 = load i16* %user, align 2
  %183 = zext i16 %182 to i32
  %184 = add nsw i32 %183, 1
  %185 = trunc i32 %184 to i16
  store i16 %185, i16* %user, align 2
  br label %55

; <label>:186                                     ; preds = %107, %102
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  %9 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %10 = load i8* %9, align 1
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

define linkonce_odr void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  %4 = load i8* %3, align 1
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

define linkonce_odr void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %this, i16* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  %2 = alloca i16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  store i16* %d, i16** %2, align 8
  %3 = load %class.sc_signal_u16** %1
  %4 = load i16** %2
  %5 = load i16* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_u16* %3, i32 0, i32 0
  store i16 %5, i16* %6, align 2
  ret void
}

define linkonce_odr zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  %3 = getelementptr inbounds %class.sc_signal_u16* %2, i32 0, i32 0
  %4 = load i16* %3, align 2
  ret i16 %4
}

define void @_ZN3rbm27activateHiddenUnits_predictEbtt(%struct.rbm* %this, i1 zeroext %pingpong, i16 zeroext %nh, i16 zeroext %nv) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %h = alloca i16, align 2
  %v = alloca i16, align 2
  %sum = alloca float, align 4
  %tmp = alloca float, align 4
  %prob = alloca float, align 4
  %tmp1 = alloca float, align 4
  %current_data = alloca i8, align 1
  %comp = alloca i8, align 1
  %th = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %5 = zext i1 %pingpong to i8
  store i8 %5, i8* %2, align 1
  store i16 %nh, i16* %3, align 2
  store i16 %nv, i16* %4, align 2
  %6 = load %struct.rbm** %1
  br label %7

; <label>:7                                       ; preds = %0
  store i16 0, i16* %h, align 2
  br label %8

; <label>:8                                       ; preds = %83, %7
  %9 = load i16* %h, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp slt i32 %10, 100
  br i1 %11, label %12, label %86

; <label>:12                                      ; preds = %8
  %13 = load i16* %h, align 2
  %14 = zext i16 %13 to i32
  %15 = load i16* %3, align 2
  %16 = zext i16 %15 to i32
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %12
  br label %86

; <label>:19                                      ; preds = %12
  store float 0.000000e+00, float* %sum, align 4
  br label %20

; <label>:20                                      ; preds = %19
  store i16 0, i16* %v, align 2
  br label %21

; <label>:21                                      ; preds = %59, %20
  %22 = load i16* %v, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp slt i32 %23, 501
  br i1 %24, label %25, label %62

; <label>:25                                      ; preds = %21
  %26 = load i16* %v, align 2
  %27 = zext i16 %26 to i32
  %28 = load i16* %4, align 2
  %29 = zext i16 %28 to i32
  %30 = add nsw i32 %29, 1
  %31 = icmp eq i32 %27, %30
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %25
  br label %62

; <label>:33                                      ; preds = %25
  store i32 0, i32* @per_v_pc, align 4
  store i32 0, i32* @predict_upc, align 4
  %34 = load i16* %v, align 2
  %35 = zext i16 %34 to i64
  %36 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 20
  %37 = load i8* %2, align 1
  %38 = trunc i8 %37 to i1
  %39 = zext i1 %38 to i32
  %40 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %36, i32 %39)
  %41 = getelementptr inbounds i8* %40, i64 %35
  %42 = load i8* %41
  store i8 %42, i8* %current_data, align 1
  call void @_Z4waitv()
  %43 = load i8* %current_data, align 1
  %44 = zext i8 %43 to i32
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %58

; <label>:46                                      ; preds = %33
  %47 = load i16* %h, align 2
  %48 = zext i16 %47 to i64
  %49 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 23
  %50 = load i16* %v, align 2
  %51 = zext i16 %50 to i32
  %52 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %49, i32 %51)
  %53 = getelementptr inbounds float* %52, i64 %48
  %54 = load float* %53
  store float %54, float* %tmp, align 4
  call void @_Z4waitv()
  %55 = load float* %tmp, align 4
  %56 = load float* %sum, align 4
  %57 = fadd float %56, %55
  store float %57, float* %sum, align 4
  br label %58

; <label>:58                                      ; preds = %46, %33
  br label %59

; <label>:59                                      ; preds = %58
  %60 = load i16* %v, align 2
  %61 = add i16 %60, 1
  store i16 %61, i16* %v, align 2
  br label %21

; <label>:62                                      ; preds = %32, %21
  %63 = load float* %sum, align 4
  %64 = call i64 @_Z8_c_16_15f(float %63)
  %65 = call zeroext i16 @_Z7sigmoidl(i64 %64)
  %66 = zext i16 %65 to i64
  %67 = call float @_Z8_b_16_15l(i64 %66)
  store float %67, float* %prob, align 4
  %68 = load float* %prob, align 4
  %69 = fcmp olt float 5.000000e-01, %68
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %comp, align 1
  %71 = load i8* %comp, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %74

; <label>:73                                      ; preds = %62
  store i8 1, i8* %th, align 1
  br label %75

; <label>:74                                      ; preds = %62
  store i8 0, i8* %th, align 1
  br label %75

; <label>:75                                      ; preds = %74, %73
  %76 = load i8* %th, align 1
  %77 = trunc i8 %76 to i1
  %78 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 22
  %79 = load i16* %h, align 2
  %80 = zext i16 %79 to i32
  %81 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %78, i32 %80)
  %82 = zext i1 %77 to i8
  store i8 %82, i8* %81
  call void @_Z4waitv()
  br label %83

; <label>:83                                      ; preds = %75
  %84 = load i16* %h, align 2
  %85 = add i16 %84, 1
  store i16 %85, i16* %h, align 2
  br label %8

; <label>:86                                      ; preds = %18, %8
  %87 = getelementptr inbounds %struct.rbm* %6, i32 0, i32 22
  %88 = load i16* %3, align 2
  %89 = zext i16 %88 to i32
  %90 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %87, i32 %89)
  store i8 1, i8* %90
  call void @_Z4waitv()
  store i32 0, i32* @per_v_pc, align 4
  store i32 1, i32* @predict_upc, align 4
  ret void
}

define void @_ZN3rbm28activateVisibleUnits_predictEtt(%struct.rbm* %this, i16 zeroext %nh, i16 zeroext %nv) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %v = alloca i16, align 2
  %h = alloca i16, align 2
  %sum = alloca float, align 4
  %max = alloca float, align 4
  %probs = alloca float, align 4
  %pow2 = alloca [5 x float], align 16
  %sumOfpow2 = alloca float, align 4
  %expectation = alloca float, align 4
  %prediction = alloca i8, align 1
  %tmp = alloca i16, align 2
  %tmp1 = alloca float, align 4
  %tmp2 = alloca i8, align 1
  %j = alloca i16, align 2
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %dp = alloca float, align 4
  %dp1 = alloca float, align 4
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  store i16 %nh, i16* %2, align 2
  store i16 %nv, i16* %3, align 2
  %18 = load %struct.rbm** %1
  br label %19

; <label>:19                                      ; preds = %0
  br label %227
                                                  ; No predecessors!
  store i16 0, i16* %v, align 2
  br label %21

; <label>:21                                      ; preds = %684, %20
  %22 = load i16* %v, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp slt i32 %23, 500
  br i1 %24, label %25, label %689

; <label>:25                                      ; preds = %21
  %26 = load i16* %v, align 2
  %27 = zext i16 %26 to i32
  %28 = load i16* %3, align 2
  %29 = zext i16 %28 to i32
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %25
  br label %689

; <label>:32                                      ; preds = %25
  store float -5.000000e+02, float* %max, align 4
  br label %33

; <label>:33                                      ; preds = %32
  store i16 0, i16* %j, align 2
  br label %34

; <label>:34                                      ; preds = %407, %33
  %35 = load i16* %j, align 2
  %36 = zext i16 %35 to i32
  %37 = icmp slt i32 %36, 5
  br i1 %37, label %38, label %410

; <label>:38                                      ; preds = %34
  store float 0.000000e+00, float* %sum, align 4
  br label %39

; <label>:39                                      ; preds = %38
  store i16 0, i16* %h, align 2
  br label %40

; <label>:40                                      ; preds = %392, %39
  %41 = load i16* %h, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp slt i32 %42, 101
  br i1 %43, label %44, label %395

; <label>:44                                      ; preds = %40
  %45 = load i16* %h, align 2
  %46 = zext i16 %45 to i32
  %47 = load i16* %2, align 2
  %48 = zext i16 %47 to i32
  %49 = add nsw i32 %48, 1
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %52

; <label>:51                                      ; preds = %44
  br label %395

; <label>:52                                      ; preds = %44
  br label %53

; <label>:53                                      ; preds = %52
  %54 = load i8* @conf_done_inp, align 1
  %55 = trunc i8 %54 to i1
  %56 = zext i1 %55 to i64
  %57 = load i32* @conf_num_hidden_inp, align 4
  %58 = zext i32 %57 to i64
  %59 = load i32* @conf_num_visible_inp, align 4
  %60 = zext i32 %59 to i64
  %61 = load i32* @conf_num_users_inp, align 4
  %62 = zext i32 %61 to i64
  %63 = load i32* @conf_num_loops_inp, align 4
  %64 = zext i32 %63 to i64
  %65 = load i32* @conf_num_testusers_inp, align 4
  %66 = zext i32 %65 to i64
  %67 = load i32* @conf_num_movies_inp, align 4
  %68 = zext i32 %67 to i64
  %69 = load i8* @rst_inp, align 1
  %70 = trunc i8 %69 to i1
  %71 = zext i1 %70 to i64
  %72 = load i8* @rd_grant_inp, align 1
  %73 = trunc i8 %72 to i1
  %74 = zext i1 %73 to i64
  %75 = load i32* @data_in_inp, align 4
  %76 = zext i32 %75 to i64
  %77 = load i8* @wr_grant_inp, align 1
  %78 = trunc i8 %77 to i1
  %79 = zext i1 %78 to i64
  call void @_ZN13model_predict6updateElllllllllll(%class.model_predict* @GM, i64 %56, i64 %58, i64 %60, i64 %62, i64 %64, i64 %66, i64 %68, i64 %71, i64 %74, i64 %76, i64 %79)
  %80 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %81 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %80)
  %82 = zext i1 %81 to i64
  %83 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 8), align 8
  %84 = icmp eq i64 %82, %83
  call void @__CPROVER_assert(i1 zeroext %84, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %85 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  %86 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %85)
  %87 = zext i1 %86 to i64
  %88 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 3), align 8
  %89 = icmp eq i64 %87, %88
  call void @__CPROVER_assert(i1 zeroext %89, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %90 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 30
  %91 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %90)
  %92 = zext i16 %91 to i64
  %93 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 11), align 8
  %94 = icmp eq i64 %92, %93
  call void @__CPROVER_assert(i1 zeroext %94, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %95 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 31
  %96 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %95)
  %97 = zext i16 %96 to i64
  %98 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 16), align 8
  %99 = icmp eq i64 %97, %98
  call void @__CPROVER_assert(i1 zeroext %99, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %100 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 32
  %101 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %100)
  %102 = zext i16 %101 to i64
  %103 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 15), align 8
  %104 = icmp eq i64 %102, %103
  call void @__CPROVER_assert(i1 zeroext %104, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %105 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 33
  %106 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %105)
  %107 = zext i16 %106 to i64
  %108 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 12), align 8
  %109 = icmp eq i64 %107, %108
  call void @__CPROVER_assert(i1 zeroext %109, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %110 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 34
  %111 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %110)
  %112 = zext i16 %111 to i64
  %113 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 14), align 8
  %114 = icmp eq i64 %112, %113
  call void @__CPROVER_assert(i1 zeroext %114, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %115 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %116 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %115)
  %117 = zext i16 %116 to i64
  %118 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 13), align 8
  %119 = icmp eq i64 %117, %118
  call void @__CPROVER_assert(i1 zeroext %119, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %120 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 2
  %121 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %120)
  %122 = zext i32 %121 to i64
  %123 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 29), align 8
  %124 = icmp eq i64 %122, %123
  call void @__CPROVER_assert(i1 zeroext %124, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %125 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 3
  %126 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %125)
  %127 = zext i32 %126 to i64
  %128 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 30), align 8
  %129 = icmp eq i64 %127, %128
  call void @__CPROVER_assert(i1 zeroext %129, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %130 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 4
  %131 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %130)
  %132 = zext i1 %131 to i64
  %133 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 31), align 8
  %134 = icmp eq i64 %132, %133
  call void @__CPROVER_assert(i1 zeroext %134, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %135 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  %136 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %135)
  %137 = zext i1 %136 to i64
  %138 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 39), align 8
  %139 = icmp eq i64 %137, %138
  call void @__CPROVER_assert(i1 zeroext %139, i8* getelementptr inbounds ([17 x i8]* @.str12, i32 0, i32 0))
  %140 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  %141 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %140)
  %142 = zext i32 %141 to i64
  %143 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 37), align 8
  %144 = icmp eq i64 %142, %143
  call void @__CPROVER_assert(i1 zeroext %144, i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0))
  %145 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %146 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %145)
  %147 = zext i32 %146 to i64
  %148 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 38), align 8
  %149 = icmp eq i64 %147, %148
  call void @__CPROVER_assert(i1 zeroext %149, i8* getelementptr inbounds ([16 x i8]* @.str14, i32 0, i32 0))
  %150 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %151 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %150)
  %152 = zext i32 %151 to i64
  %153 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 2), align 8
  %154 = icmp eq i64 %152, %153
  call void @__CPROVER_assert(i1 zeroext %154, i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0))
  %155 = load i32* @upc, align 4
  %156 = zext i32 %155 to i64
  %157 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 34), align 8
  %158 = icmp eq i64 %156, %157
  call void @__CPROVER_assert(i1 zeroext %158, i8* getelementptr inbounds ([10 x i8]* @.str16, i32 0, i32 0))
  %159 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 38
  %160 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %159)
  %161 = zext i1 %160 to i64
  %162 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 20), align 8
  %163 = icmp eq i64 %161, %162
  call void @__CPROVER_assert(i1 zeroext %163, i8* getelementptr inbounds ([25 x i8]* @.str17, i32 0, i32 0))
  %164 = load float* %sum, align 4
  %165 = fpext float %164 to double
  %166 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 23), align 8
  %167 = and i64 %166, 65535
  %168 = sitofp i64 %167 to double
  %169 = fdiv double %168, 2.000000e+00
  %170 = fcmp oeq double %165, %169
  call void @__CPROVER_assert(i1 zeroext %170, i8* getelementptr inbounds ([18 x i8]* @.str18, i32 0, i32 0))
  %171 = load float* %max, align 4
  %172 = fpext float %171 to double
  %173 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 21), align 8
  %174 = and i64 %173, 65535
  %175 = sitofp i64 %174 to double
  %176 = fdiv double %175, 2.000000e+00
  %177 = fcmp oeq double %172, %176
  call void @__CPROVER_assert(i1 zeroext %177, i8* getelementptr inbounds ([18 x i8]* @.str19, i32 0, i32 0))
  %178 = load float* %sumOfpow2, align 4
  %179 = fpext float %178 to double
  %180 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 32), align 8
  %181 = uitofp i64 %180 to double
  %182 = fdiv double %181, 1.000000e+00
  %183 = fcmp oeq double %179, %182
  call void @__CPROVER_assert(i1 zeroext %183, i8* getelementptr inbounds ([16 x i8]* @.str20, i32 0, i32 0))
  %184 = load i32* @per_v_pc, align 4
  %185 = zext i32 %184 to i64
  %186 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 17), align 8
  %187 = icmp eq i64 %185, %186
  call void @__CPROVER_assert(i1 zeroext %187, i8* getelementptr inbounds ([15 x i8]* @.str21, i32 0, i32 0))
  %188 = load i16* %j, align 2
  %189 = zext i16 %188 to i64
  %190 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 9), align 8
  %191 = icmp eq i64 %189, %190
  call void @__CPROVER_assert(i1 zeroext %191, i8* getelementptr inbounds ([13 x i8]* @.str22, i32 0, i32 0))
  %192 = load i32* @predict_upc, align 4
  %193 = zext i32 %192 to i64
  %194 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 24), align 8
  %195 = icmp eq i64 %193, %194
  call void @__CPROVER_assert(i1 zeroext %195, i8* getelementptr inbounds ([18 x i8]* @.str23, i32 0, i32 0))
  %196 = load i16* %v, align 2
  %197 = zext i16 %196 to i64
  %198 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 25), align 8
  %199 = icmp eq i64 %197, %198
  call void @__CPROVER_assert(i1 zeroext %199, i8* getelementptr inbounds ([20 x i8]* @.str24, i32 0, i32 0))
  %200 = load i16* %h, align 2
  %201 = zext i16 %200 to i64
  %202 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 19), align 8
  %203 = icmp eq i64 %201, %202
  call void @__CPROVER_assert(i1 zeroext %203, i8* getelementptr inbounds ([20 x i8]* @.str25, i32 0, i32 0))
  %204 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 1, i32 0), align 8
  %205 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 20
  %206 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %205, i32 0)
  %207 = call zeroext i1 @__CPROVER_array_equal(i8* %204, i8* %206)
  call void @__CPROVER_assert(i1 zeroext %207, i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0))
  %208 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 22, i32 0), align 8
  %209 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %210 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %209, i32 0)
  %211 = call zeroext i1 @__CPROVER_array_equal(i8* %208, i8* %210)
  call void @__CPROVER_assert(i1 zeroext %211, i8* getelementptr inbounds ([21 x i8]* @.str27, i32 0, i32 0))
  %212 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 6, i32 0), align 8
  %213 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %214 = getelementptr inbounds %class.SysCArray1D* %213, i32 0, i32 0
  %215 = load i8** %214, align 8
  %216 = call zeroext i1 @__CPROVER_array_equal(i8* %212, i8* %215)
  call void @__CPROVER_assert(i1 zeroext %216, i8* getelementptr inbounds ([18 x i8]* @.str28, i32 0, i32 0))
  %217 = load i16* %h, align 2
  %218 = zext i16 %217 to i32
  %219 = load i16* %2, align 2
  %220 = zext i16 %219 to i32
  %221 = icmp sle i32 %218, %220
  call void @__CPROVER_assert(i1 zeroext %221, i8* getelementptr inbounds ([8 x i8]* @.str29, i32 0, i32 0))
  %222 = load i16* %v, align 2
  %223 = zext i16 %222 to i32
  %224 = load i16* %3, align 2
  %225 = zext i16 %224 to i32
  %226 = icmp slt i32 %223, %225
  call void @__CPROVER_assert(i1 zeroext %226, i8* getelementptr inbounds ([8 x i8]* @.str29, i32 0, i32 0))
  br label %694

; <label>:227                                     ; preds = %19
  %228 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  store i8 1, i8* %4, align 1
  %229 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %228, i8* %4)
  %230 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 37
  store i8 0, i8* %5, align 1
  %231 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %230, i8* %5)
  store i64 0, i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 17), align 8
  %232 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 0, i8* %6, align 1
  %233 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %232, i8* %6)
  store i8 0, i8* @rst_inp, align 1
  store i64 2, i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 34), align 8
  %234 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 38
  store i8 1, i8* %7, align 1
  %235 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %234, i8* %7)
  store i64 1, i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 24), align 8
  store i32 2, i32* @upc, align 4
  %236 = load i8* @conf_done_inp, align 1
  %237 = trunc i8 %236 to i1
  %238 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 13
  %239 = getelementptr inbounds %class.sc_signal_bool* %238, i32 0, i32 0
  %240 = zext i1 %237 to i8
  store i8 %240, i8* %239, align 1
  %241 = load i32* @conf_num_hidden_inp, align 4
  %242 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 14
  %243 = getelementptr inbounds %class.sc_signal_int32* %242, i32 0, i32 0
  store i32 %241, i32* %243, align 4
  %244 = load i32* @conf_num_visible_inp, align 4
  %245 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 15
  %246 = getelementptr inbounds %class.sc_signal_int32* %245, i32 0, i32 0
  store i32 %244, i32* %246, align 4
  %247 = load i32* @conf_num_users_inp, align 4
  %248 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 16
  %249 = getelementptr inbounds %class.sc_signal_int32* %248, i32 0, i32 0
  store i32 %247, i32* %249, align 4
  %250 = load i32* @conf_num_loops_inp, align 4
  %251 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 17
  %252 = getelementptr inbounds %class.sc_signal_int32* %251, i32 0, i32 0
  store i32 %250, i32* %252, align 4
  %253 = load i32* @conf_num_testusers_inp, align 4
  %254 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 18
  %255 = getelementptr inbounds %class.sc_signal_int32* %254, i32 0, i32 0
  store i32 %253, i32* %255, align 4
  %256 = load i32* @conf_num_movies_inp, align 4
  %257 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 19
  %258 = getelementptr inbounds %class.sc_signal_int32* %257, i32 0, i32 0
  store i32 %256, i32* %258, align 4
  %259 = load i8* @rst_inp, align 1
  %260 = trunc i8 %259 to i1
  %261 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 1
  %262 = getelementptr inbounds %class.sc_signal_bool* %261, i32 0, i32 0
  %263 = zext i1 %260 to i8
  store i8 %263, i8* %262, align 1
  %264 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %265 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 8), align 8
  %266 = icmp ne i64 %265, 0
  %267 = zext i1 %266 to i8
  store i8 %267, i8* %8, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %264, i8* %8)
  %268 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  %269 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 3), align 8
  %270 = icmp ne i64 %269, 0
  %271 = zext i1 %270 to i8
  store i8 %271, i8* %9, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %268, i8* %9)
  %272 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 2
  %273 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 29), align 8
  %274 = trunc i64 %273 to i32
  store i32 %274, i32* %10, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %272, i32* %10)
  %275 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 3
  %276 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 30), align 8
  %277 = trunc i64 %276 to i32
  store i32 %277, i32* %11, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %275, i32* %11)
  %278 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 4
  %279 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 31), align 8
  %280 = icmp ne i64 %279, 0
  %281 = zext i1 %280 to i8
  store i8 %281, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %278, i8* %12)
  %282 = load i8* @rd_grant_inp, align 1
  %283 = trunc i8 %282 to i1
  %284 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 5
  %285 = getelementptr inbounds %class.sc_signal_bool* %284, i32 0, i32 0
  %286 = zext i1 %283 to i8
  store i8 %286, i8* %285, align 1
  %287 = load i32* @data_in_inp, align 4
  %288 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 6
  %289 = getelementptr inbounds %class.sc_signal_int32* %288, i32 0, i32 0
  store i32 %287, i32* %289, align 4
  %290 = load i8* @wr_grant_inp, align 1
  %291 = trunc i8 %290 to i1
  %292 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 10
  %293 = getelementptr inbounds %class.sc_signal_bool* %292, i32 0, i32 0
  %294 = zext i1 %291 to i8
  store i8 %294, i8* %293, align 1
  %295 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  %296 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 39), align 8
  %297 = icmp ne i64 %296, 0
  %298 = zext i1 %297 to i8
  store i8 %298, i8* %13, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %295, i8* %13)
  %299 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  %300 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 37), align 8
  %301 = trunc i64 %300 to i32
  store i32 %301, i32* %14, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %299, i32* %14)
  %302 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %303 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 38), align 8
  %304 = trunc i64 %303 to i32
  store i32 %304, i32* %15, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %302, i32* %15)
  %305 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %306 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 2), align 8
  %307 = trunc i64 %306 to i32
  store i32 %307, i32* %16, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %305, i32* %16)
  %308 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 38
  %309 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 20), align 8
  %310 = icmp ne i64 %309, 0
  %311 = zext i1 %310 to i8
  store i8 %311, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %308, i8* %17)
  %312 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 23), align 8
  %313 = and i64 %312, 65535
  %314 = sitofp i64 %313 to double
  %315 = fdiv double %314, 2.000000e+00
  %316 = fptrunc double %315 to float
  store float %316, float* %sum, align 4
  %317 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 21), align 8
  %318 = and i64 %317, 65535
  %319 = sitofp i64 %318 to double
  %320 = fdiv double %319, 2.000000e+00
  %321 = fptrunc double %320 to float
  store float %321, float* %max, align 4
  %322 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 32), align 8
  %323 = uitofp i64 %322 to double
  %324 = fdiv double %323, 1.000000e+00
  %325 = fptrunc double %324 to float
  store float %325, float* %sumOfpow2, align 4
  %326 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 9), align 8
  %327 = trunc i64 %326 to i16
  store i16 %327, i16* %j, align 2
  %328 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 25), align 8
  %329 = trunc i64 %328 to i16
  store i16 %329, i16* %v, align 2
  %330 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 19), align 8
  %331 = trunc i64 %330 to i16
  store i16 %331, i16* %h, align 2
  %332 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 20
  %333 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %332, i32 0)
  %334 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 1, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %333, i8* %334)
  %335 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %336 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %335, i32 0)
  %337 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 22, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %336, i8* %337)
  %338 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 23
  %339 = getelementptr inbounds %class.SysCArray2D* %338, i32 0, i32 0
  %340 = load float** %339, align 8
  %341 = bitcast float* %340 to i8*
  %342 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 4, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %341, i8* %342)
  %343 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %344 = getelementptr inbounds %class.SysCArray1D* %343, i32 0, i32 0
  %345 = load i8** %344, align 8
  %346 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 6, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %345, i8* %346)
  %347 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %348 = getelementptr inbounds %class.SysCArray2D* %347, i32 0, i32 0
  %349 = load float** %348, align 8
  %350 = bitcast float* %349 to i8*
  %351 = load i16** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 35, i32 0), align 8
  %352 = bitcast i16* %351 to i8*
  call void @__CPROVER_array_copy(i8* %350, i8* %352)
  %353 = getelementptr inbounds [5 x float]* %pow2, i32 0, i32 0
  %354 = bitcast float* %353 to i8*
  %355 = load i32** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 18, i32 0), align 8
  %356 = bitcast i32* %355 to i8*
  call void @__CPROVER_array_copy(i8* %354, i8* %356)
  %357 = load i16* %h, align 2
  %358 = zext i16 %357 to i32
  %359 = load i16* %2, align 2
  %360 = zext i16 %359 to i32
  %361 = icmp sle i32 %358, %360
  call void @__CPROVER_assume(i1 zeroext %361)
  %362 = load i16* %v, align 2
  %363 = zext i16 %362 to i32
  %364 = load i16* %3, align 2
  %365 = zext i16 %364 to i32
  %366 = icmp slt i32 %363, %365
  call void @__CPROVER_assume(i1 zeroext %366)
  %367 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %368 = load i16* %h, align 2
  %369 = zext i16 %368 to i32
  %370 = call i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %367, i32 %369)
  %371 = load i8* %370
  %372 = trunc i8 %371 to i1
  %373 = zext i1 %372 to i8
  store i8 %373, i8* %tmp2, align 1
  call void @_Z4waitv()
  %374 = load i16* %h, align 2
  %375 = zext i16 %374 to i64
  %376 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 23
  %377 = load i16* %v, align 2
  %378 = zext i16 %377 to i32
  %379 = load i16* %j, align 2
  %380 = zext i16 %379 to i32
  %381 = add nsw i32 %378, %380
  %382 = call float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %376, i32 %381)
  %383 = getelementptr inbounds float* %382, i64 %375
  %384 = load float* %383
  store float %384, float* %tmp1, align 4
  call void @_Z4waitv()
  %385 = load i8* %tmp2, align 1
  %386 = trunc i8 %385 to i1
  br i1 %386, label %387, label %391

; <label>:387                                     ; preds = %227
  %388 = load float* %tmp1, align 4
  %389 = load float* %sum, align 4
  %390 = fadd float %389, %388
  store float %390, float* %sum, align 4
  br label %391

; <label>:391                                     ; preds = %387, %227
  call void @_Z4waitv()
  br label %392

; <label>:392                                     ; preds = %391
  %393 = load i16* %h, align 2
  %394 = add i16 %393, 1
  store i16 %394, i16* %h, align 2
  br label %40

; <label>:395                                     ; preds = %51, %40
  %396 = load float* %sum, align 4
  %397 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %398 = load i16* %j, align 2
  %399 = zext i16 %398 to i32
  %400 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %397, i32 %399)
  store float %396, float* %400
  call void @_Z4waitv()
  %401 = load float* %sum, align 4
  %402 = load float* %max, align 4
  %403 = fcmp ogt float %401, %402
  br i1 %403, label %404, label %406

; <label>:404                                     ; preds = %395
  %405 = load float* %sum, align 4
  store float %405, float* %max, align 4
  br label %406

; <label>:406                                     ; preds = %404, %395
  br label %407

; <label>:407                                     ; preds = %406
  %408 = load i16* %j, align 2
  %409 = add i16 %408, 1
  store i16 %409, i16* %j, align 2
  br label %34

; <label>:410                                     ; preds = %34
  store i32 1, i32* @per_v_pc, align 4
  store i32 1, i32* @predict_upc, align 4
  br label %411

; <label>:411                                     ; preds = %410
  %412 = load i8* @conf_done_inp, align 1
  %413 = trunc i8 %412 to i1
  %414 = zext i1 %413 to i64
  %415 = load i32* @conf_num_hidden_inp, align 4
  %416 = zext i32 %415 to i64
  %417 = load i32* @conf_num_visible_inp, align 4
  %418 = zext i32 %417 to i64
  %419 = load i32* @conf_num_users_inp, align 4
  %420 = zext i32 %419 to i64
  %421 = load i32* @conf_num_loops_inp, align 4
  %422 = zext i32 %421 to i64
  %423 = load i32* @conf_num_testusers_inp, align 4
  %424 = zext i32 %423 to i64
  %425 = load i32* @conf_num_movies_inp, align 4
  %426 = zext i32 %425 to i64
  %427 = load i8* @rst_inp, align 1
  %428 = trunc i8 %427 to i1
  %429 = zext i1 %428 to i64
  %430 = load i8* @rd_grant_inp, align 1
  %431 = trunc i8 %430 to i1
  %432 = zext i1 %431 to i64
  %433 = load i32* @data_in_inp, align 4
  %434 = zext i32 %433 to i64
  %435 = load i8* @wr_grant_inp, align 1
  %436 = trunc i8 %435 to i1
  %437 = zext i1 %436 to i64
  call void @_ZN13model_predict6updateElllllllllll(%class.model_predict* @GM, i64 %414, i64 %416, i64 %418, i64 %420, i64 %422, i64 %424, i64 %426, i64 %429, i64 %432, i64 %434, i64 %437)
  %438 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %439 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %438)
  %440 = zext i1 %439 to i64
  %441 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 8), align 8
  %442 = icmp eq i64 %440, %441
  call void @__CPROVER_assert(i1 zeroext %442, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %443 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  %444 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %443)
  %445 = zext i1 %444 to i64
  %446 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 3), align 8
  %447 = icmp eq i64 %445, %446
  call void @__CPROVER_assert(i1 zeroext %447, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %448 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 30
  %449 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %448)
  %450 = zext i16 %449 to i64
  %451 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 11), align 8
  %452 = icmp eq i64 %450, %451
  call void @__CPROVER_assert(i1 zeroext %452, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %453 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 31
  %454 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %453)
  %455 = zext i16 %454 to i64
  %456 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 16), align 8
  %457 = icmp eq i64 %455, %456
  call void @__CPROVER_assert(i1 zeroext %457, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %458 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 32
  %459 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %458)
  %460 = zext i16 %459 to i64
  %461 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 15), align 8
  %462 = icmp eq i64 %460, %461
  call void @__CPROVER_assert(i1 zeroext %462, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %463 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 33
  %464 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %463)
  %465 = zext i16 %464 to i64
  %466 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 12), align 8
  %467 = icmp eq i64 %465, %466
  call void @__CPROVER_assert(i1 zeroext %467, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %468 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 34
  %469 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %468)
  %470 = zext i16 %469 to i64
  %471 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 14), align 8
  %472 = icmp eq i64 %470, %471
  call void @__CPROVER_assert(i1 zeroext %472, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %473 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %474 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %473)
  %475 = zext i16 %474 to i64
  %476 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 13), align 8
  %477 = icmp eq i64 %475, %476
  call void @__CPROVER_assert(i1 zeroext %477, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %478 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 2
  %479 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %478)
  %480 = zext i32 %479 to i64
  %481 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 29), align 8
  %482 = icmp eq i64 %480, %481
  call void @__CPROVER_assert(i1 zeroext %482, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %483 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 3
  %484 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %483)
  %485 = zext i32 %484 to i64
  %486 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 30), align 8
  %487 = icmp eq i64 %485, %486
  call void @__CPROVER_assert(i1 zeroext %487, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %488 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 4
  %489 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %488)
  %490 = zext i1 %489 to i64
  %491 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 31), align 8
  %492 = icmp eq i64 %490, %491
  call void @__CPROVER_assert(i1 zeroext %492, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %493 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  %494 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %493)
  %495 = zext i1 %494 to i64
  %496 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 39), align 8
  %497 = icmp eq i64 %495, %496
  call void @__CPROVER_assert(i1 zeroext %497, i8* getelementptr inbounds ([17 x i8]* @.str12, i32 0, i32 0))
  %498 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  %499 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %498)
  %500 = zext i32 %499 to i64
  %501 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 37), align 8
  %502 = icmp eq i64 %500, %501
  call void @__CPROVER_assert(i1 zeroext %502, i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0))
  %503 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %504 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %503)
  %505 = zext i32 %504 to i64
  %506 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 38), align 8
  %507 = icmp eq i64 %505, %506
  call void @__CPROVER_assert(i1 zeroext %507, i8* getelementptr inbounds ([16 x i8]* @.str14, i32 0, i32 0))
  %508 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %509 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %508)
  %510 = zext i32 %509 to i64
  %511 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 2), align 8
  %512 = icmp eq i64 %510, %511
  call void @__CPROVER_assert(i1 zeroext %512, i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0))
  %513 = load i32* @upc, align 4
  %514 = zext i32 %513 to i64
  %515 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 34), align 8
  %516 = icmp eq i64 %514, %515
  call void @__CPROVER_assert(i1 zeroext %516, i8* getelementptr inbounds ([10 x i8]* @.str16, i32 0, i32 0))
  %517 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 38
  %518 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %517)
  %519 = zext i1 %518 to i64
  %520 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 20), align 8
  %521 = icmp eq i64 %519, %520
  call void @__CPROVER_assert(i1 zeroext %521, i8* getelementptr inbounds ([25 x i8]* @.str17, i32 0, i32 0))
  %522 = load float* %sum, align 4
  %523 = fpext float %522 to double
  %524 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 23), align 8
  %525 = and i64 %524, 65535
  %526 = sitofp i64 %525 to double
  %527 = fdiv double %526, 2.000000e+00
  %528 = fcmp oeq double %523, %527
  call void @__CPROVER_assert(i1 zeroext %528, i8* getelementptr inbounds ([18 x i8]* @.str18, i32 0, i32 0))
  %529 = load float* %max, align 4
  %530 = fpext float %529 to double
  %531 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 21), align 8
  %532 = and i64 %531, 65535
  %533 = sitofp i64 %532 to double
  %534 = fdiv double %533, 2.000000e+00
  %535 = fcmp oeq double %530, %534
  call void @__CPROVER_assert(i1 zeroext %535, i8* getelementptr inbounds ([18 x i8]* @.str19, i32 0, i32 0))
  %536 = load float* %sumOfpow2, align 4
  %537 = fpext float %536 to double
  %538 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 32), align 8
  %539 = uitofp i64 %538 to double
  %540 = fdiv double %539, 1.000000e+00
  %541 = fcmp oeq double %537, %540
  call void @__CPROVER_assert(i1 zeroext %541, i8* getelementptr inbounds ([16 x i8]* @.str20, i32 0, i32 0))
  %542 = load i32* @per_v_pc, align 4
  %543 = zext i32 %542 to i64
  %544 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 17), align 8
  %545 = icmp eq i64 %543, %544
  call void @__CPROVER_assert(i1 zeroext %545, i8* getelementptr inbounds ([15 x i8]* @.str21, i32 0, i32 0))
  %546 = load i16* %j, align 2
  %547 = zext i16 %546 to i64
  %548 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 9), align 8
  %549 = icmp eq i64 %547, %548
  call void @__CPROVER_assert(i1 zeroext %549, i8* getelementptr inbounds ([13 x i8]* @.str22, i32 0, i32 0))
  %550 = load i32* @predict_upc, align 4
  %551 = zext i32 %550 to i64
  %552 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 24), align 8
  %553 = icmp eq i64 %551, %552
  call void @__CPROVER_assert(i1 zeroext %553, i8* getelementptr inbounds ([18 x i8]* @.str23, i32 0, i32 0))
  %554 = load i16* %v, align 2
  %555 = zext i16 %554 to i64
  %556 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 25), align 8
  %557 = icmp eq i64 %555, %556
  call void @__CPROVER_assert(i1 zeroext %557, i8* getelementptr inbounds ([20 x i8]* @.str24, i32 0, i32 0))
  %558 = load i16* %h, align 2
  %559 = zext i16 %558 to i64
  %560 = load i64* getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 19), align 8
  %561 = icmp eq i64 %559, %560
  call void @__CPROVER_assert(i1 zeroext %561, i8* getelementptr inbounds ([20 x i8]* @.str25, i32 0, i32 0))
  %562 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 1, i32 0), align 8
  %563 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 20
  %564 = call i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %563, i32 0)
  %565 = call zeroext i1 @__CPROVER_array_equal(i8* %562, i8* %564)
  call void @__CPROVER_assert(i1 zeroext %565, i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0))
  %566 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 22, i32 0), align 8
  %567 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %568 = call i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %567, i32 0)
  %569 = call zeroext i1 @__CPROVER_array_equal(i8* %566, i8* %568)
  call void @__CPROVER_assert(i1 zeroext %569, i8* getelementptr inbounds ([21 x i8]* @.str27, i32 0, i32 0))
  %570 = load i8** getelementptr inbounds (%class.model_predict* @GM, i32 0, i32 6, i32 0), align 8
  %571 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 22
  %572 = getelementptr inbounds %class.SysCArray1D* %571, i32 0, i32 0
  %573 = load i8** %572, align 8
  %574 = call zeroext i1 @__CPROVER_array_equal(i8* %570, i8* %573)
  call void @__CPROVER_assert(i1 zeroext %574, i8* getelementptr inbounds ([18 x i8]* @.str28, i32 0, i32 0))
  br label %694
                                                  ; No predecessors!
  store i16 0, i16* %j, align 2
  br label %576

; <label>:576                                     ; preds = %593, %575
  %577 = load i16* %j, align 2
  %578 = zext i16 %577 to i32
  %579 = icmp slt i32 %578, 5
  br i1 %579, label %580, label %596

; <label>:580                                     ; preds = %576
  store i32 1, i32* @per_v_pc, align 4
  store i32 1, i32* @predict_upc, align 4
  %581 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %582 = load i16* %j, align 2
  %583 = zext i16 %582 to i32
  %584 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %581, i32 %583)
  %585 = load float* %584
  store float %585, float* %tmp1, align 4
  call void @_Z4waitv()
  %586 = load float* %tmp1, align 4
  %587 = load float* %max, align 4
  %588 = fsub float %586, %587
  %589 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %590 = load i16* %j, align 2
  %591 = zext i16 %590 to i32
  %592 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %589, i32 %591)
  store float %588, float* %592
  call void @_Z4waitv()
  br label %593

; <label>:593                                     ; preds = %580
  %594 = load i16* %j, align 2
  %595 = add i16 %594, 1
  store i16 %595, i16* %j, align 2
  br label %576

; <label>:596                                     ; preds = %576
  store i32 2, i32* @per_v_pc, align 4
  store i32 1, i32* @predict_upc, align 4
  store float 0.000000e+00, float* %sumOfpow2, align 4
  br label %597

; <label>:597                                     ; preds = %596
  store i16 0, i16* %j, align 2
  br label %598

; <label>:598                                     ; preds = %620, %597
  %599 = load i16* %j, align 2
  %600 = zext i16 %599 to i32
  %601 = icmp slt i32 %600, 5
  br i1 %601, label %602, label %623

; <label>:602                                     ; preds = %598
  store i32 2, i32* @per_v_pc, align 4
  store i32 1, i32* @predict_upc, align 4
  %603 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 26
  %604 = load i16* %j, align 2
  %605 = zext i16 %604 to i32
  %606 = call float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %603, i32 %605)
  %607 = load float* %606
  store float %607, float* %tmp1, align 4
  call void @_Z4waitv()
  %608 = load float* %tmp1, align 4
  %609 = call i64 @_Z8_c_16_15f(float %608)
  %610 = call zeroext i16 @_Z10to_int_expl(i64 %609)
  %611 = zext i16 %610 to i64
  %612 = call float @_Z8_b_16_15l(i64 %611)
  store float %612, float* %dp, align 4
  %613 = load float* %dp, align 4
  %614 = load float* %sumOfpow2, align 4
  %615 = fadd float %614, %613
  store float %615, float* %sumOfpow2, align 4
  %616 = load float* %dp, align 4
  %617 = load i16* %j, align 2
  %618 = zext i16 %617 to i64
  %619 = getelementptr inbounds [5 x float]* %pow2, i32 0, i64 %618
  store float %616, float* %619
  br label %620

; <label>:620                                     ; preds = %602
  %621 = load i16* %j, align 2
  %622 = add i16 %621, 1
  store i16 %622, i16* %j, align 2
  br label %598

; <label>:623                                     ; preds = %598
  store i32 3, i32* @per_v_pc, align 4
  store i32 1, i32* @predict_upc, align 4
  store float 0.000000e+00, float* %expectation, align 4
  br label %624

; <label>:624                                     ; preds = %623
  store i16 0, i16* %j, align 2
  br label %625

; <label>:625                                     ; preds = %644, %624
  %626 = load i16* %j, align 2
  %627 = zext i16 %626 to i32
  %628 = icmp slt i32 %627, 5
  br i1 %628, label %629, label %647

; <label>:629                                     ; preds = %625
  store i32 3, i32* @per_v_pc, align 4
  store i32 1, i32* @predict_upc, align 4
  %630 = load i16* %j, align 2
  %631 = zext i16 %630 to i64
  %632 = getelementptr inbounds [5 x float]* %pow2, i32 0, i64 %631
  %633 = load float* %632
  store float %633, float* %dp1, align 4
  call void @_Z4waitv()
  %634 = load float* %dp1, align 4
  %635 = load float* %sumOfpow2, align 4
  %636 = fdiv float %634, %635
  store float %636, float* %probs, align 4
  %637 = load i16* %j, align 2
  %638 = zext i16 %637 to i32
  %639 = sitofp i32 %638 to float
  %640 = load float* %probs, align 4
  %641 = fmul float %639, %640
  %642 = load float* %expectation, align 4
  %643 = fadd float %642, %641
  store float %643, float* %expectation, align 4
  br label %644

; <label>:644                                     ; preds = %629
  %645 = load i16* %j, align 2
  %646 = add i16 %645, 1
  store i16 %646, i16* %j, align 2
  br label %625

; <label>:647                                     ; preds = %625
  store i32 2, i32* @predict_upc, align 4
  %648 = load float* %expectation, align 4
  %649 = fptosi float %648 to i64
  %650 = call zeroext i16 @_Z5roundl(i64 %649)
  %651 = trunc i16 %650 to i8
  store i8 %651, i8* %prediction, align 1
  br label %652

; <label>:652                                     ; preds = %647
  store i16 0, i16* %j, align 2
  br label %653

; <label>:653                                     ; preds = %680, %652
  %654 = load i16* %j, align 2
  %655 = zext i16 %654 to i32
  %656 = icmp slt i32 %655, 5
  br i1 %656, label %657, label %683

; <label>:657                                     ; preds = %653
  store i32 2, i32* @predict_upc, align 4
  %658 = load i16* %j, align 2
  %659 = zext i16 %658 to i32
  %660 = load i8* %prediction, align 1
  %661 = zext i8 %660 to i32
  %662 = icmp eq i32 %659, %661
  br i1 %662, label %663, label %671

; <label>:663                                     ; preds = %657
  %664 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 27
  %665 = load i16* %v, align 2
  %666 = zext i16 %665 to i32
  %667 = load i16* %j, align 2
  %668 = zext i16 %667 to i32
  %669 = add nsw i32 %666, %668
  %670 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %664, i32 %669)
  store i8 1, i8* %670
  br label %679

; <label>:671                                     ; preds = %657
  %672 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 27
  %673 = load i16* %v, align 2
  %674 = zext i16 %673 to i32
  %675 = load i16* %j, align 2
  %676 = zext i16 %675 to i32
  %677 = add nsw i32 %674, %676
  %678 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %672, i32 %677)
  store i8 0, i8* %678
  br label %679

; <label>:679                                     ; preds = %671, %663
  call void @_Z4waitv()
  br label %680

; <label>:680                                     ; preds = %679
  %681 = load i16* %j, align 2
  %682 = add i16 %681, 1
  store i16 %682, i16* %j, align 2
  br label %653

; <label>:683                                     ; preds = %653
  br label %684

; <label>:684                                     ; preds = %683
  %685 = load i16* %v, align 2
  %686 = zext i16 %685 to i32
  %687 = add nsw i32 %686, 5
  %688 = trunc i32 %687 to i16
  store i16 %688, i16* %v, align 2
  br label %21

; <label>:689                                     ; preds = %31, %21
  %690 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 27
  %691 = load i16* %3, align 2
  %692 = zext i16 %691 to i32
  %693 = call i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %690, i32 %692)
  store i8 1, i8* %693
  call void @_Z4waitv()
  store i32 0, i32* @per_v_pc, align 4
  store i32 2, i32* @predict_upc, align 4
  br label %694

; <label>:694                                     ; preds = %689, %411, %53
  ret void
}

define linkonce_odr i8* @_ZN11SysCArray1DIbLj512EEixEj(%class.SysCArray1D* %this, i32 %idx) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i32 %idx, i32* %2, align 4
  %3 = load %class.SysCArray1D** %1
  %4 = load i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = getelementptr inbounds i8* %7, i64 %5
  ret i8* %8
}

define linkonce_odr i8* @_ZN13SysCArray2DstIhLj2ELj128EEixEj(%class.SysCArray2Dst* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2Dst*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2Dst** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 128
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define linkonce_odr i8* @_ZN13SysCArray2DstIhLj2ELj512EEixEj(%class.SysCArray2Dst* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2Dst*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2Dst** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 512
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2Dst* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define linkonce_odr float* @_ZN11SysCArray2DIfLj501ELj101EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  store i32 %Xidx, i32* %2, align 4
  %3 = load %class.SysCArray2D** %1
  %4 = load i32* %2, align 4
  %5 = mul i32 %4, 101
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.SysCArray2D* %3, i32 0, i32 0
  %8 = load float** %7, align 8
  %9 = getelementptr inbounds float* %8, i64 %6
  ret float* %9
}

define linkonce_odr i8* @_ZN11SysCArray1DIbLj128EEixEj(%class.SysCArray1D* %this, i32 %idx) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i32 %idx, i32* %2, align 4
  %3 = load %class.SysCArray1D** %1
  %4 = load i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = getelementptr inbounds i8* %7, i64 %5
  ret i8* %8
}

define linkonce_odr i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  %3 = getelementptr inbounds %class.sc_signal_int32* %2, i32 0, i32 0
  %4 = load i32* %3, align 4
  ret i32 %4
}

declare zeroext i1 @__CPROVER_array_equal(i8*, i8*)

define linkonce_odr void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %this, i32* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i32* %d, i32** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i32** %2
  %5 = load i32* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_int32* %3, i32 0, i32 0
  store i32 %5, i32* %6, align 4
  ret void
}

declare void @__CPROVER_array_copy(i8*, i8*)

declare void @__CPROVER_assume(i1 zeroext)

define linkonce_odr float* @_ZN11SysCArray1DIfLj5EEixEj(%class.SysCArray2D* %this, i32 %idx) nounwind align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  %2 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  store i32 %idx, i32* %2, align 4
  %3 = load %class.SysCArray2D** %1
  %4 = load i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.SysCArray2D* %3, i32 0, i32 0
  %7 = load float** %6, align 8
  %8 = getelementptr inbounds float* %7, i64 %5
  ret float* %8
}

define internal void @__cxx_global_var_init30() {
  call void @_ZN3rbmC1Ev(%struct.rbm* @IMPL)
  ret void
}

define linkonce_odr void @_ZN3rbmC1Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  call void @_ZN3rbmC2Ev(%struct.rbm* %2)
  ret void
}

define i32 @main() {
  %1 = alloca i32, align 4
  store i32 0, i32* %1
  call void @_ZN3rbm11predict_rbmEv(%struct.rbm* @IMPL)
  ret i32 0
}

define linkonce_odr void @_ZN8type_memItLj8EEC2Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  %3 = call i8* @__CPROVER_malloc(i64 16)
  %4 = bitcast i8* %3 to i16*
  %5 = getelementptr inbounds %1* %2, i32 0, i32 0
  store i16* %4, i16** %5, align 8
  ret void
}

declare i8* @__CPROVER_malloc(i64)

define linkonce_odr void @_ZN8type_memIbLj512EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 512)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EEC2Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  %3 = call i8* @__CPROVER_malloc(i64 32)
  %4 = bitcast i8* %3 to i32*
  %5 = getelementptr inbounds %0* %2, i32 0, i32 0
  store i32* %4, i32** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EED2Ev(%1* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EED2Ev(%0* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN3rbmC2Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  %3 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 0
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %3, i8* getelementptr inbounds ([4 x i8]* @.str31, i32 0, i32 0))
  %4 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %4, i8* getelementptr inbounds ([4 x i8]* @.str32, i32 0, i32 0))
  %5 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 2
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %5, i8* getelementptr inbounds ([9 x i8]* @.str33, i32 0, i32 0))
  %6 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 3
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %6, i8* getelementptr inbounds ([10 x i8]* @.str34, i32 0, i32 0))
  %7 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 4
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %7, i8* getelementptr inbounds ([11 x i8]* @.str35, i32 0, i32 0))
  %8 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 5
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %8, i8* getelementptr inbounds ([9 x i8]* @.str36, i32 0, i32 0))
  %9 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 6
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %9, i8* getelementptr inbounds ([8 x i8]* @.str37, i32 0, i32 0))
  %10 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 7
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %10, i8* getelementptr inbounds ([9 x i8]* @.str38, i32 0, i32 0))
  %11 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 8
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %11, i8* getelementptr inbounds ([10 x i8]* @.str39, i32 0, i32 0))
  %12 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 9
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %12, i8* getelementptr inbounds ([11 x i8]* @.str40, i32 0, i32 0))
  %13 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 10
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %13, i8* getelementptr inbounds ([9 x i8]* @.str41, i32 0, i32 0))
  %14 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 11
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %14, i8* getelementptr inbounds ([9 x i8]* @.str42, i32 0, i32 0))
  %15 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 12
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %15, i8* getelementptr inbounds ([5 x i8]* @.str43, i32 0, i32 0))
  %16 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 13
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %16, i8* getelementptr inbounds ([10 x i8]* @.str44, i32 0, i32 0))
  %17 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 14
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %17, i8* getelementptr inbounds ([16 x i8]* @.str45, i32 0, i32 0))
  %18 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 15
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %18, i8* getelementptr inbounds ([17 x i8]* @.str46, i32 0, i32 0))
  %19 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 16
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %19, i8* getelementptr inbounds ([15 x i8]* @.str47, i32 0, i32 0))
  %20 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 17
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %20, i8* getelementptr inbounds ([15 x i8]* @.str48, i32 0, i32 0))
  %21 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 18
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %21, i8* getelementptr inbounds ([19 x i8]* @.str49, i32 0, i32 0))
  %22 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 19
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %22, i8* getelementptr inbounds ([16 x i8]* @.str50, i32 0, i32 0))
  %23 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 20
  call void @_ZN13SysCArray2DstIhLj2ELj512EEC1Ev(%class.SysCArray2Dst* %23)
  %24 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 21
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %24)
  %25 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 22
  call void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %25)
  %26 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 23
  call void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%class.SysCArray2D* %26)
  %27 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 24
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray1D* %27)
  %28 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 25
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray1D* %28)
  %29 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 26
  call void @_ZN11SysCArray1DIfLj5EEC1Ev(%class.SysCArray2D* %29)
  %30 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 27
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %30)
  %31 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 28
  call void @_ZN13SysCArray2DstIhLj2ELj128EEC1Ev(%class.SysCArray2Dst* %31)
  %32 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 30
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %32)
  %33 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 31
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %33)
  %34 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 32
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %34)
  %35 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 33
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %35)
  %36 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 34
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %36)
  %37 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 35
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %37)
  %38 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 36
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %38)
  %39 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 37
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %39)
  %40 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 38
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %40)
  %41 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 39
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %41)
  %42 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 40
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %42)
  %43 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 41
  call void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %43)
  %44 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 42
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %44)
  %45 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 43
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %45)
  %46 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 44
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %46)
  %47 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 45
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %47)
  br label %48

; <label>:48                                      ; preds = %0
  br label %49

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %51 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %50)
  %52 = load i8* %51
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i32
  call void @_Z15reset_signal_isib(i32 %54, i1 zeroext false)
  br label %55

; <label>:55                                      ; preds = %49
  br label %56

; <label>:56                                      ; preds = %55
  %57 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %58 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %57)
  %59 = load i8* %58
  %60 = trunc i8 %59 to i1
  %61 = zext i1 %60 to i32
  call void @_Z15reset_signal_isib(i32 %61, i1 zeroext false)
  br label %62

; <label>:62                                      ; preds = %56
  br label %63

; <label>:63                                      ; preds = %62
  %64 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %65 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %64)
  %66 = load i8* %65
  %67 = trunc i8 %66 to i1
  %68 = zext i1 %67 to i32
  call void @_Z15reset_signal_isib(i32 %68, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %69

; <label>:69                                      ; preds = %63
  br label %70

; <label>:70                                      ; preds = %69
  %71 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %72 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %71)
  %73 = load i8* %72
  %74 = trunc i8 %73 to i1
  %75 = zext i1 %74 to i32
  call void @_Z15reset_signal_isib(i32 %75, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %76

; <label>:76                                      ; preds = %70
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %79 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %78)
  %80 = load i8* %79
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i32
  call void @_Z15reset_signal_isib(i32 %82, i1 zeroext false)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2, align 8
  call void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i8** %2, align 8
  call void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj512EEC1Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  call void @_ZN13SysCArray2DstIhLj2ELj512EEC2Ev(%class.SysCArray2Dst* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray1DIfLj5EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj128EEC1Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  call void @_ZN13SysCArray2DstIhLj2ELj128EEC2Ev(%class.SysCArray2Dst* %2)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  call void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %2)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  call void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %2)
  ret void
}

define linkonce_odr void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  call void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %2)
  ret void
}

define linkonce_odr i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  ret i8* %3
}

define linkonce_odr void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj128EEC2Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  %3 = call i8* @__CPROVER_malloc(i64 256)
  %4 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 128)
  %6 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 20)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %eqsize = alloca i32, align 4
  %acsize = alloca i32, align 4
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  store i32 50601, i32* %acsize, align 4
  %3 = load i32* %acsize, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 1, i32* %eqsize, align 4
  br label %131

; <label>:6                                       ; preds = %0
  %7 = load i32* %acsize, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  store i32 2, i32* %eqsize, align 4
  br label %130

; <label>:10                                      ; preds = %6
  %11 = load i32* %acsize, align 4
  %12 = icmp ugt i32 %11, 2
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %10
  %14 = load i32* %acsize, align 4
  %15 = icmp ule i32 %14, 4
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %13
  store i32 4, i32* %eqsize, align 4
  br label %129

; <label>:17                                      ; preds = %13, %10
  %18 = load i32* %acsize, align 4
  %19 = icmp ugt i32 %18, 4
  br i1 %19, label %20, label %24

; <label>:20                                      ; preds = %17
  %21 = load i32* %acsize, align 4
  %22 = icmp ule i32 %21, 8
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %20
  store i32 8, i32* %eqsize, align 4
  br label %128

; <label>:24                                      ; preds = %20, %17
  %25 = load i32* %acsize, align 4
  %26 = icmp ugt i32 %25, 8
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %24
  %28 = load i32* %acsize, align 4
  %29 = icmp ule i32 %28, 16
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %27
  store i32 16, i32* %eqsize, align 4
  br label %127

; <label>:31                                      ; preds = %27, %24
  %32 = load i32* %acsize, align 4
  %33 = icmp ugt i32 %32, 16
  br i1 %33, label %34, label %38

; <label>:34                                      ; preds = %31
  %35 = load i32* %acsize, align 4
  %36 = icmp ule i32 %35, 32
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %34
  store i32 32, i32* %eqsize, align 4
  br label %126

; <label>:38                                      ; preds = %34, %31
  %39 = load i32* %acsize, align 4
  %40 = icmp ugt i32 %39, 32
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %38
  %42 = load i32* %acsize, align 4
  %43 = icmp ule i32 %42, 64
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %41
  store i32 64, i32* %eqsize, align 4
  br label %125

; <label>:45                                      ; preds = %41, %38
  %46 = load i32* %acsize, align 4
  %47 = icmp ugt i32 %46, 64
  br i1 %47, label %48, label %52

; <label>:48                                      ; preds = %45
  %49 = load i32* %acsize, align 4
  %50 = icmp ule i32 %49, 128
  br i1 %50, label %51, label %52

; <label>:51                                      ; preds = %48
  store i32 128, i32* %eqsize, align 4
  br label %124

; <label>:52                                      ; preds = %48, %45
  %53 = load i32* %acsize, align 4
  %54 = icmp ugt i32 %53, 128
  br i1 %54, label %55, label %59

; <label>:55                                      ; preds = %52
  %56 = load i32* %acsize, align 4
  %57 = icmp ule i32 %56, 256
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %55
  store i32 256, i32* %eqsize, align 4
  br label %123

; <label>:59                                      ; preds = %55, %52
  %60 = load i32* %acsize, align 4
  %61 = icmp ugt i32 %60, 256
  br i1 %61, label %62, label %66

; <label>:62                                      ; preds = %59
  %63 = load i32* %acsize, align 4
  %64 = icmp ule i32 %63, 512
  br i1 %64, label %65, label %66

; <label>:65                                      ; preds = %62
  store i32 512, i32* %eqsize, align 4
  br label %122

; <label>:66                                      ; preds = %62, %59
  %67 = load i32* %acsize, align 4
  %68 = icmp ugt i32 %67, 512
  br i1 %68, label %69, label %73

; <label>:69                                      ; preds = %66
  %70 = load i32* %acsize, align 4
  %71 = icmp ule i32 %70, 1024
  br i1 %71, label %72, label %73

; <label>:72                                      ; preds = %69
  store i32 1024, i32* %eqsize, align 4
  br label %121

; <label>:73                                      ; preds = %69, %66
  %74 = load i32* %acsize, align 4
  %75 = icmp ugt i32 %74, 1024
  br i1 %75, label %76, label %80

; <label>:76                                      ; preds = %73
  %77 = load i32* %acsize, align 4
  %78 = icmp ule i32 %77, 2048
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %76
  store i32 2048, i32* %eqsize, align 4
  br label %120

; <label>:80                                      ; preds = %76, %73
  %81 = load i32* %acsize, align 4
  %82 = icmp ugt i32 %81, 2048
  br i1 %82, label %83, label %87

; <label>:83                                      ; preds = %80
  %84 = load i32* %acsize, align 4
  %85 = icmp ule i32 %84, 4096
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %83
  store i32 4096, i32* %eqsize, align 4
  br label %119

; <label>:87                                      ; preds = %83, %80
  %88 = load i32* %acsize, align 4
  %89 = icmp ugt i32 %88, 4096
  br i1 %89, label %90, label %94

; <label>:90                                      ; preds = %87
  %91 = load i32* %acsize, align 4
  %92 = icmp ule i32 %91, 8192
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %90
  store i32 8192, i32* %eqsize, align 4
  br label %118

; <label>:94                                      ; preds = %90, %87
  %95 = load i32* %acsize, align 4
  %96 = icmp ugt i32 %95, 8192
  br i1 %96, label %97, label %101

; <label>:97                                      ; preds = %94
  %98 = load i32* %acsize, align 4
  %99 = icmp ule i32 %98, 16384
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %97
  store i32 16384, i32* %eqsize, align 4
  br label %117

; <label>:101                                     ; preds = %97, %94
  %102 = load i32* %acsize, align 4
  %103 = icmp ugt i32 %102, 16384
  br i1 %103, label %104, label %108

; <label>:104                                     ; preds = %101
  %105 = load i32* %acsize, align 4
  %106 = icmp ule i32 %105, 32768
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %104
  store i32 32768, i32* %eqsize, align 4
  br label %116

; <label>:108                                     ; preds = %104, %101
  %109 = load i32* %acsize, align 4
  %110 = icmp ugt i32 %109, 32768
  br i1 %110, label %111, label %115

; <label>:111                                     ; preds = %108
  %112 = load i32* %acsize, align 4
  %113 = icmp ule i32 %112, 65536
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %111
  store i32 65536, i32* %eqsize, align 4
  br label %115

; <label>:115                                     ; preds = %114, %111, %108
  br label %116

; <label>:116                                     ; preds = %115, %107
  br label %117

; <label>:117                                     ; preds = %116, %100
  br label %118

; <label>:118                                     ; preds = %117, %93
  br label %119

; <label>:119                                     ; preds = %118, %86
  br label %120

; <label>:120                                     ; preds = %119, %79
  br label %121

; <label>:121                                     ; preds = %120, %72
  br label %122

; <label>:122                                     ; preds = %121, %65
  br label %123

; <label>:123                                     ; preds = %122, %58
  br label %124

; <label>:124                                     ; preds = %123, %51
  br label %125

; <label>:125                                     ; preds = %124, %44
  br label %126

; <label>:126                                     ; preds = %125, %37
  br label %127

; <label>:127                                     ; preds = %126, %30
  br label %128

; <label>:128                                     ; preds = %127, %23
  br label %129

; <label>:129                                     ; preds = %128, %16
  br label %130

; <label>:130                                     ; preds = %129, %9
  br label %131

; <label>:131                                     ; preds = %130, %5
  %132 = load i32* %eqsize, align 4
  %133 = zext i32 %132 to i64
  %134 = mul i64 1, %133
  %135 = call i8* @__CPROVER_malloc(i64 %134)
  %136 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %135, i8** %136, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  %eqsize = alloca i32, align 4
  %acsize = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  store i32 50601, i32* %acsize, align 4
  %3 = load i32* %acsize, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 1, i32* %eqsize, align 4
  br label %131

; <label>:6                                       ; preds = %0
  %7 = load i32* %acsize, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  store i32 2, i32* %eqsize, align 4
  br label %130

; <label>:10                                      ; preds = %6
  %11 = load i32* %acsize, align 4
  %12 = icmp ugt i32 %11, 2
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %10
  %14 = load i32* %acsize, align 4
  %15 = icmp ule i32 %14, 4
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %13
  store i32 4, i32* %eqsize, align 4
  br label %129

; <label>:17                                      ; preds = %13, %10
  %18 = load i32* %acsize, align 4
  %19 = icmp ugt i32 %18, 4
  br i1 %19, label %20, label %24

; <label>:20                                      ; preds = %17
  %21 = load i32* %acsize, align 4
  %22 = icmp ule i32 %21, 8
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %20
  store i32 8, i32* %eqsize, align 4
  br label %128

; <label>:24                                      ; preds = %20, %17
  %25 = load i32* %acsize, align 4
  %26 = icmp ugt i32 %25, 8
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %24
  %28 = load i32* %acsize, align 4
  %29 = icmp ule i32 %28, 16
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %27
  store i32 16, i32* %eqsize, align 4
  br label %127

; <label>:31                                      ; preds = %27, %24
  %32 = load i32* %acsize, align 4
  %33 = icmp ugt i32 %32, 16
  br i1 %33, label %34, label %38

; <label>:34                                      ; preds = %31
  %35 = load i32* %acsize, align 4
  %36 = icmp ule i32 %35, 32
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %34
  store i32 32, i32* %eqsize, align 4
  br label %126

; <label>:38                                      ; preds = %34, %31
  %39 = load i32* %acsize, align 4
  %40 = icmp ugt i32 %39, 32
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %38
  %42 = load i32* %acsize, align 4
  %43 = icmp ule i32 %42, 64
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %41
  store i32 64, i32* %eqsize, align 4
  br label %125

; <label>:45                                      ; preds = %41, %38
  %46 = load i32* %acsize, align 4
  %47 = icmp ugt i32 %46, 64
  br i1 %47, label %48, label %52

; <label>:48                                      ; preds = %45
  %49 = load i32* %acsize, align 4
  %50 = icmp ule i32 %49, 128
  br i1 %50, label %51, label %52

; <label>:51                                      ; preds = %48
  store i32 128, i32* %eqsize, align 4
  br label %124

; <label>:52                                      ; preds = %48, %45
  %53 = load i32* %acsize, align 4
  %54 = icmp ugt i32 %53, 128
  br i1 %54, label %55, label %59

; <label>:55                                      ; preds = %52
  %56 = load i32* %acsize, align 4
  %57 = icmp ule i32 %56, 256
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %55
  store i32 256, i32* %eqsize, align 4
  br label %123

; <label>:59                                      ; preds = %55, %52
  %60 = load i32* %acsize, align 4
  %61 = icmp ugt i32 %60, 256
  br i1 %61, label %62, label %66

; <label>:62                                      ; preds = %59
  %63 = load i32* %acsize, align 4
  %64 = icmp ule i32 %63, 512
  br i1 %64, label %65, label %66

; <label>:65                                      ; preds = %62
  store i32 512, i32* %eqsize, align 4
  br label %122

; <label>:66                                      ; preds = %62, %59
  %67 = load i32* %acsize, align 4
  %68 = icmp ugt i32 %67, 512
  br i1 %68, label %69, label %73

; <label>:69                                      ; preds = %66
  %70 = load i32* %acsize, align 4
  %71 = icmp ule i32 %70, 1024
  br i1 %71, label %72, label %73

; <label>:72                                      ; preds = %69
  store i32 1024, i32* %eqsize, align 4
  br label %121

; <label>:73                                      ; preds = %69, %66
  %74 = load i32* %acsize, align 4
  %75 = icmp ugt i32 %74, 1024
  br i1 %75, label %76, label %80

; <label>:76                                      ; preds = %73
  %77 = load i32* %acsize, align 4
  %78 = icmp ule i32 %77, 2048
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %76
  store i32 2048, i32* %eqsize, align 4
  br label %120

; <label>:80                                      ; preds = %76, %73
  %81 = load i32* %acsize, align 4
  %82 = icmp ugt i32 %81, 2048
  br i1 %82, label %83, label %87

; <label>:83                                      ; preds = %80
  %84 = load i32* %acsize, align 4
  %85 = icmp ule i32 %84, 4096
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %83
  store i32 4096, i32* %eqsize, align 4
  br label %119

; <label>:87                                      ; preds = %83, %80
  %88 = load i32* %acsize, align 4
  %89 = icmp ugt i32 %88, 4096
  br i1 %89, label %90, label %94

; <label>:90                                      ; preds = %87
  %91 = load i32* %acsize, align 4
  %92 = icmp ule i32 %91, 8192
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %90
  store i32 8192, i32* %eqsize, align 4
  br label %118

; <label>:94                                      ; preds = %90, %87
  %95 = load i32* %acsize, align 4
  %96 = icmp ugt i32 %95, 8192
  br i1 %96, label %97, label %101

; <label>:97                                      ; preds = %94
  %98 = load i32* %acsize, align 4
  %99 = icmp ule i32 %98, 16384
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %97
  store i32 16384, i32* %eqsize, align 4
  br label %117

; <label>:101                                     ; preds = %97, %94
  %102 = load i32* %acsize, align 4
  %103 = icmp ugt i32 %102, 16384
  br i1 %103, label %104, label %108

; <label>:104                                     ; preds = %101
  %105 = load i32* %acsize, align 4
  %106 = icmp ule i32 %105, 32768
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %104
  store i32 32768, i32* %eqsize, align 4
  br label %116

; <label>:108                                     ; preds = %104, %101
  %109 = load i32* %acsize, align 4
  %110 = icmp ugt i32 %109, 32768
  br i1 %110, label %111, label %115

; <label>:111                                     ; preds = %108
  %112 = load i32* %acsize, align 4
  %113 = icmp ule i32 %112, 65536
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %111
  store i32 65536, i32* %eqsize, align 4
  br label %115

; <label>:115                                     ; preds = %114, %111, %108
  br label %116

; <label>:116                                     ; preds = %115, %107
  br label %117

; <label>:117                                     ; preds = %116, %100
  br label %118

; <label>:118                                     ; preds = %117, %93
  br label %119

; <label>:119                                     ; preds = %118, %86
  br label %120

; <label>:120                                     ; preds = %119, %79
  br label %121

; <label>:121                                     ; preds = %120, %72
  br label %122

; <label>:122                                     ; preds = %121, %65
  br label %123

; <label>:123                                     ; preds = %122, %58
  br label %124

; <label>:124                                     ; preds = %123, %51
  br label %125

; <label>:125                                     ; preds = %124, %44
  br label %126

; <label>:126                                     ; preds = %125, %37
  br label %127

; <label>:127                                     ; preds = %126, %30
  br label %128

; <label>:128                                     ; preds = %127, %23
  br label %129

; <label>:129                                     ; preds = %128, %16
  br label %130

; <label>:130                                     ; preds = %129, %9
  br label %131

; <label>:131                                     ; preds = %130, %5
  %132 = load i32* %eqsize, align 4
  %133 = zext i32 %132 to i64
  %134 = mul i64 4, %133
  %135 = call i8* @__CPROVER_malloc(i64 %134)
  %136 = bitcast i8* %135 to float*
  %137 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store float* %136, float** %137, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 512)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN13SysCArray2DstIhLj2ELj512EEC2Ev(%class.SysCArray2Dst* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2Dst*, align 8
  store %class.SysCArray2Dst* %this, %class.SysCArray2Dst** %1, align 8
  %2 = load %class.SysCArray2Dst** %1
  %3 = call i8* @__CPROVER_malloc(i64 1024)
  %4 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 512)
  %6 = getelementptr inbounds %class.SysCArray2Dst* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13model_predictD2Ev(%class.model_predict* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  %4 = load %class.model_predict** %1
  %5 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 35
  invoke void @_ZN8type_memItLj8EED1Ev(%1* %5)
          to label %6 unwind label %18

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 26
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %7)
          to label %8 unwind label %22

; <label>:8                                       ; preds = %6
  %9 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 22
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %9)
          to label %10 unwind label %26

; <label>:10                                      ; preds = %8
  %11 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 18
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %11)
          to label %12 unwind label %32

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 6
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %13)
          to label %14 unwind label %38

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 4
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %15)
          to label %16 unwind label %44

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 1
  call void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %17)
  ret void

; <label>:18                                      ; preds = %0
  %19 = call i8* @llvm.eh.exception() nounwind
  store i8* %19, i8** %2
  %20 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %19, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %21 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 26
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %21)
          to label %25 unwind label %55

; <label>:22                                      ; preds = %6
  %23 = call i8* @llvm.eh.exception() nounwind
  store i8* %23, i8** %2
  %24 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %23, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %29

; <label>:25                                      ; preds = %18
  br label %29

; <label>:26                                      ; preds = %8
  %27 = call i8* @llvm.eh.exception() nounwind
  store i8* %27, i8** %2
  %28 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %27, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %35

; <label>:29                                      ; preds = %22, %25
  %30 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 22
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %30)
          to label %31 unwind label %55

; <label>:31                                      ; preds = %29
  br label %35

; <label>:32                                      ; preds = %10
  %33 = call i8* @llvm.eh.exception() nounwind
  store i8* %33, i8** %2
  %34 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %33, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %41

; <label>:35                                      ; preds = %26, %31
  %36 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 18
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %36)
          to label %37 unwind label %55

; <label>:37                                      ; preds = %35
  br label %41

; <label>:38                                      ; preds = %12
  %39 = call i8* @llvm.eh.exception() nounwind
  store i8* %39, i8** %2
  %40 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %39, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %47

; <label>:41                                      ; preds = %32, %37
  %42 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 6
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %42)
          to label %43 unwind label %55

; <label>:43                                      ; preds = %41
  br label %47

; <label>:44                                      ; preds = %14
  %45 = call i8* @llvm.eh.exception() nounwind
  store i8* %45, i8** %2
  %46 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %45, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %50

; <label>:47                                      ; preds = %38, %43
  %48 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 4
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %48)
          to label %49 unwind label %55

; <label>:49                                      ; preds = %47
  br label %50

; <label>:50                                      ; preds = %44, %49
  %51 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 1
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %51)
          to label %52 unwind label %55

; <label>:52                                      ; preds = %50
  br label %53

; <label>:53                                      ; preds = %52
  %54 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %54) noreturn
  unreachable

; <label>:55                                      ; preds = %50, %47, %41, %35, %29, %18
  %56 = call i8* @llvm.eh.exception() nounwind
  %57 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %56, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN13model_predictC2Ev(%class.model_predict* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_predict*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_predict* %this, %class.model_predict** %1, align 8
  %4 = load %class.model_predict** %1
  %5 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 1
  call void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %5, i64 0)
  %6 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 4
  invoke void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %6, i64 0)
          to label %7 unwind label %40

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 6
  invoke void @_ZN8type_memIbLj128EEC1El(%class.SysCArray1D* %8, i64 0)
          to label %9 unwind label %43

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 18
  invoke void @_ZN8type_memIjLj8EEC1El(%0* %10, i64 0)
          to label %11 unwind label %46

; <label>:11                                      ; preds = %9
  %12 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 22
  invoke void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %12, i64 0)
          to label %13 unwind label %49

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 26
  invoke void @_ZN8type_memIbLj512EEC1El(%class.SysCArray1D* %14, i64 0)
          to label %15 unwind label %52

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 35
  invoke void @_ZN8type_memItLj8EEC1El(%1* %16, i64 0)
          to label %17 unwind label %55

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 40
  store i64 1, i64* %18, align 8
  %19 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 41
  store i64 65535, i64* %19, align 8
  %20 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 42
  store i64 131071, i64* %20, align 8
  %21 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 43
  store i64 536870911, i64* %21, align 8
  %22 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 44
  store i64 7, i64* %22, align 8
  %23 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 45
  store i64 4294967295, i64* %23, align 8
  %24 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 46
  store i64 9223372036854775807, i64* %24, align 8
  %25 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 47
  store i64 -1, i64* %25, align 8
  %26 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 48
  store i64 127, i64* %26, align 8
  %27 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 49
  store i64 255, i64* %27, align 8
  %28 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 50
  store i64 -1, i64* %28, align 8
  %29 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 51
  store i64 511, i64* %29, align 8
  %30 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 52
  store i64 32768, i64* %30, align 8
  %31 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 53
  store i64 64, i64* %31, align 8
  %32 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 41
  %33 = load i64* %32, align 8
  %34 = xor i64 %33, -1
  %35 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 54
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 48
  %37 = load i64* %36, align 8
  %38 = xor i64 %37, -1
  %39 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 55
  store i64 %38, i64* %39, align 8
  ret void

; <label>:40                                      ; preds = %0
  %41 = call i8* @llvm.eh.exception() nounwind
  store i8* %41, i8** %2
  %42 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %41, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %72

; <label>:43                                      ; preds = %7
  %44 = call i8* @llvm.eh.exception() nounwind
  store i8* %44, i8** %2
  %45 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %44, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %69

; <label>:46                                      ; preds = %9
  %47 = call i8* @llvm.eh.exception() nounwind
  store i8* %47, i8** %2
  %48 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %47, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %66

; <label>:49                                      ; preds = %11
  %50 = call i8* @llvm.eh.exception() nounwind
  store i8* %50, i8** %2
  %51 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %50, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %63

; <label>:52                                      ; preds = %13
  %53 = call i8* @llvm.eh.exception() nounwind
  store i8* %53, i8** %2
  %54 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %53, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %60

; <label>:55                                      ; preds = %15
  %56 = call i8* @llvm.eh.exception() nounwind
  store i8* %56, i8** %2
  %57 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %56, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %58 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 26
  invoke void @_ZN8type_memIbLj512EED1Ev(%class.SysCArray1D* %58)
          to label %59 unwind label %77

; <label>:59                                      ; preds = %55
  br label %60

; <label>:60                                      ; preds = %59, %52
  %61 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 22
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %61)
          to label %62 unwind label %77

; <label>:62                                      ; preds = %60
  br label %63

; <label>:63                                      ; preds = %62, %49
  %64 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 18
  invoke void @_ZN8type_memIjLj8EED1Ev(%0* %64)
          to label %65 unwind label %77

; <label>:65                                      ; preds = %63
  br label %66

; <label>:66                                      ; preds = %65, %46
  %67 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 6
  invoke void @_ZN8type_memIbLj128EED1Ev(%class.SysCArray1D* %67)
          to label %68 unwind label %77

; <label>:68                                      ; preds = %66
  br label %69

; <label>:69                                      ; preds = %68, %43
  %70 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 4
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %70)
          to label %71 unwind label %77

; <label>:71                                      ; preds = %69
  br label %72

; <label>:72                                      ; preds = %71, %40
  %73 = getelementptr inbounds %class.model_predict* %4, i32 0, i32 1
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %73)
          to label %74 unwind label %77

; <label>:74                                      ; preds = %72
  br label %75

; <label>:75                                      ; preds = %74
  %76 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %76) noreturn
  unreachable

; <label>:77                                      ; preds = %72, %69, %66, %63, %60, %55
  %78 = call i8* @llvm.eh.exception() nounwind
  %79 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %78, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIbLj128EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EEC1El(%0* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %0** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIjLj8EEC2El(%0* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIbLj512EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EEC1El(%1* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %1** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memItLj8EEC2El(%1* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memItLj8EEC2El(%1* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  %2 = alloca i64, align 8
  store %1* %this, %1** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %1** %1
  %4 = call i8* @__CPROVER_malloc(i64 16)
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds %1* %3, i32 0, i32 0
  store i16* %5, i16** %6, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj512EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 512)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 128)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIjLj8EEC2El(%0* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  %2 = alloca i64, align 8
  store %0* %this, %0** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %0** %1
  %4 = call i8* @__CPROVER_malloc(i64 32)
  %5 = bitcast i8* %4 to i32*
  %6 = getelementptr inbounds %0* %3, i32 0, i32 0
  store i32* %5, i32** %6, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIbLj128EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 128)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 65536)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 512)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define internal void @_GLOBAL__I_a() {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init30()
  ret void
}
