; ModuleID = 'vWrapper.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { float*, float* }
%1 = type { float* }
%2 = type { i32, void ()* }
%class.SysCArray1D = type { i8* }
%class.SysCArray2D = type { i8*, i8* }
%class.model_compute = type { %class.SysCArray1D, i64, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%class.sc_signal_bool = type { i8 }
%class.sc_signal_int32 = type { i32 }
%class.sc_signal_u16 = type { i16 }
%class.sc_signal_u32 = type { i32 }
%"class.std::iocout" = type { i8 }
%class.type_mem = type { i8* }
%struct.rbm = type { %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.SysCArray2D, %class.SysCArray1D, %class.SysCArray1D, %0, %class.SysCArray2D, %class.SysCArray2D, %1, %class.SysCArray1D, %class.SysCArray2D, [624 x i32], %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool }

@GM = global %class.model_compute zeroinitializer, align 8
@__dso_handle = external global i8*
@_ZSt4cout = global %class.sc_signal_bool zeroinitializer, align 1
@_ZSt4endl = global i32 0, align 4
@cycleCnt = external global i32
@conf_done_inp = global i8 0, align 1
@conf_num_hidden_inp = global i32 0, align 4
@conf_num_visible_inp = global i32 0, align 4
@conf_num_users_inp = global i32 0, align 4
@conf_num_loops_inp = global i32 0, align 4
@conf_num_testusers_inp = global i32 0, align 4
@conf_num_movies_inp = global i32 0, align 4
@rst_inp = global i8 0, align 1
@rd_grant_inp = global i8 0, align 1
@data_in_inp = global i32 0, align 4
@wr_grant_inp = global i8 0, align 1
@upc = global i32 0, align 4
@rd_complete = global i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"Config done\00"
@.str1 = private unnamed_addr constant [16 x i8] c"init_done_match\00"
@.str2 = private unnamed_addr constant [11 x i8] c"done_match\00"
@.str3 = private unnamed_addr constant [17 x i8] c"num_hidden_match\00"
@.str4 = private unnamed_addr constant [18 x i8] c"num_visible_match\00"
@.str5 = private unnamed_addr constant [16 x i8] c"num_users_match\00"
@.str6 = private unnamed_addr constant [16 x i8] c"num_loops_match\00"
@.str7 = private unnamed_addr constant [20 x i8] c"num_testusers_match\00"
@.str8 = private unnamed_addr constant [17 x i8] c"num_movies_match\00"
@.str9 = private unnamed_addr constant [15 x i8] c"rd_index_match\00"
@.str10 = private unnamed_addr constant [16 x i8] c"rd_length_match\00"
@.str11 = private unnamed_addr constant [17 x i8] c"wr_request_match\00"
@.str12 = private unnamed_addr constant [15 x i8] c"wr_index_match\00"
@.str13 = private unnamed_addr constant [16 x i8] c"wr_length_match\00"
@.str14 = private unnamed_addr constant [15 x i8] c"data_out_match\00"
@.str15 = private unnamed_addr constant [18 x i8] c"rd_complete_match\00"
@.str16 = private unnamed_addr constant [12 x i8] c"index_match\00"
@.str17 = private unnamed_addr constant [17 x i8] c"loop_count_match\00"
@.str18 = private unnamed_addr constant [10 x i8] c"upc_match\00"
@.str19 = private unnamed_addr constant [23 x i8] c"train_input_done_match\00"
@.str20 = private unnamed_addr constant [25 x i8] c"predict_input_done_match\00"
@.str21 = private unnamed_addr constant [11 x i8] c"data_match\00"
@.str22 = private unnamed_addr constant [21 x i8] c"predict_result_match\00"
@.str23 = private unnamed_addr constant [17 x i8] c"rd_request_match\00"
@IMPL = global %struct.rbm zeroinitializer, align 8
@.str25 = private unnamed_addr constant [4 x i8] c"clk\00"
@.str26 = private unnamed_addr constant [4 x i8] c"rst\00"
@.str27 = private unnamed_addr constant [9 x i8] c"rd_index\00"
@.str28 = private unnamed_addr constant [10 x i8] c"rd_length\00"
@.str29 = private unnamed_addr constant [11 x i8] c"rd_request\00"
@.str30 = private unnamed_addr constant [9 x i8] c"rd_grant\00"
@.str31 = private unnamed_addr constant [8 x i8] c"data_in\00"
@.str32 = private unnamed_addr constant [9 x i8] c"wr_index\00"
@.str33 = private unnamed_addr constant [10 x i8] c"wr_length\00"
@.str34 = private unnamed_addr constant [11 x i8] c"wr_request\00"
@.str35 = private unnamed_addr constant [9 x i8] c"wr_grant\00"
@.str36 = private unnamed_addr constant [9 x i8] c"data_out\00"
@.str37 = private unnamed_addr constant [5 x i8] c"done\00"
@.str38 = private unnamed_addr constant [10 x i8] c"cond_done\00"
@.str39 = private unnamed_addr constant [16 x i8] c"conf_num_hidden\00"
@.str40 = private unnamed_addr constant [17 x i8] c"conf_num_visible\00"
@.str41 = private unnamed_addr constant [15 x i8] c"conf_num_users\00"
@.str42 = private unnamed_addr constant [15 x i8] c"conf_num_loops\00"
@.str43 = private unnamed_addr constant [19 x i8] c"conf_num_testusers\00"
@.str44 = private unnamed_addr constant [16 x i8] c"conf_num_movies\00"
@llvm.global_ctors = appending global [1 x %2] [%2 { i32 65535, void ()* @_GLOBAL__I_a }]

define zeroext i1 @_ZN13model_compute9assumps_0Elllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
; <label>:0
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_424 = alloca i64, align 8
  %cppVar_425 = alloca i8, align 1
  %cppVar_426 = alloca i64, align 8
  %cppVar_427 = alloca i8, align 1
  %cppVar_428 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 5
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_425, align 1
  %18 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 2
  %19 = load i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %cppVar_427, align 1
  %22 = load i8* %cppVar_425, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %0
  %25 = load i8* %cppVar_427, align 1
  %26 = trunc i8 %25 to i1
  br label %27

; <label>:27                                      ; preds = %24, %0
  %28 = phi i1 [ false, %0 ], [ %26, %24 ]
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_428, align 1
  %30 = load i8* %cppVar_428, align 1
  %31 = trunc i8 %30 to i1
  ret i1 %31
}

define void @_ZN13model_compute18cppUpdateFun_edgesElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 3
  call void @_ZN8type_memIhLj65536EEC1ERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %14)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC1ERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load %class.SysCArray1D** %2
  call void @_ZN8type_memIhLj65536EEC2ERKS0_(%class.SysCArray1D* %3, %class.SysCArray1D* %4)
  ret void
}

define i64 @_ZN13model_compute18cppUpdateFun_indexElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 4
  %15 = load i64* %14, align 8
  ret i64 %15
}

define i64 @_ZN13model_compute23cppUpdateFun_loop_countElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 6
  %15 = load i64* %14, align 8
  ret i64 %15
}

define i64 @_ZN13model_compute31cppUpdateFun_predict_input_doneElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
; <label>:0
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_340 = alloca i64, align 8
  %cppVar_341 = alloca i8, align 1
  %cppVar_342 = alloca i64, align 8
  %cppVar_343 = alloca i8, align 1
  %cppVar_344 = alloca i8, align 1
  %cppVar_346 = alloca i8, align 1
  %cppVar_345 = alloca i64, align 8
  %cppVar_339 = alloca i64, align 8
  %cppVar_348 = alloca i64, align 8
  %cppVar_347 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_341, align 1
  %18 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %19 = load i64* %18, align 8
  %20 = icmp eq i64 %19, 1
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %cppVar_343, align 1
  %22 = load i8* %cppVar_341, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %0
  %25 = load i8* %cppVar_343, align 1
  %26 = trunc i8 %25 to i1
  br label %27

; <label>:27                                      ; preds = %24, %0
  %28 = phi i1 [ false, %0 ], [ %26, %24 ]
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_344, align 1
  %30 = load i8* %cppVar_344, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %45

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 6
  %34 = load i64* %33, align 8
  %35 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 8
  %36 = load i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %cppVar_346, align 1
  %39 = load i8* %cppVar_346, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %32
  store i64 1, i64* %cppVar_345, align 8
  br label %43

; <label>:42                                      ; preds = %32
  store i64 0, i64* %cppVar_345, align 8
  br label %43

; <label>:43                                      ; preds = %42, %41
  %44 = load i64* %cppVar_345, align 8
  store i64 %44, i64* %cppVar_339, align 8
  br label %48

; <label>:45                                      ; preds = %27
  %46 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 13
  %47 = load i64* %46, align 8
  store i64 %47, i64* %cppVar_339, align 8
  br label %48

; <label>:48                                      ; preds = %45, %43
  %49 = load i64* %cppVar_339, align 8
  ret i64 %49
}

define i64 @_ZN13model_compute24cppUpdateFun_rd_completeElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_355 = alloca i64, align 8
  %cppVar_356 = alloca i8, align 1
  %cppVar_357 = alloca i64, align 8
  %cppVar_358 = alloca i8, align 1
  %cppVar_359 = alloca i8, align 1
  %cppVar_354 = alloca i64, align 8
  %cppVar_350 = alloca i64, align 8
  %cppVar_353 = alloca i64, align 8
  %cppVar_351 = alloca i64, align 8
  %cppVar_352 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_352, align 1
  %18 = load i8* %cppVar_352, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_350, align 8
  br label %46

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_356, align 1
  %26 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %27 = load i64* %26, align 8
  %28 = icmp eq i64 %27, 1
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_358, align 1
  %30 = load i8* %cppVar_356, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %35

; <label>:32                                      ; preds = %21
  %33 = load i8* %cppVar_358, align 1
  %34 = trunc i8 %33 to i1
  br label %35

; <label>:35                                      ; preds = %32, %21
  %36 = phi i1 [ false, %21 ], [ %34, %32 ]
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_359, align 1
  %38 = load i8* %cppVar_359, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %35
  store i64 0, i64* %cppVar_354, align 8
  br label %44

; <label>:41                                      ; preds = %35
  %42 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %43 = load i64* %42, align 8
  store i64 %43, i64* %cppVar_354, align 8
  br label %44

; <label>:44                                      ; preds = %41, %40
  %45 = load i64* %cppVar_354, align 8
  store i64 %45, i64* %cppVar_350, align 8
  br label %46

; <label>:46                                      ; preds = %44, %20
  %47 = load i64* %cppVar_350, align 8
  ret i64 %47
}

define i64 @_ZN13model_compute21cppUpdateFun_rd_indexElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_364 = alloca i64, align 8
  %cppVar_361 = alloca i64, align 8
  %cppVar_362 = alloca i64, align 8
  %cppVar_363 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_363, align 1
  %18 = load i8* %cppVar_363, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %27

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 4
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 25
  %24 = load i64* %23, align 8
  %25 = and i64 %22, %24
  store i64 %25, i64* %cppVar_364, align 8
  %26 = load i64* %cppVar_364, align 8
  store i64 %26, i64* %cppVar_361, align 8
  br label %30

; <label>:27                                      ; preds = %0
  %28 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 16
  %29 = load i64* %28, align 8
  store i64 %29, i64* %cppVar_361, align 8
  br label %30

; <label>:30                                      ; preds = %27, %20
  %31 = load i64* %cppVar_361, align 8
  ret i64 %31
}

define i64 @_ZN13model_compute22cppUpdateFun_rd_lengthElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_369 = alloca i64, align 8
  %cppVar_371 = alloca i64, align 8
  %cppVar_366 = alloca i64, align 8
  %cppVar_370 = alloca i64, align 8
  %cppVar_367 = alloca i64, align 8
  %cppVar_368 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_368, align 1
  %18 = load i8* %cppVar_368, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %33

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 9
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 25
  %24 = load i64* %23, align 8
  %25 = and i64 %22, %24
  store i64 %25, i64* %cppVar_370, align 8
  %26 = load i64* %cppVar_370, align 8
  %27 = mul nsw i64 5, %26
  store i64 %27, i64* %cppVar_371, align 8
  %28 = load i64* %cppVar_371, align 8
  %29 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 26
  %30 = load i64* %29, align 8
  %31 = and i64 %28, %30
  store i64 %31, i64* %cppVar_371, align 8
  %32 = load i64* %cppVar_371, align 8
  store i64 %32, i64* %cppVar_366, align 8
  br label %36

; <label>:33                                      ; preds = %0
  %34 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 17
  %35 = load i64* %34, align 8
  store i64 %35, i64* %cppVar_366, align 8
  br label %36

; <label>:36                                      ; preds = %33, %20
  %37 = load i64* %cppVar_366, align 8
  ret i64 %37
}

define i64 @_ZN13model_compute23cppUpdateFun_rd_requestElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_373 = alloca i64, align 8
  %cppVar_376 = alloca i64, align 8
  %cppVar_374 = alloca i64, align 8
  %cppVar_375 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_375, align 1
  %18 = load i8* %cppVar_375, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 1, i64* %cppVar_373, align 8
  br label %24

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 18
  %23 = load i64* %22, align 8
  store i64 %23, i64* %cppVar_373, align 8
  br label %24

; <label>:24                                      ; preds = %21, %20
  %25 = load i64* %cppVar_373, align 8
  ret i64 %25
}

define i64 @_ZN13model_compute29cppUpdateFun_train_input_doneElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
; <label>:0
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_379 = alloca i64, align 8
  %cppVar_380 = alloca i8, align 1
  %cppVar_381 = alloca i64, align 8
  %cppVar_382 = alloca i8, align 1
  %cppVar_383 = alloca i8, align 1
  %cppVar_385 = alloca i8, align 1
  %cppVar_384 = alloca i64, align 8
  %cppVar_378 = alloca i64, align 8
  %cppVar_387 = alloca i64, align 8
  %cppVar_386 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_380, align 1
  %18 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %19 = load i64* %18, align 8
  %20 = icmp eq i64 %19, 1
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %cppVar_382, align 1
  %22 = load i8* %cppVar_380, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %0
  %25 = load i8* %cppVar_382, align 1
  %26 = trunc i8 %25 to i1
  br label %27

; <label>:27                                      ; preds = %24, %0
  %28 = phi i1 [ false, %0 ], [ %26, %24 ]
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_383, align 1
  %30 = load i8* %cppVar_383, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %45

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 6
  %34 = load i64* %33, align 8
  %35 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 8
  %36 = load i64* %35, align 8
  %37 = icmp slt i64 %34, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %cppVar_385, align 1
  %39 = load i8* %cppVar_385, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %32
  store i64 1, i64* %cppVar_384, align 8
  br label %43

; <label>:42                                      ; preds = %32
  store i64 0, i64* %cppVar_384, align 8
  br label %43

; <label>:43                                      ; preds = %42, %41
  %44 = load i64* %cppVar_384, align 8
  store i64 %44, i64* %cppVar_378, align 8
  br label %48

; <label>:45                                      ; preds = %27
  %46 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 19
  %47 = load i64* %46, align 8
  store i64 %47, i64* %cppVar_378, align 8
  br label %48

; <label>:48                                      ; preds = %45, %43
  %49 = load i64* %cppVar_378, align 8
  ret i64 %49
}

define i64 @_ZN13model_compute16cppUpdateFun_upcElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_394 = alloca i64, align 8
  %cppVar_395 = alloca i8, align 1
  %cppVar_396 = alloca i64, align 8
  %cppVar_397 = alloca i8, align 1
  %cppVar_398 = alloca i8, align 1
  %cppVar_400 = alloca i64, align 8
  %cppVar_401 = alloca i8, align 1
  %cppVar_402 = alloca i64, align 8
  %cppVar_403 = alloca i8, align 1
  %cppVar_404 = alloca i8, align 1
  %cppVar_407 = alloca i64, align 8
  %cppVar_408 = alloca i8, align 1
  %cppVar_409 = alloca i64, align 8
  %cppVar_410 = alloca i8, align 1
  %cppVar_411 = alloca i8, align 1
  %cppVar_413 = alloca i64, align 8
  %cppVar_414 = alloca i8, align 1
  %cppVar_415 = alloca i64, align 8
  %cppVar_416 = alloca i8, align 1
  %cppVar_417 = alloca i8, align 1
  %cppVar_419 = alloca i64, align 8
  %cppVar_420 = alloca i8, align 1
  %cppVar_392 = alloca i64, align 8
  %cppVar_405 = alloca i64, align 8
  %cppVar_421 = alloca i64, align 8
  %cppVar_418 = alloca i64, align 8
  %cppVar_412 = alloca i64, align 8
  %cppVar_406 = alloca i64, align 8
  %cppVar_399 = alloca i64, align 8
  %cppVar_393 = alloca i64, align 8
  %cppVar_389 = alloca i64, align 8
  %cppVar_390 = alloca i64, align 8
  %cppVar_391 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_391, align 1
  %18 = load i8* %cppVar_391, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 1, i64* %cppVar_389, align 8
  br label %124

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_395, align 1
  %26 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %27 = load i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_397, align 1
  %30 = load i8* %cppVar_395, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %35

; <label>:32                                      ; preds = %21
  %33 = load i8* %cppVar_397, align 1
  %34 = trunc i8 %33 to i1
  br label %35

; <label>:35                                      ; preds = %32, %21
  %36 = phi i1 [ false, %21 ], [ %34, %32 ]
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_398, align 1
  %38 = load i8* %cppVar_398, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %43

; <label>:40                                      ; preds = %35
  %41 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %42 = load i64* %41, align 8
  store i64 %42, i64* %cppVar_393, align 8
  br label %122

; <label>:43                                      ; preds = %35
  %44 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %45 = load i64* %44, align 8
  %46 = icmp eq i64 %45, 1
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %cppVar_401, align 1
  %48 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %49 = load i64* %48, align 8
  %50 = icmp eq i64 %49, 1
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %cppVar_403, align 1
  %52 = load i8* %cppVar_401, align 1
  %53 = trunc i8 %52 to i1
  br i1 %53, label %54, label %57

; <label>:54                                      ; preds = %43
  %55 = load i8* %cppVar_403, align 1
  %56 = trunc i8 %55 to i1
  br label %57

; <label>:57                                      ; preds = %54, %43
  %58 = phi i1 [ false, %43 ], [ %56, %54 ]
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %cppVar_404, align 1
  %60 = load i8* %cppVar_404, align 1
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %57
  store i64 2, i64* %cppVar_399, align 8
  br label %120

; <label>:63                                      ; preds = %57
  %64 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %65 = load i64* %64, align 8
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %cppVar_408, align 1
  %68 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 19
  %69 = load i64* %68, align 8
  %70 = icmp eq i64 %69, 1
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %cppVar_410, align 1
  %72 = load i8* %cppVar_408, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %77

; <label>:74                                      ; preds = %63
  %75 = load i8* %cppVar_410, align 1
  %76 = trunc i8 %75 to i1
  br label %77

; <label>:77                                      ; preds = %74, %63
  %78 = phi i1 [ false, %63 ], [ %76, %74 ]
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %cppVar_411, align 1
  %80 = load i8* %cppVar_411, align 1
  %81 = trunc i8 %80 to i1
  br i1 %81, label %82, label %83

; <label>:82                                      ; preds = %77
  store i64 2, i64* %cppVar_406, align 8
  br label %118

; <label>:83                                      ; preds = %77
  %84 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %85 = load i64* %84, align 8
  %86 = icmp eq i64 %85, 2
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %cppVar_414, align 1
  %88 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 13
  %89 = load i64* %88, align 8
  %90 = icmp eq i64 %89, 1
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %cppVar_416, align 1
  %92 = load i8* %cppVar_414, align 1
  %93 = trunc i8 %92 to i1
  br i1 %93, label %94, label %97

; <label>:94                                      ; preds = %83
  %95 = load i8* %cppVar_416, align 1
  %96 = trunc i8 %95 to i1
  br label %97

; <label>:97                                      ; preds = %94, %83
  %98 = phi i1 [ false, %83 ], [ %96, %94 ]
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %cppVar_417, align 1
  %100 = load i8* %cppVar_417, align 1
  %101 = trunc i8 %100 to i1
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %97
  store i64 2, i64* %cppVar_412, align 8
  br label %116

; <label>:103                                     ; preds = %97
  %104 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %105 = load i64* %104, align 8
  %106 = icmp eq i64 %105, 3
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %cppVar_420, align 1
  %108 = load i8* %cppVar_420, align 1
  %109 = trunc i8 %108 to i1
  br i1 %109, label %110, label %111

; <label>:110                                     ; preds = %103
  store i64 3, i64* %cppVar_418, align 8
  br label %114

; <label>:111                                     ; preds = %103
  %112 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %113 = load i64* %112, align 8
  store i64 %113, i64* %cppVar_418, align 8
  br label %114

; <label>:114                                     ; preds = %111, %110
  %115 = load i64* %cppVar_418, align 8
  store i64 %115, i64* %cppVar_412, align 8
  br label %116

; <label>:116                                     ; preds = %114, %102
  %117 = load i64* %cppVar_412, align 8
  store i64 %117, i64* %cppVar_406, align 8
  br label %118

; <label>:118                                     ; preds = %116, %82
  %119 = load i64* %cppVar_406, align 8
  store i64 %119, i64* %cppVar_399, align 8
  br label %120

; <label>:120                                     ; preds = %118, %62
  %121 = load i64* %cppVar_399, align 8
  store i64 %121, i64* %cppVar_393, align 8
  br label %122

; <label>:122                                     ; preds = %120, %40
  %123 = load i64* %cppVar_393, align 8
  store i64 %123, i64* %cppVar_389, align 8
  br label %124

; <label>:124                                     ; preds = %122, %20
  %125 = load i64* %cppVar_389, align 8
  ret i64 %125
}

define void @_ZN13model_compute6updateElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_337 = alloca i64, align 8
  %cppVar_338 = alloca i64, align 8
  %cppVar_349 = alloca i64, align 8
  %cppVar_360 = alloca i64, align 8
  %cppVar_365 = alloca i64, align 8
  %cppVar_372 = alloca i64, align 8
  %cppVar_377 = alloca i64, align 8
  %cppVar_388 = alloca i64, align 8
  %cppVar_422 = alloca i64, align 8
  %cppVar_423 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i32
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %16 = load %class.model_compute** %1
  %17 = load i64* %2, align 8
  %18 = load i64* %3, align 8
  %19 = load i64* %4, align 8
  %20 = load i64* %5, align 8
  %21 = load i64* %6, align 8
  %22 = load i64* %7, align 8
  %23 = load i64* %8, align 8
  %24 = load i64* %9, align 8
  %25 = load i64* %10, align 8
  %26 = load i64* %11, align 8
  %27 = load i64* %12, align 8
  %28 = call i64 @_ZN13model_compute18cppUpdateFun_indexElllllllllll(%class.model_compute* %16, i64 %17, i64 %18, i64 %19, i64 %20, i64 %21, i64 %22, i64 %23, i64 %24, i64 %25, i64 %26, i64 %27)
  store i64 %28, i64* %cppVar_337, align 8
  %29 = load i64* %2, align 8
  %30 = load i64* %3, align 8
  %31 = load i64* %4, align 8
  %32 = load i64* %5, align 8
  %33 = load i64* %6, align 8
  %34 = load i64* %7, align 8
  %35 = load i64* %8, align 8
  %36 = load i64* %9, align 8
  %37 = load i64* %10, align 8
  %38 = load i64* %11, align 8
  %39 = load i64* %12, align 8
  %40 = call i64 @_ZN13model_compute23cppUpdateFun_loop_countElllllllllll(%class.model_compute* %16, i64 %29, i64 %30, i64 %31, i64 %32, i64 %33, i64 %34, i64 %35, i64 %36, i64 %37, i64 %38, i64 %39)
  store i64 %40, i64* %cppVar_338, align 8
  %41 = load i64* %2, align 8
  %42 = load i64* %3, align 8
  %43 = load i64* %4, align 8
  %44 = load i64* %5, align 8
  %45 = load i64* %6, align 8
  %46 = load i64* %7, align 8
  %47 = load i64* %8, align 8
  %48 = load i64* %9, align 8
  %49 = load i64* %10, align 8
  %50 = load i64* %11, align 8
  %51 = load i64* %12, align 8
  %52 = call i64 @_ZN13model_compute31cppUpdateFun_predict_input_doneElllllllllll(%class.model_compute* %16, i64 %41, i64 %42, i64 %43, i64 %44, i64 %45, i64 %46, i64 %47, i64 %48, i64 %49, i64 %50, i64 %51)
  store i64 %52, i64* %cppVar_349, align 8
  %53 = load i64* %2, align 8
  %54 = load i64* %3, align 8
  %55 = load i64* %4, align 8
  %56 = load i64* %5, align 8
  %57 = load i64* %6, align 8
  %58 = load i64* %7, align 8
  %59 = load i64* %8, align 8
  %60 = load i64* %9, align 8
  %61 = load i64* %10, align 8
  %62 = load i64* %11, align 8
  %63 = load i64* %12, align 8
  %64 = call i64 @_ZN13model_compute24cppUpdateFun_rd_completeElllllllllll(%class.model_compute* %16, i64 %53, i64 %54, i64 %55, i64 %56, i64 %57, i64 %58, i64 %59, i64 %60, i64 %61, i64 %62, i64 %63)
  store i64 %64, i64* %cppVar_360, align 8
  %65 = load i64* %2, align 8
  %66 = load i64* %3, align 8
  %67 = load i64* %4, align 8
  %68 = load i64* %5, align 8
  %69 = load i64* %6, align 8
  %70 = load i64* %7, align 8
  %71 = load i64* %8, align 8
  %72 = load i64* %9, align 8
  %73 = load i64* %10, align 8
  %74 = load i64* %11, align 8
  %75 = load i64* %12, align 8
  %76 = call i64 @_ZN13model_compute21cppUpdateFun_rd_indexElllllllllll(%class.model_compute* %16, i64 %65, i64 %66, i64 %67, i64 %68, i64 %69, i64 %70, i64 %71, i64 %72, i64 %73, i64 %74, i64 %75)
  store i64 %76, i64* %cppVar_365, align 8
  %77 = load i64* %2, align 8
  %78 = load i64* %3, align 8
  %79 = load i64* %4, align 8
  %80 = load i64* %5, align 8
  %81 = load i64* %6, align 8
  %82 = load i64* %7, align 8
  %83 = load i64* %8, align 8
  %84 = load i64* %9, align 8
  %85 = load i64* %10, align 8
  %86 = load i64* %11, align 8
  %87 = load i64* %12, align 8
  %88 = call i64 @_ZN13model_compute22cppUpdateFun_rd_lengthElllllllllll(%class.model_compute* %16, i64 %77, i64 %78, i64 %79, i64 %80, i64 %81, i64 %82, i64 %83, i64 %84, i64 %85, i64 %86, i64 %87)
  store i64 %88, i64* %cppVar_372, align 8
  %89 = load i64* %2, align 8
  %90 = load i64* %3, align 8
  %91 = load i64* %4, align 8
  %92 = load i64* %5, align 8
  %93 = load i64* %6, align 8
  %94 = load i64* %7, align 8
  %95 = load i64* %8, align 8
  %96 = load i64* %9, align 8
  %97 = load i64* %10, align 8
  %98 = load i64* %11, align 8
  %99 = load i64* %12, align 8
  %100 = call i64 @_ZN13model_compute23cppUpdateFun_rd_requestElllllllllll(%class.model_compute* %16, i64 %89, i64 %90, i64 %91, i64 %92, i64 %93, i64 %94, i64 %95, i64 %96, i64 %97, i64 %98, i64 %99)
  store i64 %100, i64* %cppVar_377, align 8
  %101 = load i64* %2, align 8
  %102 = load i64* %3, align 8
  %103 = load i64* %4, align 8
  %104 = load i64* %5, align 8
  %105 = load i64* %6, align 8
  %106 = load i64* %7, align 8
  %107 = load i64* %8, align 8
  %108 = load i64* %9, align 8
  %109 = load i64* %10, align 8
  %110 = load i64* %11, align 8
  %111 = load i64* %12, align 8
  %112 = call i64 @_ZN13model_compute29cppUpdateFun_train_input_doneElllllllllll(%class.model_compute* %16, i64 %101, i64 %102, i64 %103, i64 %104, i64 %105, i64 %106, i64 %107, i64 %108, i64 %109, i64 %110, i64 %111)
  store i64 %112, i64* %cppVar_388, align 8
  %113 = load i64* %2, align 8
  %114 = load i64* %3, align 8
  %115 = load i64* %4, align 8
  %116 = load i64* %5, align 8
  %117 = load i64* %6, align 8
  %118 = load i64* %7, align 8
  %119 = load i64* %8, align 8
  %120 = load i64* %9, align 8
  %121 = load i64* %10, align 8
  %122 = load i64* %11, align 8
  %123 = load i64* %12, align 8
  %124 = call i64 @_ZN13model_compute16cppUpdateFun_upcElllllllllll(%class.model_compute* %16, i64 %113, i64 %114, i64 %115, i64 %116, i64 %117, i64 %118, i64 %119, i64 %120, i64 %121, i64 %122, i64 %123)
  store i64 %124, i64* %cppVar_422, align 8
  %125 = load i64* %2, align 8
  %126 = load i64* %3, align 8
  %127 = load i64* %4, align 8
  %128 = load i64* %5, align 8
  %129 = load i64* %6, align 8
  %130 = load i64* %7, align 8
  %131 = load i64* %8, align 8
  %132 = load i64* %9, align 8
  %133 = load i64* %10, align 8
  %134 = load i64* %11, align 8
  %135 = load i64* %12, align 8
  call void @_ZN13model_compute18cppUpdateFun_edgesElllllllllll(%class.SysCArray1D* sret %cppVar_423, %class.model_compute* %16, i64 %125, i64 %126, i64 %127, i64 %128, i64 %129, i64 %130, i64 %131, i64 %132, i64 %133, i64 %134, i64 %135)
  %136 = load i64* %cppVar_337, align 8
  %137 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 4
  store i64 %136, i64* %137, align 8
  %138 = load i64* %cppVar_338, align 8
  %139 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 6
  store i64 %138, i64* %139, align 8
  %140 = load i64* %cppVar_349, align 8
  %141 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 13
  store i64 %140, i64* %141, align 8
  %142 = load i64* %cppVar_360, align 8
  %143 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 15
  store i64 %142, i64* %143, align 8
  %144 = load i64* %cppVar_365, align 8
  %145 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 16
  store i64 %144, i64* %145, align 8
  %146 = load i64* %cppVar_372, align 8
  %147 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 17
  store i64 %146, i64* %147, align 8
  %148 = load i64* %cppVar_377, align 8
  %149 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 18
  store i64 %148, i64* %149, align 8
  %150 = load i64* %cppVar_388, align 8
  %151 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 19
  store i64 %150, i64* %151, align 8
  %152 = load i64* %cppVar_422, align 8
  %153 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 20
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 3
  %155 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %154, %class.SysCArray1D* %cppVar_423)
          to label %156 unwind label %157

; <label>:156                                     ; preds = %0
  store i32 1, i32* %15
  call void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_423)
  ret void

; <label>:157                                     ; preds = %0
  %158 = call i8* @llvm.eh.exception() nounwind
  store i8* %158, i8** %13
  %159 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %158, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_423)
          to label %160 unwind label %163

; <label>:160                                     ; preds = %157
  br label %161

; <label>:161                                     ; preds = %160
  %162 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %162) noreturn
  unreachable

; <label>:163                                     ; preds = %157
  %164 = call i8* @llvm.eh.exception() nounwind
  %165 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %164, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

declare i8* @llvm.eh.exception() nounwind readonly

declare i32 @__gxx_personality_v0(...)

declare i32 @llvm.eh.selector(i8*, i8*, ...) nounwind

declare i32 @llvm.eh.typeid.for(i8*) nounwind

declare void @_Unwind_Resume_or_Rethrow(i8*)

define linkonce_odr void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %2)
  ret void
}

declare void @_ZSt9terminatev()

define internal void @__cxx_global_var_init() {
  call void @_ZN13model_computeC1Ev(%class.model_compute* @GM)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.model_compute*)* @_ZN13model_computeD1Ev to void (i8*)*), i8* bitcast (%class.model_compute* @GM to i8*), i8* bitcast (i8** @__dso_handle to i8*))
  ret void
}

define linkonce_odr void @_ZN13model_computeC1Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %2 = load %class.model_compute** %1
  call void @_ZN13model_computeC2Ev(%class.model_compute* %2)
  ret void
}

define linkonce_odr void @_ZN13model_computeD1Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %2 = load %class.model_compute** %1
  call void @_ZN13model_computeD2Ev(%class.model_compute* %2)
  ret void
}

declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*)

define void @_Z4waitv() nounwind {
  %1 = load i32* @cycleCnt, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @cycleCnt, align 4
  ret void
}

define void @_Z15reset_signal_isib(i32, i1 zeroext) nounwind {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  ret void
}

define void @_Z14set_stack_sizei(i32) nounwind {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  ret void
}

define void @_ZN3rbm6configEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i8, align 1
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %15 = load %struct.rbm** %1
  br label %16

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  store i16 0, i16* %2, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %17, i16* %2)
  %18 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  store i16 0, i16* %3, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %18, i16* %3)
  %19 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  store i16 0, i16* %4, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %19, i16* %4)
  %20 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  store i16 0, i16* %5, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %20, i16* %5)
  %21 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  store i16 0, i16* %6, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %21, i16* %6)
  %22 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %22, i8* %7)
  call void @_Z4waitv()
  br label %23

; <label>:23                                      ; preds = %16
  br label %24

; <label>:24                                      ; preds = %25, %23
  call void @_Z4waitv()
  br label %25

; <label>:25                                      ; preds = %24
  %26 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 13
  %27 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %26)
  %28 = xor i1 %27, true
  br i1 %28, label %24, label %29

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %31 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 14
  %32 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %31)
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %8, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %30, i16* %8)
  %34 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %35 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 15
  %36 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %35)
  %37 = trunc i32 %36 to i16
  store i16 %37, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %34, i16* %9)
  %38 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %39 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 16
  %40 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %39)
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %38, i16* %10)
  %42 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %43 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 17
  %44 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %43)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %11, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %42, i16* %11)
  %46 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 34
  %47 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 18
  %48 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %47)
  %49 = trunc i32 %48 to i16
  store i16 %49, i16* %12, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %46, i16* %12)
  %50 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  %51 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 19
  %52 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %51)
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %13, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %50, i16* %13)
  %54 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* @_ZSt4cout, i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0))
  %55 = load i32* @_ZSt4endl, align 4
  %56 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %54, i32 %55)
  %57 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %57, i8* %14)
  br label %58

; <label>:58                                      ; preds = %29
  br label %59

; <label>:59                                      ; preds = %58, %59
  call void @_Z4waitv()
  br label %59
                                                  ; No predecessors!
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %this, i16* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  %2 = alloca i16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  store i16* %d, i16** %2, align 8
  %3 = load %class.sc_signal_u16** %1
  %4 = load i16** %2
  %5 = load i16* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_u16* %3, i32 0, i32 0
  store i16 %5, i16* %6, align 2
  ret void
}

define linkonce_odr void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  %4 = load i8* %3, align 1
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

define linkonce_odr i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  %3 = getelementptr inbounds %class.sc_signal_int32* %2, i32 0, i32 0
  %4 = load i32* %3, align 4
  ret i32 %4
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* %this, i8*) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i8* %0, i8** %4, align 8
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %this, i32) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i32, align 4
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i32 %0, i32* %4, align 4
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define void @_ZN3rbm4loadEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %index = alloca i16, align 2
  %loop_count = alloca i16, align 2
  %pingpong = alloca i8, align 1
  %tmp1 = alloca i16, align 2
  %tmp2 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %nv = alloca i32, align 4
  %ntu = alloca i32, align 4
  %nu = alloca i32, align 4
  %nlp = alloca i32, align 4
  %nm = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %i = alloca i16, align 2
  %rate = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %dma_index = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %i1 = alloca i16, align 2
  %rate2 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %38 = load %struct.rbm** %1
  %39 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %40 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %39, i8* %2)
  br label %41

; <label>:41                                      ; preds = %0
  %42 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %42, i32* %3)
  %43 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %43, i32* %4)
  %44 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %44, i8* %5)
  %45 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %45, i8* %6)
  %46 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %46, i8* %7)
  br label %47

; <label>:47                                      ; preds = %41
  br label %48

; <label>:48                                      ; preds = %49, %47
  call void @_Z4waitv()
  br label %49

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  %51 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %50)
  %52 = xor i1 %51, true
  br i1 %52, label %48, label %53

; <label>:53                                      ; preds = %49
  store i16 0, i16* %index, align 2
  store i16 0, i16* %loop_count, align 2
  store i8 0, i8* %pingpong, align 1
  %54 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 30
  %55 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 7), align 8
  %56 = trunc i64 %55 to i16
  store i16 %56, i16* %8, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %54, i16* %8)
  %57 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 31
  %58 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 12), align 8
  %59 = trunc i64 %58 to i16
  store i16 %59, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %57, i16* %9)
  %60 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 32
  %61 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 11), align 8
  %62 = trunc i64 %61 to i16
  store i16 %62, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %60, i16* %10)
  %63 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 33
  %64 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 8), align 8
  %65 = trunc i64 %64 to i16
  store i16 %65, i16* %11, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %63, i16* %11)
  %66 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 34
  %67 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 10), align 8
  %68 = trunc i64 %67 to i16
  store i16 %68, i16* %12, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %66, i16* %12)
  %69 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 35
  %70 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 9), align 8
  %71 = trunc i64 %70 to i16
  store i16 %71, i16* %13, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %69, i16* %13)
  %72 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 31
  %73 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %72)
  %74 = zext i16 %73 to i32
  store i32 %74, i32* %nv, align 4
  %75 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 34
  %76 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %75)
  %77 = zext i16 %76 to i32
  store i32 %77, i32* %ntu, align 4
  %78 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 32
  %79 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %78)
  %80 = zext i16 %79 to i32
  store i32 %80, i32* %nu, align 4
  %81 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 33
  %82 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %81)
  %83 = zext i16 %82 to i32
  store i32 %83, i32* %nlp, align 4
  %84 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 35
  %85 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %84)
  %86 = zext i16 %85 to i32
  store i32 %86, i32* %nm, align 4
  br label %239
                                                  ; No predecessors!
  store i32 0, i32* @upc, align 4
  %88 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  %89 = load i16* %index, align 2
  %90 = zext i16 %89 to i32
  store i32 %90, i32* %14, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %88, i32* %14)
  %91 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %92 = load i32* %nm, align 4
  %93 = mul i32 5, %92
  store i32 %93, i32* %15, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %91, i32* %15)
  %94 = load i16* %loop_count, align 2
  %95 = zext i16 %94 to i32
  %96 = load i32* %nlp, align 4
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %105

; <label>:98                                      ; preds = %87
  br label %99

; <label>:99                                      ; preds = %100, %98
  call void @_Z4waitv()
  br label %100

; <label>:100                                     ; preds = %99
  %101 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 40
  %102 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %101)
  %103 = xor i1 %102, true
  br i1 %103, label %99, label %104

; <label>:104                                     ; preds = %100
  br label %105

; <label>:105                                     ; preds = %104, %87
  %106 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 1, i8* %16, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %106, i8* %16)
  br label %107

; <label>:107                                     ; preds = %339, %105
  call void @_Z4waitv()
  store i32 1, i32* @upc, align 4
  br label %108

; <label>:108                                     ; preds = %107
  %109 = load i8* @conf_done_inp, align 1
  %110 = trunc i8 %109 to i1
  %111 = zext i1 %110 to i64
  %112 = load i32* @conf_num_hidden_inp, align 4
  %113 = zext i32 %112 to i64
  %114 = load i32* @conf_num_visible_inp, align 4
  %115 = zext i32 %114 to i64
  %116 = load i32* @conf_num_users_inp, align 4
  %117 = zext i32 %116 to i64
  %118 = load i32* @conf_num_loops_inp, align 4
  %119 = zext i32 %118 to i64
  %120 = load i32* @conf_num_testusers_inp, align 4
  %121 = zext i32 %120 to i64
  %122 = load i32* @conf_num_movies_inp, align 4
  %123 = zext i32 %122 to i64
  %124 = load i8* @rst_inp, align 1
  %125 = trunc i8 %124 to i1
  %126 = zext i1 %125 to i64
  %127 = load i8* @rd_grant_inp, align 1
  %128 = trunc i8 %127 to i1
  %129 = zext i1 %128 to i64
  %130 = load i32* @data_in_inp, align 4
  %131 = zext i32 %130 to i64
  %132 = load i8* @wr_grant_inp, align 1
  %133 = trunc i8 %132 to i1
  %134 = zext i1 %133 to i64
  call void @_ZN13model_compute6updateElllllllllll(%class.model_compute* @GM, i64 %111, i64 %113, i64 %115, i64 %117, i64 %119, i64 %121, i64 %123, i64 %126, i64 %129, i64 %131, i64 %134)
  %135 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  %136 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %135)
  %137 = zext i1 %136 to i64
  %138 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 5), align 8
  %139 = icmp eq i64 %137, %138
  call void @__CPROVER_assert(i1 zeroext %139, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %140 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 12
  %141 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %140)
  %142 = zext i1 %141 to i64
  %143 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 2), align 8
  %144 = icmp eq i64 %142, %143
  call void @__CPROVER_assert(i1 zeroext %144, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %145 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 30
  %146 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %145)
  %147 = zext i16 %146 to i64
  %148 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 7), align 8
  %149 = icmp eq i64 %147, %148
  call void @__CPROVER_assert(i1 zeroext %149, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %150 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 31
  %151 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %150)
  %152 = zext i16 %151 to i64
  %153 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 12), align 8
  %154 = icmp eq i64 %152, %153
  call void @__CPROVER_assert(i1 zeroext %154, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %155 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 32
  %156 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %155)
  %157 = zext i16 %156 to i64
  %158 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 11), align 8
  %159 = icmp eq i64 %157, %158
  call void @__CPROVER_assert(i1 zeroext %159, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %160 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 33
  %161 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %160)
  %162 = zext i16 %161 to i64
  %163 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 8), align 8
  %164 = icmp eq i64 %162, %163
  call void @__CPROVER_assert(i1 zeroext %164, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %165 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 34
  %166 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %165)
  %167 = zext i16 %166 to i64
  %168 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 10), align 8
  %169 = icmp eq i64 %167, %168
  call void @__CPROVER_assert(i1 zeroext %169, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %170 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 35
  %171 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %170)
  %172 = zext i16 %171 to i64
  %173 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 9), align 8
  %174 = icmp eq i64 %172, %173
  call void @__CPROVER_assert(i1 zeroext %174, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %175 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  %176 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %175)
  %177 = zext i32 %176 to i64
  %178 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 16), align 8
  %179 = icmp eq i64 %177, %178
  call void @__CPROVER_assert(i1 zeroext %179, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %180 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %181 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %180)
  %182 = zext i32 %181 to i64
  %183 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 17), align 8
  %184 = icmp eq i64 %182, %183
  call void @__CPROVER_assert(i1 zeroext %184, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %185 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 9
  %186 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %185)
  %187 = zext i1 %186 to i64
  %188 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 24), align 8
  %189 = icmp eq i64 %187, %188
  call void @__CPROVER_assert(i1 zeroext %189, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %190 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 7
  %191 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %190)
  %192 = zext i32 %191 to i64
  %193 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 22), align 8
  %194 = icmp eq i64 %192, %193
  call void @__CPROVER_assert(i1 zeroext %194, i8* getelementptr inbounds ([15 x i8]* @.str12, i32 0, i32 0))
  %195 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 8
  %196 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %195)
  %197 = zext i32 %196 to i64
  %198 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 23), align 8
  %199 = icmp eq i64 %197, %198
  call void @__CPROVER_assert(i1 zeroext %199, i8* getelementptr inbounds ([16 x i8]* @.str13, i32 0, i32 0))
  %200 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 11
  %201 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %200)
  %202 = zext i32 %201 to i64
  %203 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 1), align 8
  %204 = icmp eq i64 %202, %203
  call void @__CPROVER_assert(i1 zeroext %204, i8* getelementptr inbounds ([15 x i8]* @.str14, i32 0, i32 0))
  %205 = load i32* @rd_complete, align 4
  %206 = zext i32 %205 to i64
  %207 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 15), align 8
  %208 = icmp eq i64 %206, %207
  call void @__CPROVER_assert(i1 zeroext %208, i8* getelementptr inbounds ([18 x i8]* @.str15, i32 0, i32 0))
  %209 = load i16* %index, align 2
  %210 = zext i16 %209 to i64
  %211 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 4), align 8
  %212 = icmp eq i64 %210, %211
  call void @__CPROVER_assert(i1 zeroext %212, i8* getelementptr inbounds ([12 x i8]* @.str16, i32 0, i32 0))
  %213 = load i16* %loop_count, align 2
  %214 = zext i16 %213 to i64
  %215 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 6), align 8
  %216 = icmp eq i64 %214, %215
  call void @__CPROVER_assert(i1 zeroext %216, i8* getelementptr inbounds ([17 x i8]* @.str17, i32 0, i32 0))
  %217 = load i32* @upc, align 4
  %218 = zext i32 %217 to i64
  %219 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 20), align 8
  %220 = icmp eq i64 %218, %219
  call void @__CPROVER_assert(i1 zeroext %220, i8* getelementptr inbounds ([10 x i8]* @.str18, i32 0, i32 0))
  %221 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  %222 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %221)
  %223 = zext i1 %222 to i64
  %224 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 19), align 8
  %225 = icmp eq i64 %223, %224
  call void @__CPROVER_assert(i1 zeroext %225, i8* getelementptr inbounds ([23 x i8]* @.str19, i32 0, i32 0))
  %226 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  %227 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %226)
  %228 = zext i1 %227 to i64
  %229 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 13), align 8
  %230 = icmp eq i64 %228, %229
  call void @__CPROVER_assert(i1 zeroext %230, i8* getelementptr inbounds ([25 x i8]* @.str20, i32 0, i32 0))
  %231 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 0, i32 0), align 8
  %232 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %233 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %232, i32 0)
  %234 = call zeroext i1 @__CPROVER_array_equal(i8* %231, i8* %233)
  call void @__CPROVER_assert(i1 zeroext %234, i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0))
  %235 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 14, i32 0), align 8
  %236 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 28
  %237 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %236, i32 0)
  %238 = call zeroext i1 @__CPROVER_array_equal(i8* %235, i8* %237)
  call void @__CPROVER_assert(i1 zeroext %238, i8* getelementptr inbounds ([21 x i8]* @.str22, i32 0, i32 0))
  br label %693

; <label>:239                                     ; preds = %53
  store i8 0, i8* @rst_inp, align 1
  %240 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  store i8 1, i8* %17, align 1
  %241 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %240, i8* %17)
  %242 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 12
  store i8 0, i8* %18, align 1
  %243 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %242, i8* %18)
  %244 = load i8* @conf_done_inp, align 1
  %245 = trunc i8 %244 to i1
  %246 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 13
  %247 = getelementptr inbounds %class.sc_signal_bool* %246, i32 0, i32 0
  %248 = zext i1 %245 to i8
  store i8 %248, i8* %247, align 1
  %249 = load i32* @conf_num_hidden_inp, align 4
  %250 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 14
  %251 = getelementptr inbounds %class.sc_signal_int32* %250, i32 0, i32 0
  store i32 %249, i32* %251, align 4
  %252 = load i32* @conf_num_visible_inp, align 4
  %253 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 15
  %254 = getelementptr inbounds %class.sc_signal_int32* %253, i32 0, i32 0
  store i32 %252, i32* %254, align 4
  %255 = load i32* @conf_num_users_inp, align 4
  %256 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 16
  %257 = getelementptr inbounds %class.sc_signal_int32* %256, i32 0, i32 0
  store i32 %255, i32* %257, align 4
  %258 = load i32* @conf_num_loops_inp, align 4
  %259 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 17
  %260 = getelementptr inbounds %class.sc_signal_int32* %259, i32 0, i32 0
  store i32 %258, i32* %260, align 4
  %261 = load i32* @conf_num_testusers_inp, align 4
  %262 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 18
  %263 = getelementptr inbounds %class.sc_signal_int32* %262, i32 0, i32 0
  store i32 %261, i32* %263, align 4
  %264 = load i32* @conf_num_movies_inp, align 4
  %265 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 19
  %266 = getelementptr inbounds %class.sc_signal_int32* %265, i32 0, i32 0
  store i32 %264, i32* %266, align 4
  %267 = load i8* @rst_inp, align 1
  %268 = trunc i8 %267 to i1
  %269 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 1
  %270 = getelementptr inbounds %class.sc_signal_bool* %269, i32 0, i32 0
  %271 = zext i1 %268 to i8
  store i8 %271, i8* %270, align 1
  %272 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  %273 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 5), align 8
  %274 = icmp ne i64 %273, 0
  %275 = zext i1 %274 to i8
  store i8 %275, i8* %19, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %272, i8* %19)
  %276 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 12
  %277 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 2), align 8
  %278 = icmp ne i64 %277, 0
  %279 = zext i1 %278 to i8
  store i8 %279, i8* %20, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %276, i8* %20)
  %280 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  %281 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 16), align 8
  %282 = trunc i64 %281 to i32
  store i32 %282, i32* %21, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %280, i32* %21)
  %283 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %284 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 17), align 8
  %285 = trunc i64 %284 to i32
  store i32 %285, i32* %22, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %283, i32* %22)
  %286 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  %287 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 18), align 8
  %288 = icmp ne i64 %287, 0
  %289 = zext i1 %288 to i8
  store i8 %289, i8* %23, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %286, i8* %23)
  %290 = load i8* @rd_grant_inp, align 1
  %291 = trunc i8 %290 to i1
  %292 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 5
  %293 = getelementptr inbounds %class.sc_signal_bool* %292, i32 0, i32 0
  %294 = zext i1 %291 to i8
  store i8 %294, i8* %293, align 1
  %295 = load i32* @data_in_inp, align 4
  %296 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 6
  %297 = getelementptr inbounds %class.sc_signal_int32* %296, i32 0, i32 0
  store i32 %295, i32* %297, align 4
  %298 = load i8* @wr_grant_inp, align 1
  %299 = trunc i8 %298 to i1
  %300 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 10
  %301 = getelementptr inbounds %class.sc_signal_bool* %300, i32 0, i32 0
  %302 = zext i1 %299 to i8
  store i8 %302, i8* %301, align 1
  %303 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 9
  %304 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 24), align 8
  %305 = icmp ne i64 %304, 0
  %306 = zext i1 %305 to i8
  store i8 %306, i8* %24, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %303, i8* %24)
  %307 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 7
  %308 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 22), align 8
  %309 = trunc i64 %308 to i32
  store i32 %309, i32* %25, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %307, i32* %25)
  %310 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 8
  %311 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 23), align 8
  %312 = trunc i64 %311 to i32
  store i32 %312, i32* %26, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %310, i32* %26)
  %313 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 11
  %314 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 1), align 8
  %315 = trunc i64 %314 to i32
  store i32 %315, i32* %27, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %313, i32* %27)
  %316 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 4), align 8
  %317 = trunc i64 %316 to i16
  store i16 %317, i16* %index, align 2
  %318 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 6), align 8
  %319 = trunc i64 %318 to i16
  store i16 %319, i16* %loop_count, align 2
  %320 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  %321 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 19), align 8
  %322 = icmp ne i64 %321, 0
  %323 = zext i1 %322 to i8
  store i8 %323, i8* %28, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %320, i8* %28)
  %324 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  %325 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 13), align 8
  %326 = icmp ne i64 %325, 0
  %327 = zext i1 %326 to i8
  store i8 %327, i8* %29, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %324, i8* %29)
  %328 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %329 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %328, i32 0)
  %330 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 0, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %329, i8* %330)
  %331 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 28
  %332 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %331, i32 0)
  %333 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 14, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %332, i8* %333)
  %334 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 23
  %335 = getelementptr inbounds %0* %334, i32 0, i32 0
  %336 = load float** %335, align 8
  %337 = bitcast float* %336 to i8*
  %338 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 3, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %337, i8* %338)
  store i32 0, i32* @rd_complete, align 4
  br label %339

; <label>:339                                     ; preds = %239
  %340 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 5
  %341 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %340)
  %342 = xor i1 %341, true
  br i1 %342, label %107, label %343

; <label>:343                                     ; preds = %339
  %344 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 0, i8* %30, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %344, i8* %30)
  %345 = load i16* %loop_count, align 2
  %346 = zext i16 %345 to i32
  %347 = load i32* %nu, align 4
  %348 = mul i32 %346, %347
  %349 = trunc i32 %348 to i16
  store i16 %349, i16* %tmp1, align 2
  %350 = load i16* %tmp1, align 2
  %351 = zext i16 %350 to i32
  %352 = load i16* %index, align 2
  %353 = zext i16 %352 to i32
  %354 = add nsw i32 %351, %353
  %355 = trunc i32 %354 to i16
  store i16 %355, i16* %tmp2, align 2
  %356 = load i16* %tmp2, align 2
  %357 = zext i16 %356 to i32
  %358 = srem i32 %357, 2
  %359 = icmp ne i32 %358, 0
  %360 = zext i1 %359 to i8
  store i8 %360, i8* %pingpong, align 1
  br label %361

; <label>:361                                     ; preds = %343
  store i16 0, i16* %i, align 2
  br label %362

; <label>:362                                     ; preds = %385, %361
  %363 = load i16* %i, align 2
  %364 = zext i16 %363 to i32
  %365 = icmp slt i32 %364, 500
  br i1 %365, label %366, label %388

; <label>:366                                     ; preds = %362
  %367 = load i16* %i, align 2
  %368 = zext i16 %367 to i32
  %369 = load i32* %nv, align 4
  %370 = icmp eq i32 %368, %369
  br i1 %370, label %371, label %372

; <label>:371                                     ; preds = %366
  br label %388

; <label>:372                                     ; preds = %366
  %373 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 6
  %374 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %373)
  %375 = trunc i32 %374 to i8
  store i8 %375, i8* %rate, align 1
  call void @_Z4waitv()
  %376 = load i8* %rate, align 1
  %377 = load i16* %i, align 2
  %378 = zext i16 %377 to i64
  %379 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %380 = load i8* %pingpong, align 1
  %381 = trunc i8 %380 to i1
  %382 = zext i1 %381 to i32
  %383 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %379, i32 %382)
  %384 = getelementptr inbounds i8* %383, i64 %378
  store i8 %376, i8* %384
  store i32 0, i32* @rd_complete, align 4
  br label %385

; <label>:385                                     ; preds = %372
  %386 = load i16* %i, align 2
  %387 = add i16 %386, 1
  store i16 %387, i16* %i, align 2
  br label %362

; <label>:388                                     ; preds = %371, %362
  call void @_Z4waitv()
  %389 = load i32* %nv, align 4
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %392 = load i8* %pingpong, align 1
  %393 = trunc i8 %392 to i1
  %394 = zext i1 %393 to i32
  %395 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %391, i32 %394)
  %396 = getelementptr inbounds i8* %395, i64 %390
  store i8 1, i8* %396
  store i32 1, i32* @rd_complete, align 4
  br label %397

; <label>:397                                     ; preds = %388
  %398 = load i8* @conf_done_inp, align 1
  %399 = trunc i8 %398 to i1
  %400 = zext i1 %399 to i64
  %401 = load i32* @conf_num_hidden_inp, align 4
  %402 = zext i32 %401 to i64
  %403 = load i32* @conf_num_visible_inp, align 4
  %404 = zext i32 %403 to i64
  %405 = load i32* @conf_num_users_inp, align 4
  %406 = zext i32 %405 to i64
  %407 = load i32* @conf_num_loops_inp, align 4
  %408 = zext i32 %407 to i64
  %409 = load i32* @conf_num_testusers_inp, align 4
  %410 = zext i32 %409 to i64
  %411 = load i32* @conf_num_movies_inp, align 4
  %412 = zext i32 %411 to i64
  %413 = load i8* @rst_inp, align 1
  %414 = trunc i8 %413 to i1
  %415 = zext i1 %414 to i64
  %416 = load i8* @rd_grant_inp, align 1
  %417 = trunc i8 %416 to i1
  %418 = zext i1 %417 to i64
  %419 = load i32* @data_in_inp, align 4
  %420 = zext i32 %419 to i64
  %421 = load i8* @wr_grant_inp, align 1
  %422 = trunc i8 %421 to i1
  %423 = zext i1 %422 to i64
  call void @_ZN13model_compute6updateElllllllllll(%class.model_compute* @GM, i64 %400, i64 %402, i64 %404, i64 %406, i64 %408, i64 %410, i64 %412, i64 %415, i64 %418, i64 %420, i64 %423)
  %424 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  %425 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %424)
  %426 = zext i1 %425 to i64
  %427 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 5), align 8
  %428 = icmp eq i64 %426, %427
  call void @__CPROVER_assert(i1 zeroext %428, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %429 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 12
  %430 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %429)
  %431 = zext i1 %430 to i64
  %432 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 2), align 8
  %433 = icmp eq i64 %431, %432
  call void @__CPROVER_assert(i1 zeroext %433, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %434 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 30
  %435 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %434)
  %436 = zext i16 %435 to i64
  %437 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 7), align 8
  %438 = icmp eq i64 %436, %437
  call void @__CPROVER_assert(i1 zeroext %438, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %439 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 31
  %440 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %439)
  %441 = zext i16 %440 to i64
  %442 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 12), align 8
  %443 = icmp eq i64 %441, %442
  call void @__CPROVER_assert(i1 zeroext %443, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %444 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 32
  %445 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %444)
  %446 = zext i16 %445 to i64
  %447 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 11), align 8
  %448 = icmp eq i64 %446, %447
  call void @__CPROVER_assert(i1 zeroext %448, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %449 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 33
  %450 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %449)
  %451 = zext i16 %450 to i64
  %452 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 8), align 8
  %453 = icmp eq i64 %451, %452
  call void @__CPROVER_assert(i1 zeroext %453, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %454 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 34
  %455 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %454)
  %456 = zext i16 %455 to i64
  %457 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 10), align 8
  %458 = icmp eq i64 %456, %457
  call void @__CPROVER_assert(i1 zeroext %458, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %459 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 35
  %460 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %459)
  %461 = zext i16 %460 to i64
  %462 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 9), align 8
  %463 = icmp eq i64 %461, %462
  call void @__CPROVER_assert(i1 zeroext %463, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %464 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  %465 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %464)
  %466 = zext i32 %465 to i64
  %467 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 16), align 8
  %468 = icmp eq i64 %466, %467
  call void @__CPROVER_assert(i1 zeroext %468, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %469 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %470 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %469)
  %471 = zext i32 %470 to i64
  %472 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 17), align 8
  %473 = icmp eq i64 %471, %472
  call void @__CPROVER_assert(i1 zeroext %473, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %474 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  %475 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %474)
  %476 = zext i1 %475 to i64
  %477 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 18), align 8
  %478 = icmp eq i64 %476, %477
  call void @__CPROVER_assert(i1 zeroext %478, i8* getelementptr inbounds ([17 x i8]* @.str23, i32 0, i32 0))
  %479 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 9
  %480 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %479)
  %481 = zext i1 %480 to i64
  %482 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 24), align 8
  %483 = icmp eq i64 %481, %482
  call void @__CPROVER_assert(i1 zeroext %483, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %484 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 7
  %485 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %484)
  %486 = zext i32 %485 to i64
  %487 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 22), align 8
  %488 = icmp eq i64 %486, %487
  call void @__CPROVER_assert(i1 zeroext %488, i8* getelementptr inbounds ([15 x i8]* @.str12, i32 0, i32 0))
  %489 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 8
  %490 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %489)
  %491 = zext i32 %490 to i64
  %492 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 23), align 8
  %493 = icmp eq i64 %491, %492
  call void @__CPROVER_assert(i1 zeroext %493, i8* getelementptr inbounds ([16 x i8]* @.str13, i32 0, i32 0))
  %494 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 11
  %495 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %494)
  %496 = zext i32 %495 to i64
  %497 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 1), align 8
  %498 = icmp eq i64 %496, %497
  call void @__CPROVER_assert(i1 zeroext %498, i8* getelementptr inbounds ([15 x i8]* @.str14, i32 0, i32 0))
  %499 = load i32* @rd_complete, align 4
  %500 = zext i32 %499 to i64
  %501 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 15), align 8
  %502 = icmp eq i64 %500, %501
  call void @__CPROVER_assert(i1 zeroext %502, i8* getelementptr inbounds ([18 x i8]* @.str15, i32 0, i32 0))
  %503 = load i16* %index, align 2
  %504 = zext i16 %503 to i64
  %505 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 4), align 8
  %506 = icmp eq i64 %504, %505
  call void @__CPROVER_assert(i1 zeroext %506, i8* getelementptr inbounds ([12 x i8]* @.str16, i32 0, i32 0))
  %507 = load i16* %loop_count, align 2
  %508 = zext i16 %507 to i64
  %509 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 6), align 8
  %510 = icmp eq i64 %508, %509
  call void @__CPROVER_assert(i1 zeroext %510, i8* getelementptr inbounds ([17 x i8]* @.str17, i32 0, i32 0))
  %511 = load i32* @upc, align 4
  %512 = zext i32 %511 to i64
  %513 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 20), align 8
  %514 = icmp eq i64 %512, %513
  call void @__CPROVER_assert(i1 zeroext %514, i8* getelementptr inbounds ([10 x i8]* @.str18, i32 0, i32 0))
  %515 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  %516 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %515)
  %517 = zext i1 %516 to i64
  %518 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 19), align 8
  %519 = icmp eq i64 %517, %518
  call void @__CPROVER_assert(i1 zeroext %519, i8* getelementptr inbounds ([23 x i8]* @.str19, i32 0, i32 0))
  %520 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  %521 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %520)
  %522 = zext i1 %521 to i64
  %523 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 13), align 8
  %524 = icmp eq i64 %522, %523
  call void @__CPROVER_assert(i1 zeroext %524, i8* getelementptr inbounds ([25 x i8]* @.str20, i32 0, i32 0))
  %525 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 0, i32 0), align 8
  %526 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %527 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %526, i32 0)
  %528 = call zeroext i1 @__CPROVER_array_equal(i8* %525, i8* %527)
  call void @__CPROVER_assert(i1 zeroext %528, i8* getelementptr inbounds ([11 x i8]* @.str21, i32 0, i32 0))
  %529 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 14, i32 0), align 8
  %530 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 28
  %531 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %530, i32 0)
  %532 = call zeroext i1 @__CPROVER_array_equal(i8* %529, i8* %531)
  call void @__CPROVER_assert(i1 zeroext %532, i8* getelementptr inbounds ([21 x i8]* @.str22, i32 0, i32 0))
  br label %693
                                                  ; No predecessors!
  br label %534

; <label>:534                                     ; preds = %533, %684
  %535 = load i16* %loop_count, align 2
  %536 = zext i16 %535 to i32
  %537 = load i32* %nlp, align 4
  %538 = icmp ne i32 %536, %537
  br i1 %538, label %539, label %553

; <label>:539                                     ; preds = %534
  %540 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  store i8 1, i8* %31, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %540, i8* %31)
  store i32 2, i32* @upc, align 4
  br label %541

; <label>:541                                     ; preds = %542, %539
  call void @_Z4waitv()
  br label %542

; <label>:542                                     ; preds = %541
  %543 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 39
  %544 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %543)
  %545 = xor i1 %544, true
  br i1 %545, label %541, label %546

; <label>:546                                     ; preds = %542
  %547 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  store i8 0, i8* %32, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %547, i8* %32)
  br label %548

; <label>:548                                     ; preds = %549, %546
  call void @_Z4waitv()
  br label %549

; <label>:549                                     ; preds = %548
  %550 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 39
  %551 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %550)
  br i1 %551, label %548, label %552

; <label>:552                                     ; preds = %549
  br label %567

; <label>:553                                     ; preds = %534
  %554 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  store i8 1, i8* %33, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %554, i8* %33)
  br label %555

; <label>:555                                     ; preds = %556, %553
  call void @_Z4waitv()
  br label %556

; <label>:556                                     ; preds = %555
  %557 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 42
  %558 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %557)
  %559 = xor i1 %558, true
  br i1 %559, label %555, label %560

; <label>:560                                     ; preds = %556
  %561 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  store i8 0, i8* %34, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %561, i8* %34)
  br label %562

; <label>:562                                     ; preds = %563, %560
  call void @_Z4waitv()
  br label %563

; <label>:563                                     ; preds = %562
  %564 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 42
  %565 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %564)
  br i1 %565, label %562, label %566

; <label>:566                                     ; preds = %563
  br label %567

; <label>:567                                     ; preds = %566, %552
  %568 = load i16* %index, align 2
  %569 = zext i16 %568 to i32
  %570 = add nsw i32 %569, 1
  %571 = trunc i32 %570 to i16
  store i16 %571, i16* %index, align 2
  %572 = load i16* %index, align 2
  %573 = zext i16 %572 to i32
  %574 = load i32* %nu, align 4
  %575 = icmp eq i32 %573, %574
  br i1 %575, label %576, label %586

; <label>:576                                     ; preds = %567
  %577 = load i16* %loop_count, align 2
  %578 = zext i16 %577 to i32
  %579 = load i32* %nlp, align 4
  %580 = icmp ne i32 %578, %579
  br i1 %580, label %581, label %586

; <label>:581                                     ; preds = %576
  %582 = load i16* %loop_count, align 2
  %583 = zext i16 %582 to i32
  %584 = add nsw i32 %583, 1
  %585 = trunc i32 %584 to i16
  store i16 %585, i16* %loop_count, align 2
  store i16 0, i16* %index, align 2
  br label %586

; <label>:586                                     ; preds = %581, %576, %567
  %587 = load i16* %index, align 2
  %588 = zext i16 %587 to i32
  %589 = load i32* %ntu, align 4
  %590 = icmp eq i32 %588, %589
  br i1 %590, label %591, label %601

; <label>:591                                     ; preds = %586
  %592 = load i16* %loop_count, align 2
  %593 = zext i16 %592 to i32
  %594 = load i32* %nlp, align 4
  %595 = icmp eq i32 %593, %594
  br i1 %595, label %596, label %601

; <label>:596                                     ; preds = %591
  br label %597

; <label>:597                                     ; preds = %596
  br label %598

; <label>:598                                     ; preds = %599, %597
  call void @_Z4waitv()
  store i32 3, i32* @upc, align 4
  br label %599

; <label>:599                                     ; preds = %598
  br i1 true, label %598, label %600

; <label>:600                                     ; preds = %599
  br label %601

; <label>:601                                     ; preds = %600, %591, %586
  %602 = load i32* %nv, align 4
  %603 = load i16* %index, align 2
  %604 = zext i16 %603 to i32
  %605 = mul i32 %602, %604
  store i32 %605, i32* %dma_index, align 4
  %606 = load i16* %loop_count, align 2
  %607 = zext i16 %606 to i32
  %608 = load i32* %nlp, align 4
  %609 = icmp eq i32 %607, %608
  br i1 %609, label %610, label %616

; <label>:610                                     ; preds = %601
  %611 = load i32* %nv, align 4
  %612 = load i32* %nu, align 4
  %613 = mul i32 %611, %612
  %614 = load i32* %dma_index, align 4
  %615 = add i32 %614, %613
  store i32 %615, i32* %dma_index, align 4
  br label %616

; <label>:616                                     ; preds = %610, %601
  %617 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %617, i32* %dma_index)
  %618 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %619 = load i32* %nm, align 4
  %620 = mul i32 5, %619
  store i32 %620, i32* %35, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %618, i32* %35)
  %621 = load i16* %loop_count, align 2
  %622 = zext i16 %621 to i32
  %623 = load i32* %nlp, align 4
  %624 = icmp eq i32 %622, %623
  br i1 %624, label %625, label %632

; <label>:625                                     ; preds = %616
  br label %626

; <label>:626                                     ; preds = %627, %625
  call void @_Z4waitv()
  br label %627

; <label>:627                                     ; preds = %626
  %628 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 40
  %629 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %628)
  %630 = xor i1 %629, true
  br i1 %630, label %626, label %631

; <label>:631                                     ; preds = %627
  br label %632

; <label>:632                                     ; preds = %631, %616
  %633 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 1, i8* %36, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %633, i8* %36)
  br label %634

; <label>:634                                     ; preds = %635, %632
  call void @_Z4waitv()
  br label %635

; <label>:635                                     ; preds = %634
  %636 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 5
  %637 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %636)
  %638 = xor i1 %637, true
  br i1 %638, label %634, label %639

; <label>:639                                     ; preds = %635
  %640 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 0, i8* %37, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %640, i8* %37)
  %641 = load i16* %loop_count, align 2
  %642 = zext i16 %641 to i32
  %643 = load i32* %nu, align 4
  %644 = mul i32 %642, %643
  %645 = trunc i32 %644 to i16
  store i16 %645, i16* %tmp1, align 2
  %646 = load i16* %tmp1, align 2
  %647 = zext i16 %646 to i32
  %648 = load i16* %index, align 2
  %649 = zext i16 %648 to i32
  %650 = add nsw i32 %647, %649
  %651 = trunc i32 %650 to i16
  store i16 %651, i16* %tmp2, align 2
  %652 = load i16* %tmp2, align 2
  %653 = zext i16 %652 to i32
  %654 = srem i32 %653, 2
  %655 = icmp ne i32 %654, 0
  %656 = zext i1 %655 to i8
  store i8 %656, i8* %pingpong, align 1
  br label %657

; <label>:657                                     ; preds = %639
  store i16 0, i16* %i1, align 2
  br label %658

; <label>:658                                     ; preds = %681, %657
  %659 = load i16* %i1, align 2
  %660 = zext i16 %659 to i32
  %661 = icmp slt i32 %660, 500
  br i1 %661, label %662, label %684

; <label>:662                                     ; preds = %658
  %663 = load i16* %i1, align 2
  %664 = zext i16 %663 to i32
  %665 = load i32* %nv, align 4
  %666 = icmp eq i32 %664, %665
  br i1 %666, label %667, label %668

; <label>:667                                     ; preds = %662
  br label %684

; <label>:668                                     ; preds = %662
  %669 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 6
  %670 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %669)
  %671 = trunc i32 %670 to i8
  store i8 %671, i8* %rate2, align 1
  call void @_Z4waitv()
  %672 = load i8* %rate2, align 1
  %673 = load i16* %i1, align 2
  %674 = zext i16 %673 to i64
  %675 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %676 = load i8* %pingpong, align 1
  %677 = trunc i8 %676 to i1
  %678 = zext i1 %677 to i32
  %679 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %675, i32 %678)
  %680 = getelementptr inbounds i8* %679, i64 %674
  store i8 %672, i8* %680
  store i32 0, i32* @rd_complete, align 4
  br label %681

; <label>:681                                     ; preds = %668
  %682 = load i16* %i1, align 2
  %683 = add i16 %682, 1
  store i16 %683, i16* %i1, align 2
  br label %658

; <label>:684                                     ; preds = %667, %658
  call void @_Z4waitv()
  %685 = load i32* %nv, align 4
  %686 = zext i32 %685 to i64
  %687 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %688 = load i8* %pingpong, align 1
  %689 = trunc i8 %688 to i1
  %690 = zext i1 %689 to i32
  %691 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %687, i32 %690)
  %692 = getelementptr inbounds i8* %691, i64 %686
  store i8 1, i8* %692
  store i32 1, i32* @rd_complete, align 4
  br label %534

; <label>:693                                     ; preds = %397, %108
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  %9 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %10 = load i8* %9, align 1
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

define linkonce_odr void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %this, i32* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i32* %d, i32** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i32** %2
  %5 = load i32* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_int32* %3, i32 0, i32 0
  store i32 %5, i32* %6, align 4
  ret void
}

define linkonce_odr zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  %3 = getelementptr inbounds %class.sc_signal_u16* %2, i32 0, i32 0
  %4 = load i16* %3, align 2
  ret i16 %4
}

declare void @__CPROVER_assert(i1 zeroext, i8*)

declare zeroext i1 @__CPROVER_array_equal(i8*, i8*)

define linkonce_odr i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2D*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2D** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 512
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define linkonce_odr i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2D*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2D** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 128
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

declare void @__CPROVER_array_copy(i8*, i8*)

define void @_ZN3rbm5storeEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %ntu = alloca i16, align 2
  %nm = alloca i16, align 2
  %index = alloca i32, align 4
  %rating = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %dma_index = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %i = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %18 = load %struct.rbm** %1
  %19 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %20 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %19, i8* %2)
  br label %21

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %22, i32* %3)
  %23 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %23, i32* %4)
  %24 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %24, i8* %5)
  %25 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %25, i8* %6)
  %26 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 1, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %26, i8* %7)
  %27 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 0, i8* %8, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %27, i8* %8)
  br label %28

; <label>:28                                      ; preds = %29, %21
  call void @_Z4waitv()
  br label %29

; <label>:29                                      ; preds = %28
  %30 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %31 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %30)
  %32 = xor i1 %31, true
  br i1 %32, label %28, label %33

; <label>:33                                      ; preds = %29
  %34 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 34
  %35 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %34)
  store i16 %35, i16* %ntu, align 2
  %36 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %37 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %36)
  store i16 %37, i16* %nm, align 2
  store i32 0, i32* %index, align 4
  br label %38

; <label>:38                                      ; preds = %33
  br label %39

; <label>:39                                      ; preds = %38, %108
  %40 = load i32* %index, align 4
  %41 = load i16* %ntu, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %49

; <label>:44                                      ; preds = %39
  %45 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 1, i8* %9, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %45, i8* %9)
  br label %46

; <label>:46                                      ; preds = %47, %44
  call void @_Z4waitv()
  br label %47

; <label>:47                                      ; preds = %46
  br i1 true, label %46, label %48

; <label>:48                                      ; preds = %47
  br label %49

; <label>:49                                      ; preds = %48, %39
  br label %50

; <label>:50                                      ; preds = %51, %49
  call void @_Z4waitv()
  br label %51

; <label>:51                                      ; preds = %50
  %52 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 43
  %53 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %52)
  %54 = xor i1 %53, true
  br i1 %54, label %50, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 1, i8* %10, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %56, i8* %10)
  br label %57

; <label>:57                                      ; preds = %58, %55
  call void @_Z4waitv()
  br label %58

; <label>:58                                      ; preds = %57
  %59 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 43
  %60 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %59)
  br i1 %60, label %57, label %61

; <label>:61                                      ; preds = %58
  %62 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 0, i8* %11, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %62, i8* %11)
  %63 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 0, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %63, i8* %12)
  %64 = load i16* %nm, align 2
  %65 = zext i16 %64 to i32
  %66 = load i32* %index, align 4
  %67 = mul i32 %65, %66
  store i32 %67, i32* %dma_index, align 4
  %68 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %68, i32* %dma_index)
  %69 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %70 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %71 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %70)
  %72 = zext i16 %71 to i32
  store i32 %72, i32* %13, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %69, i32* %13)
  %73 = load i32* %index, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %index, align 4
  %75 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %75, i8* %14)
  br label %76

; <label>:76                                      ; preds = %77, %61
  call void @_Z4waitv()
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 10
  %79 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %78)
  %80 = xor i1 %79, true
  br i1 %80, label %76, label %81

; <label>:81                                      ; preds = %77
  %82 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 0, i8* %15, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %82, i8* %15)
  br label %83

; <label>:83                                      ; preds = %81
  store i16 0, i16* %i, align 2
  br label %84

; <label>:84                                      ; preds = %105, %83
  %85 = load i16* %i, align 2
  %86 = zext i16 %85 to i32
  %87 = icmp slt i32 %86, 100
  br i1 %87, label %88, label %108

; <label>:88                                      ; preds = %84
  %89 = load i16* %i, align 2
  %90 = zext i16 %89 to i32
  %91 = load i16* %nm, align 2
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %94, label %95

; <label>:94                                      ; preds = %88
  br label %108

; <label>:95                                      ; preds = %88
  %96 = load i16* %i, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %99 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %98, i32 0)
  %100 = getelementptr inbounds i8* %99, i64 %97
  %101 = load i8* %100
  store i8 %101, i8* %rating, align 1
  call void @_Z4waitv()
  %102 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %103 = load i8* %rating, align 1
  %104 = zext i8 %103 to i32
  store i32 %104, i32* %16, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %102, i32* %16)
  br label %105

; <label>:105                                     ; preds = %95
  %106 = load i16* %i, align 2
  %107 = add i16 %106, 1
  store i16 %107, i16* %i, align 2
  br label %84

; <label>:108                                     ; preds = %94, %84
  %109 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 1, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %109, i8* %17)
  br label %39
                                                  ; No predecessors!
  ret void
}

define internal void @__cxx_global_var_init24() {
  call void @_ZN3rbmC1Ev(%struct.rbm* @IMPL)
  ret void
}

define linkonce_odr void @_ZN3rbmC1Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  call void @_ZN3rbmC2Ev(%struct.rbm* %2)
  ret void
}

define i32 @main() {
  %1 = alloca i32, align 4
  store i32 0, i32* %1
  call void @_ZN3rbm4loadEv(%struct.rbm* @IMPL)
  ret i32 0
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC2ERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 65536)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = load %class.SysCArray1D** %2
  %9 = getelementptr inbounds %class.SysCArray1D* %8, i32 0, i32 0
  %10 = load i8** %9, align 8
  call void @__CPROVER_array_copy(i8* %7, i8* %10)
  ret void
}

declare i8* @__CPROVER_malloc(i64)

define linkonce_odr void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN3rbmC2Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  %3 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 0
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %3, i8* getelementptr inbounds ([4 x i8]* @.str25, i32 0, i32 0))
  %4 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %4, i8* getelementptr inbounds ([4 x i8]* @.str26, i32 0, i32 0))
  %5 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 2
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %5, i8* getelementptr inbounds ([9 x i8]* @.str27, i32 0, i32 0))
  %6 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 3
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %6, i8* getelementptr inbounds ([10 x i8]* @.str28, i32 0, i32 0))
  %7 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 4
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %7, i8* getelementptr inbounds ([11 x i8]* @.str29, i32 0, i32 0))
  %8 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 5
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %8, i8* getelementptr inbounds ([9 x i8]* @.str30, i32 0, i32 0))
  %9 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 6
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %9, i8* getelementptr inbounds ([8 x i8]* @.str31, i32 0, i32 0))
  %10 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 7
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %10, i8* getelementptr inbounds ([9 x i8]* @.str32, i32 0, i32 0))
  %11 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 8
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %11, i8* getelementptr inbounds ([10 x i8]* @.str33, i32 0, i32 0))
  %12 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 9
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %12, i8* getelementptr inbounds ([11 x i8]* @.str34, i32 0, i32 0))
  %13 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 10
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %13, i8* getelementptr inbounds ([9 x i8]* @.str35, i32 0, i32 0))
  %14 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 11
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %14, i8* getelementptr inbounds ([9 x i8]* @.str36, i32 0, i32 0))
  %15 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 12
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %15, i8* getelementptr inbounds ([5 x i8]* @.str37, i32 0, i32 0))
  %16 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 13
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %16, i8* getelementptr inbounds ([10 x i8]* @.str38, i32 0, i32 0))
  %17 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 14
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %17, i8* getelementptr inbounds ([16 x i8]* @.str39, i32 0, i32 0))
  %18 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 15
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %18, i8* getelementptr inbounds ([17 x i8]* @.str40, i32 0, i32 0))
  %19 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 16
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %19, i8* getelementptr inbounds ([15 x i8]* @.str41, i32 0, i32 0))
  %20 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 17
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %20, i8* getelementptr inbounds ([15 x i8]* @.str42, i32 0, i32 0))
  %21 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 18
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %21, i8* getelementptr inbounds ([19 x i8]* @.str43, i32 0, i32 0))
  %22 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 19
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %22, i8* getelementptr inbounds ([16 x i8]* @.str44, i32 0, i32 0))
  %23 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 20
  call void @_ZN11SysCArray2DIhLj2ELj512EEC1Ev(%class.SysCArray2D* %23)
  %24 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 21
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %24)
  %25 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 22
  call void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %25)
  %26 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 23
  call void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%0* %26)
  %27 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 24
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %27)
  %28 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 25
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %28)
  %29 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 26
  call void @_ZN11SysCArray1DIfLj5EEC1Ev(%1* %29)
  %30 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 27
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %30)
  %31 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 28
  call void @_ZN11SysCArray2DIhLj2ELj128EEC1Ev(%class.SysCArray2D* %31)
  %32 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 30
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %32)
  %33 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 31
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %33)
  %34 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 32
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %34)
  %35 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 33
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %35)
  %36 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 34
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %36)
  %37 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 35
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %37)
  %38 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 36
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %38)
  %39 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 37
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %39)
  %40 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 38
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %40)
  %41 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 39
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %41)
  %42 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 40
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %42)
  %43 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 41
  call void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %43)
  %44 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 42
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %44)
  %45 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 43
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %45)
  %46 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 44
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %46)
  %47 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 45
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %47)
  br label %48

; <label>:48                                      ; preds = %0
  br label %49

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %51 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %50)
  %52 = load i8* %51
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i32
  call void @_Z15reset_signal_isib(i32 %54, i1 zeroext false)
  br label %55

; <label>:55                                      ; preds = %49
  br label %56

; <label>:56                                      ; preds = %55
  %57 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %58 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %57)
  %59 = load i8* %58
  %60 = trunc i8 %59 to i1
  %61 = zext i1 %60 to i32
  call void @_Z15reset_signal_isib(i32 %61, i1 zeroext false)
  br label %62

; <label>:62                                      ; preds = %56
  br label %63

; <label>:63                                      ; preds = %62
  %64 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %65 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %64)
  %66 = load i8* %65
  %67 = trunc i8 %66 to i1
  %68 = zext i1 %67 to i32
  call void @_Z15reset_signal_isib(i32 %68, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %69

; <label>:69                                      ; preds = %63
  br label %70

; <label>:70                                      ; preds = %69
  %71 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %72 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %71)
  %73 = load i8* %72
  %74 = trunc i8 %73 to i1
  %75 = zext i1 %74 to i32
  call void @_Z15reset_signal_isib(i32 %75, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %76

; <label>:76                                      ; preds = %70
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %79 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %78)
  %80 = load i8* %79
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i32
  call void @_Z15reset_signal_isib(i32 %82, i1 zeroext false)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2, align 8
  call void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i8** %2, align 8
  call void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj512EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIhLj2ELj512EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  call void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%0* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC1Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  call void @_ZN11SysCArray1DIfLj5EEC2Ev(%1* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj128EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIhLj2ELj128EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  call void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %2)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  call void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %2)
  ret void
}

define linkonce_odr void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  call void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %2)
  ret void
}

define linkonce_odr i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  ret i8* %3
}

define linkonce_odr void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj128EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 256)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 128)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC2Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  %3 = call i8* @__CPROVER_malloc(i64 20)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %1* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 50601)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 101)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  %3 = call i8* @__CPROVER_malloc(i64 202404)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %0* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  %6 = call i8* @__CPROVER_malloc(i64 404)
  %7 = bitcast i8* %6 to float*
  %8 = getelementptr inbounds %0* %2, i32 0, i32 1
  store float* %7, float** %8, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 512)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj512EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 1024)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 512)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13model_computeD2Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %4 = load %class.model_compute** %1
  %5 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 14
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %5)
          to label %6 unwind label %10

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %7)
          to label %8 unwind label %14

; <label>:8                                       ; preds = %6
  %9 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %9)
  ret void

; <label>:10                                      ; preds = %0
  %11 = call i8* @llvm.eh.exception() nounwind
  store i8* %11, i8** %2
  %12 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %11, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %13 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %13)
          to label %17 unwind label %23

; <label>:14                                      ; preds = %6
  %15 = call i8* @llvm.eh.exception() nounwind
  store i8* %15, i8** %2
  %16 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %15, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %18

; <label>:17                                      ; preds = %10
  br label %18

; <label>:18                                      ; preds = %14, %17
  %19 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %19)
          to label %20 unwind label %23

; <label>:20                                      ; preds = %18
  br label %21

; <label>:21                                      ; preds = %20
  %22 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %22) noreturn
  unreachable

; <label>:23                                      ; preds = %18, %10
  %24 = call i8* @llvm.eh.exception() nounwind
  %25 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %24, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN13model_computeC2Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %4 = load %class.model_compute** %1
  %5 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %5, i64 0)
  %6 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %6, i64 0)
          to label %7 unwind label %12

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 14
  invoke void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %8, i64 0)
          to label %9 unwind label %15

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 25
  store i64 65535, i64* %10, align 8
  %11 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 26
  store i64 4294967295, i64* %11, align 8
  ret void

; <label>:12                                      ; preds = %0
  %13 = call i8* @llvm.eh.exception() nounwind
  store i8* %13, i8** %2
  %14 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %13, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %20

; <label>:15                                      ; preds = %7
  %16 = call i8* @llvm.eh.exception() nounwind
  store i8* %16, i8** %2
  %17 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %16, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %18 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %18)
          to label %19 unwind label %25

; <label>:19                                      ; preds = %15
  br label %20

; <label>:20                                      ; preds = %19, %12
  %21 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %21)
          to label %22 unwind label %25

; <label>:22                                      ; preds = %20
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %24) noreturn
  unreachable

; <label>:25                                      ; preds = %20, %15
  %26 = call i8* @llvm.eh.exception() nounwind
  %27 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %26, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 128)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 65536)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 512)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define internal void @_GLOBAL__I_a() {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init24()
  ret void
}
