; ModuleID = 'vWrapper.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { float*, float* }
%1 = type { float* }
%2 = type { i32, void ()* }
%class.SysCArray1D = type { i8* }
%class.SysCArray2D = type { i8*, i8* }
%class.model_compute = type { %class.SysCArray1D, i64, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%class.sc_signal_bool = type { i8 }
%class.sc_signal_int32 = type { i32 }
%class.sc_signal_u16 = type { i16 }
%class.sc_signal_u32 = type { i32 }
%"class.std::iocout" = type { i8 }
%class.type_mem = type { i8* }
%struct.rbm = type { %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.SysCArray2D, %class.SysCArray1D, %class.SysCArray1D, %0, %class.SysCArray2D, %class.SysCArray2D, %1, %class.SysCArray1D, %class.SysCArray2D, [624 x i32], %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool }

@GM = global %class.model_compute zeroinitializer, align 8
@__dso_handle = external global i8*
@_ZSt4cout = global %class.sc_signal_bool zeroinitializer, align 1
@_ZSt4endl = global i32 0, align 4
@cycleCnt = external global i32
@conf_done_inp = global i8 0, align 1
@conf_num_hidden_inp = global i32 0, align 4
@conf_num_visible_inp = global i32 0, align 4
@conf_num_users_inp = global i32 0, align 4
@conf_num_loops_inp = global i32 0, align 4
@conf_num_testusers_inp = global i32 0, align 4
@conf_num_movies_inp = global i32 0, align 4
@rst_inp = global i8 0, align 1
@rd_grant_inp = global i8 0, align 1
@data_in_inp = global i32 0, align 4
@wr_grant_inp = global i8 0, align 1
@upc = global i32 0, align 4
@rd_complete = global i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"Config done\00"
@.str1 = private unnamed_addr constant [16 x i8] c"init_done_match\00"
@.str2 = private unnamed_addr constant [11 x i8] c"done_match\00"
@.str3 = private unnamed_addr constant [17 x i8] c"num_hidden_match\00"
@.str4 = private unnamed_addr constant [18 x i8] c"num_visible_match\00"
@.str5 = private unnamed_addr constant [16 x i8] c"num_users_match\00"
@.str6 = private unnamed_addr constant [16 x i8] c"num_loops_match\00"
@.str7 = private unnamed_addr constant [20 x i8] c"num_testusers_match\00"
@.str8 = private unnamed_addr constant [17 x i8] c"num_movies_match\00"
@.str9 = private unnamed_addr constant [15 x i8] c"rd_index_match\00"
@.str10 = private unnamed_addr constant [16 x i8] c"rd_length_match\00"
@.str11 = private unnamed_addr constant [17 x i8] c"rd_request_match\00"
@.str12 = private unnamed_addr constant [17 x i8] c"wr_request_match\00"
@.str13 = private unnamed_addr constant [15 x i8] c"wr_index_match\00"
@.str14 = private unnamed_addr constant [16 x i8] c"wr_length_match\00"
@.str15 = private unnamed_addr constant [15 x i8] c"data_out_match\00"
@.str16 = private unnamed_addr constant [18 x i8] c"rd_complete_match\00"
@.str17 = private unnamed_addr constant [12 x i8] c"index_match\00"
@.str18 = private unnamed_addr constant [17 x i8] c"loop_count_match\00"
@.str19 = private unnamed_addr constant [10 x i8] c"upc_match\00"
@.str20 = private unnamed_addr constant [23 x i8] c"train_input_done_match\00"
@.str21 = private unnamed_addr constant [25 x i8] c"predict_input_done_match\00"
@.str22 = private unnamed_addr constant [11 x i8] c"data_match\00"
@.str23 = private unnamed_addr constant [21 x i8] c"predict_result_match\00"
@IMPL = global %struct.rbm zeroinitializer, align 8
@.str25 = private unnamed_addr constant [4 x i8] c"clk\00"
@.str26 = private unnamed_addr constant [4 x i8] c"rst\00"
@.str27 = private unnamed_addr constant [9 x i8] c"rd_index\00"
@.str28 = private unnamed_addr constant [10 x i8] c"rd_length\00"
@.str29 = private unnamed_addr constant [11 x i8] c"rd_request\00"
@.str30 = private unnamed_addr constant [9 x i8] c"rd_grant\00"
@.str31 = private unnamed_addr constant [8 x i8] c"data_in\00"
@.str32 = private unnamed_addr constant [9 x i8] c"wr_index\00"
@.str33 = private unnamed_addr constant [10 x i8] c"wr_length\00"
@.str34 = private unnamed_addr constant [11 x i8] c"wr_request\00"
@.str35 = private unnamed_addr constant [9 x i8] c"wr_grant\00"
@.str36 = private unnamed_addr constant [9 x i8] c"data_out\00"
@.str37 = private unnamed_addr constant [5 x i8] c"done\00"
@.str38 = private unnamed_addr constant [10 x i8] c"cond_done\00"
@.str39 = private unnamed_addr constant [16 x i8] c"conf_num_hidden\00"
@.str40 = private unnamed_addr constant [17 x i8] c"conf_num_visible\00"
@.str41 = private unnamed_addr constant [15 x i8] c"conf_num_users\00"
@.str42 = private unnamed_addr constant [15 x i8] c"conf_num_loops\00"
@.str43 = private unnamed_addr constant [19 x i8] c"conf_num_testusers\00"
@.str44 = private unnamed_addr constant [16 x i8] c"conf_num_movies\00"
@llvm.global_ctors = appending global [1 x %2] [%2 { i32 65535, void ()* @_GLOBAL__I_a }]

define zeroext i1 @_ZN13model_compute9assumps_0Elllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
; <label>:0
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_424 = alloca i64, align 8
  %cppVar_425 = alloca i8, align 1
  %cppVar_426 = alloca i64, align 8
  %cppVar_427 = alloca i8, align 1
  %cppVar_428 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 5
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_425, align 1
  %18 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 2
  %19 = load i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %cppVar_427, align 1
  %22 = load i8* %cppVar_425, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %0
  %25 = load i8* %cppVar_427, align 1
  %26 = trunc i8 %25 to i1
  br label %27

; <label>:27                                      ; preds = %24, %0
  %28 = phi i1 [ false, %0 ], [ %26, %24 ]
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_428, align 1
  %30 = load i8* %cppVar_428, align 1
  %31 = trunc i8 %30 to i1
  ret i1 %31
}

define void @_ZN13model_compute18cppUpdateFun_edgesElllllllllll(%class.SysCArray1D* sret %agg.result, %class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 3
  call void @_ZN8type_memIhLj65536EEC1ERKS0_(%class.SysCArray1D* %agg.result, %class.SysCArray1D* %14)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC1ERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load %class.SysCArray1D** %2
  call void @_ZN8type_memIhLj65536EEC2ERKS0_(%class.SysCArray1D* %3, %class.SysCArray1D* %4)
  ret void
}

define i64 @_ZN13model_compute18cppUpdateFun_indexElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 4
  %15 = load i64* %14, align 8
  ret i64 %15
}

define i64 @_ZN13model_compute23cppUpdateFun_loop_countElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 6
  %15 = load i64* %14, align 8
  ret i64 %15
}

define i64 @_ZN13model_compute31cppUpdateFun_predict_input_doneElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
; <label>:0
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_340 = alloca i64, align 8
  %cppVar_341 = alloca i8, align 1
  %cppVar_342 = alloca i64, align 8
  %cppVar_343 = alloca i8, align 1
  %cppVar_344 = alloca i8, align 1
  %cppVar_346 = alloca i8, align 1
  %cppVar_345 = alloca i64, align 8
  %cppVar_339 = alloca i64, align 8
  %cppVar_348 = alloca i64, align 8
  %cppVar_347 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_341, align 1
  %18 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %19 = load i64* %18, align 8
  %20 = icmp eq i64 %19, 1
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %cppVar_343, align 1
  %22 = load i8* %cppVar_341, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %0
  %25 = load i8* %cppVar_343, align 1
  %26 = trunc i8 %25 to i1
  br label %27

; <label>:27                                      ; preds = %24, %0
  %28 = phi i1 [ false, %0 ], [ %26, %24 ]
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_344, align 1
  %30 = load i8* %cppVar_344, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %45

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 6
  %34 = load i64* %33, align 8
  %35 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 8
  %36 = load i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %cppVar_346, align 1
  %39 = load i8* %cppVar_346, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %32
  store i64 1, i64* %cppVar_345, align 8
  br label %43

; <label>:42                                      ; preds = %32
  store i64 0, i64* %cppVar_345, align 8
  br label %43

; <label>:43                                      ; preds = %42, %41
  %44 = load i64* %cppVar_345, align 8
  store i64 %44, i64* %cppVar_339, align 8
  br label %48

; <label>:45                                      ; preds = %27
  %46 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 13
  %47 = load i64* %46, align 8
  store i64 %47, i64* %cppVar_339, align 8
  br label %48

; <label>:48                                      ; preds = %45, %43
  %49 = load i64* %cppVar_339, align 8
  ret i64 %49
}

define i64 @_ZN13model_compute24cppUpdateFun_rd_completeElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_355 = alloca i64, align 8
  %cppVar_356 = alloca i8, align 1
  %cppVar_357 = alloca i64, align 8
  %cppVar_358 = alloca i8, align 1
  %cppVar_359 = alloca i8, align 1
  %cppVar_354 = alloca i64, align 8
  %cppVar_350 = alloca i64, align 8
  %cppVar_353 = alloca i64, align 8
  %cppVar_351 = alloca i64, align 8
  %cppVar_352 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_352, align 1
  %18 = load i8* %cppVar_352, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_350, align 8
  br label %46

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_356, align 1
  %26 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %27 = load i64* %26, align 8
  %28 = icmp eq i64 %27, 1
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_358, align 1
  %30 = load i8* %cppVar_356, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %35

; <label>:32                                      ; preds = %21
  %33 = load i8* %cppVar_358, align 1
  %34 = trunc i8 %33 to i1
  br label %35

; <label>:35                                      ; preds = %32, %21
  %36 = phi i1 [ false, %21 ], [ %34, %32 ]
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_359, align 1
  %38 = load i8* %cppVar_359, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %35
  store i64 0, i64* %cppVar_354, align 8
  br label %44

; <label>:41                                      ; preds = %35
  %42 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %43 = load i64* %42, align 8
  store i64 %43, i64* %cppVar_354, align 8
  br label %44

; <label>:44                                      ; preds = %41, %40
  %45 = load i64* %cppVar_354, align 8
  store i64 %45, i64* %cppVar_350, align 8
  br label %46

; <label>:46                                      ; preds = %44, %20
  %47 = load i64* %cppVar_350, align 8
  ret i64 %47
}

define i64 @_ZN13model_compute21cppUpdateFun_rd_indexElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_364 = alloca i64, align 8
  %cppVar_361 = alloca i64, align 8
  %cppVar_362 = alloca i64, align 8
  %cppVar_363 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_363, align 1
  %18 = load i8* %cppVar_363, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %27

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 4
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 25
  %24 = load i64* %23, align 8
  %25 = and i64 %22, %24
  store i64 %25, i64* %cppVar_364, align 8
  %26 = load i64* %cppVar_364, align 8
  store i64 %26, i64* %cppVar_361, align 8
  br label %30

; <label>:27                                      ; preds = %0
  %28 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 16
  %29 = load i64* %28, align 8
  store i64 %29, i64* %cppVar_361, align 8
  br label %30

; <label>:30                                      ; preds = %27, %20
  %31 = load i64* %cppVar_361, align 8
  ret i64 %31
}

define i64 @_ZN13model_compute22cppUpdateFun_rd_lengthElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_369 = alloca i64, align 8
  %cppVar_371 = alloca i64, align 8
  %cppVar_366 = alloca i64, align 8
  %cppVar_370 = alloca i64, align 8
  %cppVar_367 = alloca i64, align 8
  %cppVar_368 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_368, align 1
  %18 = load i8* %cppVar_368, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %33

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 9
  %22 = load i64* %21, align 8
  %23 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 25
  %24 = load i64* %23, align 8
  %25 = and i64 %22, %24
  store i64 %25, i64* %cppVar_370, align 8
  %26 = load i64* %cppVar_370, align 8
  %27 = mul nsw i64 5, %26
  store i64 %27, i64* %cppVar_371, align 8
  %28 = load i64* %cppVar_371, align 8
  %29 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 26
  %30 = load i64* %29, align 8
  %31 = and i64 %28, %30
  store i64 %31, i64* %cppVar_371, align 8
  %32 = load i64* %cppVar_371, align 8
  store i64 %32, i64* %cppVar_366, align 8
  br label %36

; <label>:33                                      ; preds = %0
  %34 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 17
  %35 = load i64* %34, align 8
  store i64 %35, i64* %cppVar_366, align 8
  br label %36

; <label>:36                                      ; preds = %33, %20
  %37 = load i64* %cppVar_366, align 8
  ret i64 %37
}

define i64 @_ZN13model_compute23cppUpdateFun_rd_requestElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_373 = alloca i64, align 8
  %cppVar_376 = alloca i64, align 8
  %cppVar_374 = alloca i64, align 8
  %cppVar_375 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_375, align 1
  %18 = load i8* %cppVar_375, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 1, i64* %cppVar_373, align 8
  br label %24

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 18
  %23 = load i64* %22, align 8
  store i64 %23, i64* %cppVar_373, align 8
  br label %24

; <label>:24                                      ; preds = %21, %20
  %25 = load i64* %cppVar_373, align 8
  ret i64 %25
}

define i64 @_ZN13model_compute29cppUpdateFun_train_input_doneElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
; <label>:0
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_379 = alloca i64, align 8
  %cppVar_380 = alloca i8, align 1
  %cppVar_381 = alloca i64, align 8
  %cppVar_382 = alloca i8, align 1
  %cppVar_383 = alloca i8, align 1
  %cppVar_385 = alloca i8, align 1
  %cppVar_384 = alloca i64, align 8
  %cppVar_378 = alloca i64, align 8
  %cppVar_387 = alloca i64, align 8
  %cppVar_386 = alloca i64, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_380, align 1
  %18 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %19 = load i64* %18, align 8
  %20 = icmp eq i64 %19, 1
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %cppVar_382, align 1
  %22 = load i8* %cppVar_380, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %0
  %25 = load i8* %cppVar_382, align 1
  %26 = trunc i8 %25 to i1
  br label %27

; <label>:27                                      ; preds = %24, %0
  %28 = phi i1 [ false, %0 ], [ %26, %24 ]
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_383, align 1
  %30 = load i8* %cppVar_383, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %45

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 6
  %34 = load i64* %33, align 8
  %35 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 8
  %36 = load i64* %35, align 8
  %37 = icmp slt i64 %34, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %cppVar_385, align 1
  %39 = load i8* %cppVar_385, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %32
  store i64 1, i64* %cppVar_384, align 8
  br label %43

; <label>:42                                      ; preds = %32
  store i64 0, i64* %cppVar_384, align 8
  br label %43

; <label>:43                                      ; preds = %42, %41
  %44 = load i64* %cppVar_384, align 8
  store i64 %44, i64* %cppVar_378, align 8
  br label %48

; <label>:45                                      ; preds = %27
  %46 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 19
  %47 = load i64* %46, align 8
  store i64 %47, i64* %cppVar_378, align 8
  br label %48

; <label>:48                                      ; preds = %45, %43
  %49 = load i64* %cppVar_378, align 8
  ret i64 %49
}

define i64 @_ZN13model_compute16cppUpdateFun_upcElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_394 = alloca i64, align 8
  %cppVar_395 = alloca i8, align 1
  %cppVar_396 = alloca i64, align 8
  %cppVar_397 = alloca i8, align 1
  %cppVar_398 = alloca i8, align 1
  %cppVar_400 = alloca i64, align 8
  %cppVar_401 = alloca i8, align 1
  %cppVar_402 = alloca i64, align 8
  %cppVar_403 = alloca i8, align 1
  %cppVar_404 = alloca i8, align 1
  %cppVar_407 = alloca i64, align 8
  %cppVar_408 = alloca i8, align 1
  %cppVar_409 = alloca i64, align 8
  %cppVar_410 = alloca i8, align 1
  %cppVar_411 = alloca i8, align 1
  %cppVar_413 = alloca i64, align 8
  %cppVar_414 = alloca i8, align 1
  %cppVar_415 = alloca i64, align 8
  %cppVar_416 = alloca i8, align 1
  %cppVar_417 = alloca i8, align 1
  %cppVar_419 = alloca i64, align 8
  %cppVar_420 = alloca i8, align 1
  %cppVar_392 = alloca i64, align 8
  %cppVar_405 = alloca i64, align 8
  %cppVar_421 = alloca i64, align 8
  %cppVar_418 = alloca i64, align 8
  %cppVar_412 = alloca i64, align 8
  %cppVar_406 = alloca i64, align 8
  %cppVar_399 = alloca i64, align 8
  %cppVar_393 = alloca i64, align 8
  %cppVar_389 = alloca i64, align 8
  %cppVar_390 = alloca i64, align 8
  %cppVar_391 = alloca i8, align 1
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_compute** %1
  %14 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_391, align 1
  %18 = load i8* %cppVar_391, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 1, i64* %cppVar_389, align 8
  br label %124

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %cppVar_395, align 1
  %26 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %27 = load i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %cppVar_397, align 1
  %30 = load i8* %cppVar_395, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %35

; <label>:32                                      ; preds = %21
  %33 = load i8* %cppVar_397, align 1
  %34 = trunc i8 %33 to i1
  br label %35

; <label>:35                                      ; preds = %32, %21
  %36 = phi i1 [ false, %21 ], [ %34, %32 ]
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %cppVar_398, align 1
  %38 = load i8* %cppVar_398, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %43

; <label>:40                                      ; preds = %35
  %41 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %42 = load i64* %41, align 8
  store i64 %42, i64* %cppVar_393, align 8
  br label %122

; <label>:43                                      ; preds = %35
  %44 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %45 = load i64* %44, align 8
  %46 = icmp eq i64 %45, 1
  %47 = zext i1 %46 to i8
  store i8 %47, i8* %cppVar_401, align 1
  %48 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 15
  %49 = load i64* %48, align 8
  %50 = icmp eq i64 %49, 1
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %cppVar_403, align 1
  %52 = load i8* %cppVar_401, align 1
  %53 = trunc i8 %52 to i1
  br i1 %53, label %54, label %57

; <label>:54                                      ; preds = %43
  %55 = load i8* %cppVar_403, align 1
  %56 = trunc i8 %55 to i1
  br label %57

; <label>:57                                      ; preds = %54, %43
  %58 = phi i1 [ false, %43 ], [ %56, %54 ]
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %cppVar_404, align 1
  %60 = load i8* %cppVar_404, align 1
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %57
  store i64 2, i64* %cppVar_399, align 8
  br label %120

; <label>:63                                      ; preds = %57
  %64 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %65 = load i64* %64, align 8
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %cppVar_408, align 1
  %68 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 19
  %69 = load i64* %68, align 8
  %70 = icmp eq i64 %69, 1
  %71 = zext i1 %70 to i8
  store i8 %71, i8* %cppVar_410, align 1
  %72 = load i8* %cppVar_408, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %77

; <label>:74                                      ; preds = %63
  %75 = load i8* %cppVar_410, align 1
  %76 = trunc i8 %75 to i1
  br label %77

; <label>:77                                      ; preds = %74, %63
  %78 = phi i1 [ false, %63 ], [ %76, %74 ]
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %cppVar_411, align 1
  %80 = load i8* %cppVar_411, align 1
  %81 = trunc i8 %80 to i1
  br i1 %81, label %82, label %83

; <label>:82                                      ; preds = %77
  store i64 2, i64* %cppVar_406, align 8
  br label %118

; <label>:83                                      ; preds = %77
  %84 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %85 = load i64* %84, align 8
  %86 = icmp eq i64 %85, 2
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %cppVar_414, align 1
  %88 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 13
  %89 = load i64* %88, align 8
  %90 = icmp eq i64 %89, 1
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %cppVar_416, align 1
  %92 = load i8* %cppVar_414, align 1
  %93 = trunc i8 %92 to i1
  br i1 %93, label %94, label %97

; <label>:94                                      ; preds = %83
  %95 = load i8* %cppVar_416, align 1
  %96 = trunc i8 %95 to i1
  br label %97

; <label>:97                                      ; preds = %94, %83
  %98 = phi i1 [ false, %83 ], [ %96, %94 ]
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %cppVar_417, align 1
  %100 = load i8* %cppVar_417, align 1
  %101 = trunc i8 %100 to i1
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %97
  store i64 2, i64* %cppVar_412, align 8
  br label %116

; <label>:103                                     ; preds = %97
  %104 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %105 = load i64* %104, align 8
  %106 = icmp eq i64 %105, 3
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %cppVar_420, align 1
  %108 = load i8* %cppVar_420, align 1
  %109 = trunc i8 %108 to i1
  br i1 %109, label %110, label %111

; <label>:110                                     ; preds = %103
  store i64 3, i64* %cppVar_418, align 8
  br label %114

; <label>:111                                     ; preds = %103
  %112 = getelementptr inbounds %class.model_compute* %13, i32 0, i32 20
  %113 = load i64* %112, align 8
  store i64 %113, i64* %cppVar_418, align 8
  br label %114

; <label>:114                                     ; preds = %111, %110
  %115 = load i64* %cppVar_418, align 8
  store i64 %115, i64* %cppVar_412, align 8
  br label %116

; <label>:116                                     ; preds = %114, %102
  %117 = load i64* %cppVar_412, align 8
  store i64 %117, i64* %cppVar_406, align 8
  br label %118

; <label>:118                                     ; preds = %116, %82
  %119 = load i64* %cppVar_406, align 8
  store i64 %119, i64* %cppVar_399, align 8
  br label %120

; <label>:120                                     ; preds = %118, %62
  %121 = load i64* %cppVar_399, align 8
  store i64 %121, i64* %cppVar_393, align 8
  br label %122

; <label>:122                                     ; preds = %120, %40
  %123 = load i64* %cppVar_393, align 8
  store i64 %123, i64* %cppVar_389, align 8
  br label %124

; <label>:124                                     ; preds = %122, %20
  %125 = load i64* %cppVar_389, align 8
  ret i64 %125
}

define void @_ZN13model_compute6updateElllllllllll(%class.model_compute* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_337 = alloca i64, align 8
  %cppVar_338 = alloca i64, align 8
  %cppVar_349 = alloca i64, align 8
  %cppVar_360 = alloca i64, align 8
  %cppVar_365 = alloca i64, align 8
  %cppVar_372 = alloca i64, align 8
  %cppVar_377 = alloca i64, align 8
  %cppVar_388 = alloca i64, align 8
  %cppVar_422 = alloca i64, align 8
  %cppVar_423 = alloca %class.SysCArray1D, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i32
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %16 = load %class.model_compute** %1
  %17 = load i64* %2, align 8
  %18 = load i64* %3, align 8
  %19 = load i64* %4, align 8
  %20 = load i64* %5, align 8
  %21 = load i64* %6, align 8
  %22 = load i64* %7, align 8
  %23 = load i64* %8, align 8
  %24 = load i64* %9, align 8
  %25 = load i64* %10, align 8
  %26 = load i64* %11, align 8
  %27 = load i64* %12, align 8
  %28 = call i64 @_ZN13model_compute18cppUpdateFun_indexElllllllllll(%class.model_compute* %16, i64 %17, i64 %18, i64 %19, i64 %20, i64 %21, i64 %22, i64 %23, i64 %24, i64 %25, i64 %26, i64 %27)
  store i64 %28, i64* %cppVar_337, align 8
  %29 = load i64* %2, align 8
  %30 = load i64* %3, align 8
  %31 = load i64* %4, align 8
  %32 = load i64* %5, align 8
  %33 = load i64* %6, align 8
  %34 = load i64* %7, align 8
  %35 = load i64* %8, align 8
  %36 = load i64* %9, align 8
  %37 = load i64* %10, align 8
  %38 = load i64* %11, align 8
  %39 = load i64* %12, align 8
  %40 = call i64 @_ZN13model_compute23cppUpdateFun_loop_countElllllllllll(%class.model_compute* %16, i64 %29, i64 %30, i64 %31, i64 %32, i64 %33, i64 %34, i64 %35, i64 %36, i64 %37, i64 %38, i64 %39)
  store i64 %40, i64* %cppVar_338, align 8
  %41 = load i64* %2, align 8
  %42 = load i64* %3, align 8
  %43 = load i64* %4, align 8
  %44 = load i64* %5, align 8
  %45 = load i64* %6, align 8
  %46 = load i64* %7, align 8
  %47 = load i64* %8, align 8
  %48 = load i64* %9, align 8
  %49 = load i64* %10, align 8
  %50 = load i64* %11, align 8
  %51 = load i64* %12, align 8
  %52 = call i64 @_ZN13model_compute31cppUpdateFun_predict_input_doneElllllllllll(%class.model_compute* %16, i64 %41, i64 %42, i64 %43, i64 %44, i64 %45, i64 %46, i64 %47, i64 %48, i64 %49, i64 %50, i64 %51)
  store i64 %52, i64* %cppVar_349, align 8
  %53 = load i64* %2, align 8
  %54 = load i64* %3, align 8
  %55 = load i64* %4, align 8
  %56 = load i64* %5, align 8
  %57 = load i64* %6, align 8
  %58 = load i64* %7, align 8
  %59 = load i64* %8, align 8
  %60 = load i64* %9, align 8
  %61 = load i64* %10, align 8
  %62 = load i64* %11, align 8
  %63 = load i64* %12, align 8
  %64 = call i64 @_ZN13model_compute24cppUpdateFun_rd_completeElllllllllll(%class.model_compute* %16, i64 %53, i64 %54, i64 %55, i64 %56, i64 %57, i64 %58, i64 %59, i64 %60, i64 %61, i64 %62, i64 %63)
  store i64 %64, i64* %cppVar_360, align 8
  %65 = load i64* %2, align 8
  %66 = load i64* %3, align 8
  %67 = load i64* %4, align 8
  %68 = load i64* %5, align 8
  %69 = load i64* %6, align 8
  %70 = load i64* %7, align 8
  %71 = load i64* %8, align 8
  %72 = load i64* %9, align 8
  %73 = load i64* %10, align 8
  %74 = load i64* %11, align 8
  %75 = load i64* %12, align 8
  %76 = call i64 @_ZN13model_compute21cppUpdateFun_rd_indexElllllllllll(%class.model_compute* %16, i64 %65, i64 %66, i64 %67, i64 %68, i64 %69, i64 %70, i64 %71, i64 %72, i64 %73, i64 %74, i64 %75)
  store i64 %76, i64* %cppVar_365, align 8
  %77 = load i64* %2, align 8
  %78 = load i64* %3, align 8
  %79 = load i64* %4, align 8
  %80 = load i64* %5, align 8
  %81 = load i64* %6, align 8
  %82 = load i64* %7, align 8
  %83 = load i64* %8, align 8
  %84 = load i64* %9, align 8
  %85 = load i64* %10, align 8
  %86 = load i64* %11, align 8
  %87 = load i64* %12, align 8
  %88 = call i64 @_ZN13model_compute22cppUpdateFun_rd_lengthElllllllllll(%class.model_compute* %16, i64 %77, i64 %78, i64 %79, i64 %80, i64 %81, i64 %82, i64 %83, i64 %84, i64 %85, i64 %86, i64 %87)
  store i64 %88, i64* %cppVar_372, align 8
  %89 = load i64* %2, align 8
  %90 = load i64* %3, align 8
  %91 = load i64* %4, align 8
  %92 = load i64* %5, align 8
  %93 = load i64* %6, align 8
  %94 = load i64* %7, align 8
  %95 = load i64* %8, align 8
  %96 = load i64* %9, align 8
  %97 = load i64* %10, align 8
  %98 = load i64* %11, align 8
  %99 = load i64* %12, align 8
  %100 = call i64 @_ZN13model_compute23cppUpdateFun_rd_requestElllllllllll(%class.model_compute* %16, i64 %89, i64 %90, i64 %91, i64 %92, i64 %93, i64 %94, i64 %95, i64 %96, i64 %97, i64 %98, i64 %99)
  store i64 %100, i64* %cppVar_377, align 8
  %101 = load i64* %2, align 8
  %102 = load i64* %3, align 8
  %103 = load i64* %4, align 8
  %104 = load i64* %5, align 8
  %105 = load i64* %6, align 8
  %106 = load i64* %7, align 8
  %107 = load i64* %8, align 8
  %108 = load i64* %9, align 8
  %109 = load i64* %10, align 8
  %110 = load i64* %11, align 8
  %111 = load i64* %12, align 8
  %112 = call i64 @_ZN13model_compute29cppUpdateFun_train_input_doneElllllllllll(%class.model_compute* %16, i64 %101, i64 %102, i64 %103, i64 %104, i64 %105, i64 %106, i64 %107, i64 %108, i64 %109, i64 %110, i64 %111)
  store i64 %112, i64* %cppVar_388, align 8
  %113 = load i64* %2, align 8
  %114 = load i64* %3, align 8
  %115 = load i64* %4, align 8
  %116 = load i64* %5, align 8
  %117 = load i64* %6, align 8
  %118 = load i64* %7, align 8
  %119 = load i64* %8, align 8
  %120 = load i64* %9, align 8
  %121 = load i64* %10, align 8
  %122 = load i64* %11, align 8
  %123 = load i64* %12, align 8
  %124 = call i64 @_ZN13model_compute16cppUpdateFun_upcElllllllllll(%class.model_compute* %16, i64 %113, i64 %114, i64 %115, i64 %116, i64 %117, i64 %118, i64 %119, i64 %120, i64 %121, i64 %122, i64 %123)
  store i64 %124, i64* %cppVar_422, align 8
  %125 = load i64* %2, align 8
  %126 = load i64* %3, align 8
  %127 = load i64* %4, align 8
  %128 = load i64* %5, align 8
  %129 = load i64* %6, align 8
  %130 = load i64* %7, align 8
  %131 = load i64* %8, align 8
  %132 = load i64* %9, align 8
  %133 = load i64* %10, align 8
  %134 = load i64* %11, align 8
  %135 = load i64* %12, align 8
  call void @_ZN13model_compute18cppUpdateFun_edgesElllllllllll(%class.SysCArray1D* sret %cppVar_423, %class.model_compute* %16, i64 %125, i64 %126, i64 %127, i64 %128, i64 %129, i64 %130, i64 %131, i64 %132, i64 %133, i64 %134, i64 %135)
  %136 = load i64* %cppVar_337, align 8
  %137 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 4
  store i64 %136, i64* %137, align 8
  %138 = load i64* %cppVar_338, align 8
  %139 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 6
  store i64 %138, i64* %139, align 8
  %140 = load i64* %cppVar_349, align 8
  %141 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 13
  store i64 %140, i64* %141, align 8
  %142 = load i64* %cppVar_360, align 8
  %143 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 15
  store i64 %142, i64* %143, align 8
  %144 = load i64* %cppVar_365, align 8
  %145 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 16
  store i64 %144, i64* %145, align 8
  %146 = load i64* %cppVar_372, align 8
  %147 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 17
  store i64 %146, i64* %147, align 8
  %148 = load i64* %cppVar_377, align 8
  %149 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 18
  store i64 %148, i64* %149, align 8
  %150 = load i64* %cppVar_388, align 8
  %151 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 19
  store i64 %150, i64* %151, align 8
  %152 = load i64* %cppVar_422, align 8
  %153 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 20
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %class.model_compute* %16, i32 0, i32 3
  %155 = invoke %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %154, %class.SysCArray1D* %cppVar_423)
          to label %156 unwind label %157

; <label>:156                                     ; preds = %0
  store i32 1, i32* %15
  call void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_423)
  ret void

; <label>:157                                     ; preds = %0
  %158 = call i8* @llvm.eh.exception() nounwind
  store i8* %158, i8** %13
  %159 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %158, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %14
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %cppVar_423)
          to label %160 unwind label %163

; <label>:160                                     ; preds = %157
  br label %161

; <label>:161                                     ; preds = %160
  %162 = load i8** %13
  call void @_Unwind_Resume_or_Rethrow(i8* %162) noreturn
  unreachable

; <label>:163                                     ; preds = %157
  %164 = call i8* @llvm.eh.exception() nounwind
  %165 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %164, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr %class.SysCArray1D* @_ZN8type_memIhLj65536EEaSERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load %class.SysCArray1D** %2
  %7 = getelementptr inbounds %class.SysCArray1D* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  call void @__CPROVER_array_copy(i8* %5, i8* %8)
  ret %class.SysCArray1D* %3
}

declare i8* @llvm.eh.exception() nounwind readonly

declare i32 @__gxx_personality_v0(...)

declare i32 @llvm.eh.selector(i8*, i8*, ...) nounwind

declare i32 @llvm.eh.typeid.for(i8*) nounwind

declare void @_Unwind_Resume_or_Rethrow(i8*)

define linkonce_odr void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %2)
  ret void
}

declare void @_ZSt9terminatev()

define internal void @__cxx_global_var_init() {
  call void @_ZN13model_computeC1Ev(%class.model_compute* @GM)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.model_compute*)* @_ZN13model_computeD1Ev to void (i8*)*), i8* bitcast (%class.model_compute* @GM to i8*), i8* bitcast (i8** @__dso_handle to i8*))
  ret void
}

define linkonce_odr void @_ZN13model_computeC1Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %2 = load %class.model_compute** %1
  call void @_ZN13model_computeC2Ev(%class.model_compute* %2)
  ret void
}

define linkonce_odr void @_ZN13model_computeD1Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %2 = load %class.model_compute** %1
  call void @_ZN13model_computeD2Ev(%class.model_compute* %2)
  ret void
}

declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*)

define void @_Z4waitv() nounwind {
  %1 = load i32* @cycleCnt, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @cycleCnt, align 4
  ret void
}

define void @_Z15reset_signal_isib(i32, i1 zeroext) nounwind {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  ret void
}

define void @_Z14set_stack_sizei(i32) nounwind {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  ret void
}

define void @_ZN3rbm6configEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i8, align 1
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %15 = load %struct.rbm** %1
  br label %16

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  store i16 0, i16* %2, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %17, i16* %2)
  %18 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  store i16 0, i16* %3, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %18, i16* %3)
  %19 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  store i16 0, i16* %4, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %19, i16* %4)
  %20 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  store i16 0, i16* %5, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %20, i16* %5)
  %21 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  store i16 0, i16* %6, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %21, i16* %6)
  %22 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %22, i8* %7)
  call void @_Z4waitv()
  br label %23

; <label>:23                                      ; preds = %16
  br label %24

; <label>:24                                      ; preds = %25, %23
  call void @_Z4waitv()
  br label %25

; <label>:25                                      ; preds = %24
  %26 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 13
  %27 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %26)
  %28 = xor i1 %27, true
  br i1 %28, label %24, label %29

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %31 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 14
  %32 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %31)
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %8, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %30, i16* %8)
  %34 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %35 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 15
  %36 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %35)
  %37 = trunc i32 %36 to i16
  store i16 %37, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %34, i16* %9)
  %38 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %39 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 16
  %40 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %39)
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %38, i16* %10)
  %42 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %43 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 17
  %44 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %43)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %11, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %42, i16* %11)
  %46 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 34
  %47 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 18
  %48 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %47)
  %49 = trunc i32 %48 to i16
  store i16 %49, i16* %12, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %46, i16* %12)
  %50 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  %51 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 19
  %52 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %51)
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %13, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %50, i16* %13)
  %54 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* @_ZSt4cout, i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0))
  %55 = load i32* @_ZSt4endl, align 4
  %56 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %54, i32 %55)
  %57 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %57, i8* %14)
  br label %58

; <label>:58                                      ; preds = %29
  br label %59

; <label>:59                                      ; preds = %58, %59
  call void @_Z4waitv()
  br label %59
                                                  ; No predecessors!
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %this, i16* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  %2 = alloca i16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  store i16* %d, i16** %2, align 8
  %3 = load %class.sc_signal_u16** %1
  %4 = load i16** %2
  %5 = load i16* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_u16* %3, i32 0, i32 0
  store i16 %5, i16* %6, align 2
  ret void
}

define linkonce_odr void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  %4 = load i8* %3, align 1
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

define linkonce_odr i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  %3 = getelementptr inbounds %class.sc_signal_int32* %2, i32 0, i32 0
  %4 = load i32* %3, align 4
  ret i32 %4
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* %this, i8*) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i8* %0, i8** %4, align 8
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %this, i32) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i32, align 4
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i32 %0, i32* %4, align 4
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define void @_ZN3rbm4loadEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %index = alloca i16, align 2
  %loop_count = alloca i16, align 2
  %pingpong = alloca i8, align 1
  %tmp1 = alloca i16, align 2
  %tmp2 = alloca i16, align 2
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %nv = alloca i32, align 4
  %ntu = alloca i32, align 4
  %nu = alloca i32, align 4
  %nlp = alloca i32, align 4
  %nm = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %i = alloca i16, align 2
  %rate = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %dma_index = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i8, align 1
  %37 = alloca i8, align 1
  %i1 = alloca i16, align 2
  %rate2 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %38 = load %struct.rbm** %1
  %39 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %40 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %39, i8* %2)
  br label %41

; <label>:41                                      ; preds = %0
  %42 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %42, i32* %3)
  %43 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %43, i32* %4)
  %44 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %44, i8* %5)
  %45 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %45, i8* %6)
  %46 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %46, i8* %7)
  br label %47

; <label>:47                                      ; preds = %41
  br label %48

; <label>:48                                      ; preds = %49, %47
  call void @_Z4waitv()
  br label %49

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  %51 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %50)
  %52 = xor i1 %51, true
  br i1 %52, label %48, label %53

; <label>:53                                      ; preds = %49
  store i16 0, i16* %index, align 2
  store i16 0, i16* %loop_count, align 2
  store i8 0, i8* %pingpong, align 1
  br label %54

; <label>:54                                      ; preds = %53
  store i8 0, i8* @rst_inp, align 1
  %55 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  store i8 1, i8* %8, align 1
  %56 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %55, i8* %8)
  %57 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 12
  store i8 0, i8* %9, align 1
  %58 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %57, i8* %9)
  %59 = load i8* @conf_done_inp, align 1
  %60 = trunc i8 %59 to i1
  %61 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 13
  %62 = getelementptr inbounds %class.sc_signal_bool* %61, i32 0, i32 0
  %63 = zext i1 %60 to i8
  store i8 %63, i8* %62, align 1
  %64 = load i32* @conf_num_hidden_inp, align 4
  %65 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 14
  %66 = getelementptr inbounds %class.sc_signal_int32* %65, i32 0, i32 0
  store i32 %64, i32* %66, align 4
  %67 = load i32* @conf_num_visible_inp, align 4
  %68 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 15
  %69 = getelementptr inbounds %class.sc_signal_int32* %68, i32 0, i32 0
  store i32 %67, i32* %69, align 4
  %70 = load i32* @conf_num_users_inp, align 4
  %71 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 16
  %72 = getelementptr inbounds %class.sc_signal_int32* %71, i32 0, i32 0
  store i32 %70, i32* %72, align 4
  %73 = load i32* @conf_num_loops_inp, align 4
  %74 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 17
  %75 = getelementptr inbounds %class.sc_signal_int32* %74, i32 0, i32 0
  store i32 %73, i32* %75, align 4
  %76 = load i32* @conf_num_testusers_inp, align 4
  %77 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 18
  %78 = getelementptr inbounds %class.sc_signal_int32* %77, i32 0, i32 0
  store i32 %76, i32* %78, align 4
  %79 = load i32* @conf_num_movies_inp, align 4
  %80 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 19
  %81 = getelementptr inbounds %class.sc_signal_int32* %80, i32 0, i32 0
  store i32 %79, i32* %81, align 4
  %82 = load i8* @rst_inp, align 1
  %83 = trunc i8 %82 to i1
  %84 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 1
  %85 = getelementptr inbounds %class.sc_signal_bool* %84, i32 0, i32 0
  %86 = zext i1 %83 to i8
  store i8 %86, i8* %85, align 1
  %87 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  %88 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 5), align 8
  %89 = icmp ne i64 %88, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %10, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %87, i8* %10)
  %91 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 12
  %92 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 2), align 8
  %93 = icmp ne i64 %92, 0
  %94 = zext i1 %93 to i8
  store i8 %94, i8* %11, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %91, i8* %11)
  %95 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 30
  %96 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 7), align 8
  %97 = trunc i64 %96 to i16
  store i16 %97, i16* %12, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %95, i16* %12)
  %98 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 31
  %99 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 12), align 8
  %100 = trunc i64 %99 to i16
  store i16 %100, i16* %13, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %98, i16* %13)
  %101 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 32
  %102 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 11), align 8
  %103 = trunc i64 %102 to i16
  store i16 %103, i16* %14, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %101, i16* %14)
  %104 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 33
  %105 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 8), align 8
  %106 = trunc i64 %105 to i16
  store i16 %106, i16* %15, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %104, i16* %15)
  %107 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 34
  %108 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 10), align 8
  %109 = trunc i64 %108 to i16
  store i16 %109, i16* %16, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %107, i16* %16)
  %110 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 35
  %111 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 9), align 8
  %112 = trunc i64 %111 to i16
  store i16 %112, i16* %17, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %110, i16* %17)
  %113 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  %114 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 16), align 8
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %18, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %113, i32* %18)
  %116 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %117 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 17), align 8
  %118 = trunc i64 %117 to i32
  store i32 %118, i32* %19, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %116, i32* %19)
  %119 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  %120 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 18), align 8
  %121 = icmp ne i64 %120, 0
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %20, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %119, i8* %20)
  %123 = load i8* @rd_grant_inp, align 1
  %124 = trunc i8 %123 to i1
  %125 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 5
  %126 = getelementptr inbounds %class.sc_signal_bool* %125, i32 0, i32 0
  %127 = zext i1 %124 to i8
  store i8 %127, i8* %126, align 1
  %128 = load i32* @data_in_inp, align 4
  %129 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 6
  %130 = getelementptr inbounds %class.sc_signal_int32* %129, i32 0, i32 0
  store i32 %128, i32* %130, align 4
  %131 = load i8* @wr_grant_inp, align 1
  %132 = trunc i8 %131 to i1
  %133 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 10
  %134 = getelementptr inbounds %class.sc_signal_bool* %133, i32 0, i32 0
  %135 = zext i1 %132 to i8
  store i8 %135, i8* %134, align 1
  %136 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 9
  %137 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 24), align 8
  %138 = icmp ne i64 %137, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %21, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %136, i8* %21)
  %140 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 7
  %141 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 22), align 8
  %142 = trunc i64 %141 to i32
  store i32 %142, i32* %22, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %140, i32* %22)
  %143 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 8
  %144 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 23), align 8
  %145 = trunc i64 %144 to i32
  store i32 %145, i32* %23, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %143, i32* %23)
  %146 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 11
  %147 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 1), align 8
  %148 = trunc i64 %147 to i32
  store i32 %148, i32* %24, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %146, i32* %24)
  %149 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 4), align 8
  %150 = trunc i64 %149 to i16
  store i16 %150, i16* %index, align 2
  %151 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 6), align 8
  %152 = trunc i64 %151 to i16
  store i16 %152, i16* %loop_count, align 2
  %153 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  %154 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 19), align 8
  %155 = icmp ne i64 %154, 0
  %156 = zext i1 %155 to i8
  store i8 %156, i8* %25, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %153, i8* %25)
  %157 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  %158 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 13), align 8
  %159 = icmp ne i64 %158, 0
  %160 = zext i1 %159 to i8
  store i8 %160, i8* %26, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %157, i8* %26)
  %161 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %162 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %161, i32 0)
  %163 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 0, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %162, i8* %163)
  %164 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 28
  %165 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %164, i32 0)
  %166 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 14, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %165, i8* %166)
  %167 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 23
  %168 = getelementptr inbounds %0* %167, i32 0, i32 0
  %169 = load float** %168, align 8
  %170 = bitcast float* %169 to i8*
  %171 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 3, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %170, i8* %171)
  %172 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 31
  %173 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %172)
  %174 = zext i16 %173 to i32
  store i32 %174, i32* %nv, align 4
  %175 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 34
  %176 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %175)
  %177 = zext i16 %176 to i32
  store i32 %177, i32* %ntu, align 4
  %178 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 32
  %179 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %178)
  %180 = zext i16 %179 to i32
  store i32 %180, i32* %nu, align 4
  %181 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 33
  %182 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %181)
  %183 = zext i16 %182 to i32
  store i32 %183, i32* %nlp, align 4
  %184 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 35
  %185 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %184)
  %186 = zext i16 %185 to i32
  store i32 %186, i32* %nm, align 4
  br label %187

; <label>:187                                     ; preds = %54
  store i32 0, i32* @upc, align 4
  %188 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  %189 = load i16* %index, align 2
  %190 = zext i16 %189 to i32
  store i32 %190, i32* %27, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %188, i32* %27)
  %191 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %192 = load i32* %nm, align 4
  %193 = mul i32 5, %192
  store i32 %193, i32* %28, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %191, i32* %28)
  %194 = load i16* %loop_count, align 2
  %195 = zext i16 %194 to i32
  %196 = load i32* %nlp, align 4
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %198, label %206

; <label>:198                                     ; preds = %187
  br i1 false, label %199, label %206

; <label>:199                                     ; preds = %198
  br label %200

; <label>:200                                     ; preds = %201, %199
  call void @_Z4waitv()
  br label %201

; <label>:201                                     ; preds = %200
  %202 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 40
  %203 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %202)
  %204 = xor i1 %203, true
  br i1 %204, label %200, label %205

; <label>:205                                     ; preds = %201
  br label %206

; <label>:206                                     ; preds = %205, %198, %187
  %207 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 1, i8* %29, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %207, i8* %29)
  br label %208

; <label>:208                                     ; preds = %345, %206
  call void @_Z4waitv()
  store i32 1, i32* @upc, align 4
  br label %209

; <label>:209                                     ; preds = %208
  %210 = load i8* @conf_done_inp, align 1
  %211 = trunc i8 %210 to i1
  %212 = zext i1 %211 to i64
  %213 = load i32* @conf_num_hidden_inp, align 4
  %214 = zext i32 %213 to i64
  %215 = load i32* @conf_num_visible_inp, align 4
  %216 = zext i32 %215 to i64
  %217 = load i32* @conf_num_users_inp, align 4
  %218 = zext i32 %217 to i64
  %219 = load i32* @conf_num_loops_inp, align 4
  %220 = zext i32 %219 to i64
  %221 = load i32* @conf_num_testusers_inp, align 4
  %222 = zext i32 %221 to i64
  %223 = load i32* @conf_num_movies_inp, align 4
  %224 = zext i32 %223 to i64
  %225 = load i8* @rst_inp, align 1
  %226 = trunc i8 %225 to i1
  %227 = zext i1 %226 to i64
  %228 = load i8* @rd_grant_inp, align 1
  %229 = trunc i8 %228 to i1
  %230 = zext i1 %229 to i64
  %231 = load i32* @data_in_inp, align 4
  %232 = zext i32 %231 to i64
  %233 = load i8* @wr_grant_inp, align 1
  %234 = trunc i8 %233 to i1
  %235 = zext i1 %234 to i64
  call void @_ZN13model_compute6updateElllllllllll(%class.model_compute* @GM, i64 %212, i64 %214, i64 %216, i64 %218, i64 %220, i64 %222, i64 %224, i64 %227, i64 %230, i64 %232, i64 %235)
  %236 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 36
  %237 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %236)
  %238 = zext i1 %237 to i64
  %239 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 5), align 8
  %240 = icmp eq i64 %238, %239
  call void @__CPROVER_assert(i1 zeroext %240, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %241 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 12
  %242 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %241)
  %243 = zext i1 %242 to i64
  %244 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 2), align 8
  %245 = icmp eq i64 %243, %244
  call void @__CPROVER_assert(i1 zeroext %245, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %246 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 30
  %247 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %246)
  %248 = zext i16 %247 to i64
  %249 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 7), align 8
  %250 = icmp eq i64 %248, %249
  call void @__CPROVER_assert(i1 zeroext %250, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %251 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 31
  %252 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %251)
  %253 = zext i16 %252 to i64
  %254 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 12), align 8
  %255 = icmp eq i64 %253, %254
  call void @__CPROVER_assert(i1 zeroext %255, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %256 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 32
  %257 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %256)
  %258 = zext i16 %257 to i64
  %259 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 11), align 8
  %260 = icmp eq i64 %258, %259
  call void @__CPROVER_assert(i1 zeroext %260, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %261 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 33
  %262 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %261)
  %263 = zext i16 %262 to i64
  %264 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 8), align 8
  %265 = icmp eq i64 %263, %264
  call void @__CPROVER_assert(i1 zeroext %265, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %266 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 34
  %267 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %266)
  %268 = zext i16 %267 to i64
  %269 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 10), align 8
  %270 = icmp eq i64 %268, %269
  call void @__CPROVER_assert(i1 zeroext %270, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %271 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 35
  %272 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %271)
  %273 = zext i16 %272 to i64
  %274 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 9), align 8
  %275 = icmp eq i64 %273, %274
  call void @__CPROVER_assert(i1 zeroext %275, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %276 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  %277 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %276)
  %278 = zext i32 %277 to i64
  %279 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 16), align 8
  %280 = icmp eq i64 %278, %279
  call void @__CPROVER_assert(i1 zeroext %280, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %281 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %282 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %281)
  %283 = zext i32 %282 to i64
  %284 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 17), align 8
  %285 = icmp eq i64 %283, %284
  call void @__CPROVER_assert(i1 zeroext %285, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %286 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  %287 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %286)
  %288 = zext i1 %287 to i64
  %289 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 18), align 8
  %290 = icmp eq i64 %288, %289
  call void @__CPROVER_assert(i1 zeroext %290, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %291 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 9
  %292 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %291)
  %293 = zext i1 %292 to i64
  %294 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 24), align 8
  %295 = icmp eq i64 %293, %294
  call void @__CPROVER_assert(i1 zeroext %295, i8* getelementptr inbounds ([17 x i8]* @.str12, i32 0, i32 0))
  %296 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 7
  %297 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %296)
  %298 = zext i32 %297 to i64
  %299 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 22), align 8
  %300 = icmp eq i64 %298, %299
  call void @__CPROVER_assert(i1 zeroext %300, i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0))
  %301 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 8
  %302 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %301)
  %303 = zext i32 %302 to i64
  %304 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 23), align 8
  %305 = icmp eq i64 %303, %304
  call void @__CPROVER_assert(i1 zeroext %305, i8* getelementptr inbounds ([16 x i8]* @.str14, i32 0, i32 0))
  %306 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 11
  %307 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %306)
  %308 = zext i32 %307 to i64
  %309 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 1), align 8
  %310 = icmp eq i64 %308, %309
  call void @__CPROVER_assert(i1 zeroext %310, i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0))
  %311 = load i32* @rd_complete, align 4
  %312 = zext i32 %311 to i64
  %313 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 15), align 8
  %314 = icmp eq i64 %312, %313
  call void @__CPROVER_assert(i1 zeroext %314, i8* getelementptr inbounds ([18 x i8]* @.str16, i32 0, i32 0))
  %315 = load i16* %index, align 2
  %316 = zext i16 %315 to i64
  %317 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 4), align 8
  %318 = icmp eq i64 %316, %317
  call void @__CPROVER_assert(i1 zeroext %318, i8* getelementptr inbounds ([12 x i8]* @.str17, i32 0, i32 0))
  %319 = load i16* %loop_count, align 2
  %320 = zext i16 %319 to i64
  %321 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 6), align 8
  %322 = icmp eq i64 %320, %321
  call void @__CPROVER_assert(i1 zeroext %322, i8* getelementptr inbounds ([17 x i8]* @.str18, i32 0, i32 0))
  %323 = load i32* @upc, align 4
  %324 = zext i32 %323 to i64
  %325 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 20), align 8
  %326 = icmp eq i64 %324, %325
  call void @__CPROVER_assert(i1 zeroext %326, i8* getelementptr inbounds ([10 x i8]* @.str19, i32 0, i32 0))
  %327 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  %328 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %327)
  %329 = zext i1 %328 to i64
  %330 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 19), align 8
  %331 = icmp eq i64 %329, %330
  call void @__CPROVER_assert(i1 zeroext %331, i8* getelementptr inbounds ([23 x i8]* @.str20, i32 0, i32 0))
  %332 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  %333 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %332)
  %334 = zext i1 %333 to i64
  %335 = load i64* getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 13), align 8
  %336 = icmp eq i64 %334, %335
  call void @__CPROVER_assert(i1 zeroext %336, i8* getelementptr inbounds ([25 x i8]* @.str21, i32 0, i32 0))
  %337 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 0, i32 0), align 8
  %338 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %339 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %338, i32 0)
  %340 = call zeroext i1 @__CPROVER_array_equal(i8* %337, i8* %339)
  call void @__CPROVER_assert(i1 zeroext %340, i8* getelementptr inbounds ([11 x i8]* @.str22, i32 0, i32 0))
  %341 = load i8** getelementptr inbounds (%class.model_compute* @GM, i32 0, i32 14, i32 0), align 8
  %342 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 28
  %343 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %342, i32 0)
  %344 = call zeroext i1 @__CPROVER_array_equal(i8* %341, i8* %343)
  call void @__CPROVER_assert(i1 zeroext %344, i8* getelementptr inbounds ([21 x i8]* @.str23, i32 0, i32 0))
  ret void
                                                  ; No predecessors!
  %346 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 5
  %347 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %346)
  %348 = xor i1 %347, true
  br i1 %348, label %208, label %349

; <label>:349                                     ; preds = %345
  %350 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 0, i8* %30, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %350, i8* %30)
  %351 = load i16* %loop_count, align 2
  %352 = zext i16 %351 to i32
  %353 = load i32* %nu, align 4
  %354 = mul i32 %352, %353
  %355 = trunc i32 %354 to i16
  store i16 %355, i16* %tmp1, align 2
  %356 = load i16* %tmp1, align 2
  %357 = zext i16 %356 to i32
  %358 = load i16* %index, align 2
  %359 = zext i16 %358 to i32
  %360 = add nsw i32 %357, %359
  %361 = trunc i32 %360 to i16
  store i16 %361, i16* %tmp2, align 2
  %362 = load i16* %tmp2, align 2
  %363 = zext i16 %362 to i32
  %364 = srem i32 %363, 2
  %365 = icmp ne i32 %364, 0
  %366 = zext i1 %365 to i8
  store i8 %366, i8* %pingpong, align 1
  br label %367

; <label>:367                                     ; preds = %349
  store i16 0, i16* %i, align 2
  br label %368

; <label>:368                                     ; preds = %391, %367
  %369 = load i16* %i, align 2
  %370 = zext i16 %369 to i32
  %371 = icmp slt i32 %370, 500
  br i1 %371, label %372, label %394

; <label>:372                                     ; preds = %368
  %373 = load i16* %i, align 2
  %374 = zext i16 %373 to i32
  %375 = load i32* %nv, align 4
  %376 = icmp eq i32 %374, %375
  br i1 %376, label %377, label %378

; <label>:377                                     ; preds = %372
  br label %394

; <label>:378                                     ; preds = %372
  %379 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 6
  %380 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %379)
  %381 = trunc i32 %380 to i8
  store i8 %381, i8* %rate, align 1
  call void @_Z4waitv()
  %382 = load i8* %rate, align 1
  %383 = load i16* %i, align 2
  %384 = zext i16 %383 to i64
  %385 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %386 = load i8* %pingpong, align 1
  %387 = trunc i8 %386 to i1
  %388 = zext i1 %387 to i32
  %389 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %385, i32 %388)
  %390 = getelementptr inbounds i8* %389, i64 %384
  store i8 %382, i8* %390
  store i32 0, i32* @rd_complete, align 4
  br label %391

; <label>:391                                     ; preds = %378
  %392 = load i16* %i, align 2
  %393 = add i16 %392, 1
  store i16 %393, i16* %i, align 2
  br label %368

; <label>:394                                     ; preds = %377, %368
  call void @_Z4waitv()
  %395 = load i32* %nv, align 4
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %398 = load i8* %pingpong, align 1
  %399 = trunc i8 %398 to i1
  %400 = zext i1 %399 to i32
  %401 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %397, i32 %400)
  %402 = getelementptr inbounds i8* %401, i64 %396
  store i8 1, i8* %402
  store i32 1, i32* @rd_complete, align 4
  br label %403

; <label>:403                                     ; preds = %394
  br label %404

; <label>:404                                     ; preds = %403, %554
  %405 = load i16* %loop_count, align 2
  %406 = zext i16 %405 to i32
  %407 = load i32* %nlp, align 4
  %408 = icmp ne i32 %406, %407
  br i1 %408, label %409, label %423

; <label>:409                                     ; preds = %404
  %410 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  store i8 1, i8* %31, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %410, i8* %31)
  store i32 2, i32* @upc, align 4
  br label %411

; <label>:411                                     ; preds = %412, %409
  call void @_Z4waitv()
  br label %412

; <label>:412                                     ; preds = %411
  %413 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 39
  %414 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %413)
  %415 = xor i1 %414, true
  br i1 %415, label %411, label %416

; <label>:416                                     ; preds = %412
  %417 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 37
  store i8 0, i8* %32, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %417, i8* %32)
  br label %418

; <label>:418                                     ; preds = %419, %416
  call void @_Z4waitv()
  br label %419

; <label>:419                                     ; preds = %418
  %420 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 39
  %421 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %420)
  br i1 %421, label %418, label %422

; <label>:422                                     ; preds = %419
  br label %437

; <label>:423                                     ; preds = %404
  %424 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  store i8 1, i8* %33, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %424, i8* %33)
  br label %425

; <label>:425                                     ; preds = %426, %423
  call void @_Z4waitv()
  br label %426

; <label>:426                                     ; preds = %425
  %427 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 42
  %428 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %427)
  %429 = xor i1 %428, true
  br i1 %429, label %425, label %430

; <label>:430                                     ; preds = %426
  %431 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 38
  store i8 0, i8* %34, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %431, i8* %34)
  br label %432

; <label>:432                                     ; preds = %433, %430
  call void @_Z4waitv()
  br label %433

; <label>:433                                     ; preds = %432
  %434 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 42
  %435 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %434)
  br i1 %435, label %432, label %436

; <label>:436                                     ; preds = %433
  br label %437

; <label>:437                                     ; preds = %436, %422
  %438 = load i16* %index, align 2
  %439 = zext i16 %438 to i32
  %440 = add nsw i32 %439, 1
  %441 = trunc i32 %440 to i16
  store i16 %441, i16* %index, align 2
  %442 = load i16* %index, align 2
  %443 = zext i16 %442 to i32
  %444 = load i32* %nu, align 4
  %445 = icmp eq i32 %443, %444
  br i1 %445, label %446, label %456

; <label>:446                                     ; preds = %437
  %447 = load i16* %loop_count, align 2
  %448 = zext i16 %447 to i32
  %449 = load i32* %nlp, align 4
  %450 = icmp ne i32 %448, %449
  br i1 %450, label %451, label %456

; <label>:451                                     ; preds = %446
  %452 = load i16* %loop_count, align 2
  %453 = zext i16 %452 to i32
  %454 = add nsw i32 %453, 1
  %455 = trunc i32 %454 to i16
  store i16 %455, i16* %loop_count, align 2
  store i16 0, i16* %index, align 2
  br label %456

; <label>:456                                     ; preds = %451, %446, %437
  %457 = load i16* %index, align 2
  %458 = zext i16 %457 to i32
  %459 = load i32* %ntu, align 4
  %460 = icmp eq i32 %458, %459
  br i1 %460, label %461, label %471

; <label>:461                                     ; preds = %456
  %462 = load i16* %loop_count, align 2
  %463 = zext i16 %462 to i32
  %464 = load i32* %nlp, align 4
  %465 = icmp eq i32 %463, %464
  br i1 %465, label %466, label %471

; <label>:466                                     ; preds = %461
  br label %467

; <label>:467                                     ; preds = %466
  br label %468

; <label>:468                                     ; preds = %469, %467
  call void @_Z4waitv()
  store i32 3, i32* @upc, align 4
  br label %469

; <label>:469                                     ; preds = %468
  br i1 true, label %468, label %470

; <label>:470                                     ; preds = %469
  br label %471

; <label>:471                                     ; preds = %470, %461, %456
  %472 = load i32* %nv, align 4
  %473 = load i16* %index, align 2
  %474 = zext i16 %473 to i32
  %475 = mul i32 %472, %474
  store i32 %475, i32* %dma_index, align 4
  %476 = load i16* %loop_count, align 2
  %477 = zext i16 %476 to i32
  %478 = load i32* %nlp, align 4
  %479 = icmp eq i32 %477, %478
  br i1 %479, label %480, label %486

; <label>:480                                     ; preds = %471
  %481 = load i32* %nv, align 4
  %482 = load i32* %nu, align 4
  %483 = mul i32 %481, %482
  %484 = load i32* %dma_index, align 4
  %485 = add i32 %484, %483
  store i32 %485, i32* %dma_index, align 4
  br label %486

; <label>:486                                     ; preds = %480, %471
  %487 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 2
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %487, i32* %dma_index)
  %488 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 3
  %489 = load i32* %nm, align 4
  %490 = mul i32 5, %489
  store i32 %490, i32* %35, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %488, i32* %35)
  %491 = load i16* %loop_count, align 2
  %492 = zext i16 %491 to i32
  %493 = load i32* %nlp, align 4
  %494 = icmp eq i32 %492, %493
  br i1 %494, label %495, label %502

; <label>:495                                     ; preds = %486
  br label %496

; <label>:496                                     ; preds = %497, %495
  call void @_Z4waitv()
  br label %497

; <label>:497                                     ; preds = %496
  %498 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 40
  %499 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %498)
  %500 = xor i1 %499, true
  br i1 %500, label %496, label %501

; <label>:501                                     ; preds = %497
  br label %502

; <label>:502                                     ; preds = %501, %486
  %503 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 1, i8* %36, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %503, i8* %36)
  br label %504

; <label>:504                                     ; preds = %505, %502
  call void @_Z4waitv()
  br label %505

; <label>:505                                     ; preds = %504
  %506 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 5
  %507 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %506)
  %508 = xor i1 %507, true
  br i1 %508, label %504, label %509

; <label>:509                                     ; preds = %505
  %510 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 4
  store i8 0, i8* %37, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %510, i8* %37)
  %511 = load i16* %loop_count, align 2
  %512 = zext i16 %511 to i32
  %513 = load i32* %nu, align 4
  %514 = mul i32 %512, %513
  %515 = trunc i32 %514 to i16
  store i16 %515, i16* %tmp1, align 2
  %516 = load i16* %tmp1, align 2
  %517 = zext i16 %516 to i32
  %518 = load i16* %index, align 2
  %519 = zext i16 %518 to i32
  %520 = add nsw i32 %517, %519
  %521 = trunc i32 %520 to i16
  store i16 %521, i16* %tmp2, align 2
  %522 = load i16* %tmp2, align 2
  %523 = zext i16 %522 to i32
  %524 = srem i32 %523, 2
  %525 = icmp ne i32 %524, 0
  %526 = zext i1 %525 to i8
  store i8 %526, i8* %pingpong, align 1
  br label %527

; <label>:527                                     ; preds = %509
  store i16 0, i16* %i1, align 2
  br label %528

; <label>:528                                     ; preds = %551, %527
  %529 = load i16* %i1, align 2
  %530 = zext i16 %529 to i32
  %531 = icmp slt i32 %530, 500
  br i1 %531, label %532, label %554

; <label>:532                                     ; preds = %528
  %533 = load i16* %i1, align 2
  %534 = zext i16 %533 to i32
  %535 = load i32* %nv, align 4
  %536 = icmp eq i32 %534, %535
  br i1 %536, label %537, label %538

; <label>:537                                     ; preds = %532
  br label %554

; <label>:538                                     ; preds = %532
  %539 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 6
  %540 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %539)
  %541 = trunc i32 %540 to i8
  store i8 %541, i8* %rate2, align 1
  call void @_Z4waitv()
  %542 = load i8* %rate2, align 1
  %543 = load i16* %i1, align 2
  %544 = zext i16 %543 to i64
  %545 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %546 = load i8* %pingpong, align 1
  %547 = trunc i8 %546 to i1
  %548 = zext i1 %547 to i32
  %549 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %545, i32 %548)
  %550 = getelementptr inbounds i8* %549, i64 %544
  store i8 %542, i8* %550
  store i32 0, i32* @rd_complete, align 4
  br label %551

; <label>:551                                     ; preds = %538
  %552 = load i16* %i1, align 2
  %553 = add i16 %552, 1
  store i16 %553, i16* %i1, align 2
  br label %528

; <label>:554                                     ; preds = %537, %528
  call void @_Z4waitv()
  %555 = load i32* %nv, align 4
  %556 = zext i32 %555 to i64
  %557 = getelementptr inbounds %struct.rbm* %38, i32 0, i32 20
  %558 = load i8* %pingpong, align 1
  %559 = trunc i8 %558 to i1
  %560 = zext i1 %559 to i32
  %561 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %557, i32 %560)
  %562 = getelementptr inbounds i8* %561, i64 %556
  store i8 1, i8* %562
  store i32 1, i32* @rd_complete, align 4
  br label %404
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  %9 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %10 = load i8* %9, align 1
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

define linkonce_odr void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %this, i32* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i32* %d, i32** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i32** %2
  %5 = load i32* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_int32* %3, i32 0, i32 0
  store i32 %5, i32* %6, align 4
  ret void
}

declare void @__CPROVER_array_copy(i8*, i8*)

define linkonce_odr i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2D*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2D** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 512
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define linkonce_odr i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2D*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2D** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 128
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define linkonce_odr zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  %3 = getelementptr inbounds %class.sc_signal_u16* %2, i32 0, i32 0
  %4 = load i16* %3, align 2
  ret i16 %4
}

declare void @__CPROVER_assert(i1 zeroext, i8*)

declare zeroext i1 @__CPROVER_array_equal(i8*, i8*)

define void @_ZN3rbm5storeEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %ntu = alloca i16, align 2
  %nm = alloca i16, align 2
  %index = alloca i32, align 4
  %rating = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %dma_index = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %i = alloca i16, align 2
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %18 = load %struct.rbm** %1
  %19 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %20 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %19, i8* %2)
  br label %21

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %22, i32* %3)
  %23 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %23, i32* %4)
  %24 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %24, i8* %5)
  %25 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %25, i8* %6)
  %26 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 1, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %26, i8* %7)
  %27 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 0, i8* %8, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %27, i8* %8)
  br label %28

; <label>:28                                      ; preds = %29, %21
  call void @_Z4waitv()
  br label %29

; <label>:29                                      ; preds = %28
  %30 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 36
  %31 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %30)
  %32 = xor i1 %31, true
  br i1 %32, label %28, label %33

; <label>:33                                      ; preds = %29
  %34 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 34
  %35 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %34)
  store i16 %35, i16* %ntu, align 2
  %36 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %37 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %36)
  store i16 %37, i16* %nm, align 2
  store i32 0, i32* %index, align 4
  br label %38

; <label>:38                                      ; preds = %33
  br label %39

; <label>:39                                      ; preds = %38, %108
  %40 = load i32* %index, align 4
  %41 = load i16* %ntu, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %49

; <label>:44                                      ; preds = %39
  %45 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 12
  store i8 1, i8* %9, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %45, i8* %9)
  br label %46

; <label>:46                                      ; preds = %47, %44
  call void @_Z4waitv()
  br label %47

; <label>:47                                      ; preds = %46
  br i1 true, label %46, label %48

; <label>:48                                      ; preds = %47
  br label %49

; <label>:49                                      ; preds = %48, %39
  br label %50

; <label>:50                                      ; preds = %51, %49
  call void @_Z4waitv()
  br label %51

; <label>:51                                      ; preds = %50
  %52 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 43
  %53 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %52)
  %54 = xor i1 %53, true
  br i1 %54, label %50, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 1, i8* %10, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %56, i8* %10)
  br label %57

; <label>:57                                      ; preds = %58, %55
  call void @_Z4waitv()
  br label %58

; <label>:58                                      ; preds = %57
  %59 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 43
  %60 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %59)
  br i1 %60, label %57, label %61

; <label>:61                                      ; preds = %58
  %62 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 44
  store i8 0, i8* %11, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %62, i8* %11)
  %63 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 0, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %63, i8* %12)
  %64 = load i16* %nm, align 2
  %65 = zext i16 %64 to i32
  %66 = load i32* %index, align 4
  %67 = mul i32 %65, %66
  store i32 %67, i32* %dma_index, align 4
  %68 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 7
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %68, i32* %dma_index)
  %69 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 8
  %70 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 35
  %71 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %70)
  %72 = zext i16 %71 to i32
  store i32 %72, i32* %13, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %69, i32* %13)
  %73 = load i32* %index, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %index, align 4
  %75 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %75, i8* %14)
  br label %76

; <label>:76                                      ; preds = %77, %61
  call void @_Z4waitv()
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 10
  %79 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %78)
  %80 = xor i1 %79, true
  br i1 %80, label %76, label %81

; <label>:81                                      ; preds = %77
  %82 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 9
  store i8 0, i8* %15, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %82, i8* %15)
  br label %83

; <label>:83                                      ; preds = %81
  store i16 0, i16* %i, align 2
  br label %84

; <label>:84                                      ; preds = %105, %83
  %85 = load i16* %i, align 2
  %86 = zext i16 %85 to i32
  %87 = icmp slt i32 %86, 100
  br i1 %87, label %88, label %108

; <label>:88                                      ; preds = %84
  %89 = load i16* %i, align 2
  %90 = zext i16 %89 to i32
  %91 = load i16* %nm, align 2
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %94, label %95

; <label>:94                                      ; preds = %88
  br label %108

; <label>:95                                      ; preds = %88
  %96 = load i16* %i, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 28
  %99 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %98, i32 0)
  %100 = getelementptr inbounds i8* %99, i64 %97
  %101 = load i8* %100
  store i8 %101, i8* %rating, align 1
  call void @_Z4waitv()
  %102 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 11
  %103 = load i8* %rating, align 1
  %104 = zext i8 %103 to i32
  store i32 %104, i32* %16, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %102, i32* %16)
  br label %105

; <label>:105                                     ; preds = %95
  %106 = load i16* %i, align 2
  %107 = add i16 %106, 1
  store i16 %107, i16* %i, align 2
  br label %84

; <label>:108                                     ; preds = %94, %84
  %109 = getelementptr inbounds %struct.rbm* %18, i32 0, i32 45
  store i8 1, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %109, i8* %17)
  br label %39
                                                  ; No predecessors!
  ret void
}

define internal void @__cxx_global_var_init24() {
  call void @_ZN3rbmC1Ev(%struct.rbm* @IMPL)
  ret void
}

define linkonce_odr void @_ZN3rbmC1Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  call void @_ZN3rbmC2Ev(%struct.rbm* %2)
  ret void
}

define i32 @main() {
  %1 = alloca i32, align 4
  store i32 0, i32* %1
  call void @_ZN3rbm4loadEv(%struct.rbm* @IMPL)
  ret i32 0
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC2ERKS0_(%class.SysCArray1D* %this, %class.SysCArray1D* %r) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store %class.SysCArray1D* %r, %class.SysCArray1D** %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 65536)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = load %class.SysCArray1D** %2
  %9 = getelementptr inbounds %class.SysCArray1D* %8, i32 0, i32 0
  %10 = load i8** %9, align 8
  call void @__CPROVER_array_copy(i8* %7, i8* %10)
  ret void
}

declare i8* @__CPROVER_malloc(i64)

define linkonce_odr void @_ZN8type_memIhLj65536EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN3rbmC2Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  %3 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 0
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %3, i8* getelementptr inbounds ([4 x i8]* @.str25, i32 0, i32 0))
  %4 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %4, i8* getelementptr inbounds ([4 x i8]* @.str26, i32 0, i32 0))
  %5 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 2
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %5, i8* getelementptr inbounds ([9 x i8]* @.str27, i32 0, i32 0))
  %6 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 3
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %6, i8* getelementptr inbounds ([10 x i8]* @.str28, i32 0, i32 0))
  %7 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 4
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %7, i8* getelementptr inbounds ([11 x i8]* @.str29, i32 0, i32 0))
  %8 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 5
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %8, i8* getelementptr inbounds ([9 x i8]* @.str30, i32 0, i32 0))
  %9 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 6
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %9, i8* getelementptr inbounds ([8 x i8]* @.str31, i32 0, i32 0))
  %10 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 7
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %10, i8* getelementptr inbounds ([9 x i8]* @.str32, i32 0, i32 0))
  %11 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 8
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %11, i8* getelementptr inbounds ([10 x i8]* @.str33, i32 0, i32 0))
  %12 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 9
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %12, i8* getelementptr inbounds ([11 x i8]* @.str34, i32 0, i32 0))
  %13 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 10
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %13, i8* getelementptr inbounds ([9 x i8]* @.str35, i32 0, i32 0))
  %14 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 11
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %14, i8* getelementptr inbounds ([9 x i8]* @.str36, i32 0, i32 0))
  %15 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 12
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %15, i8* getelementptr inbounds ([5 x i8]* @.str37, i32 0, i32 0))
  %16 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 13
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %16, i8* getelementptr inbounds ([10 x i8]* @.str38, i32 0, i32 0))
  %17 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 14
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %17, i8* getelementptr inbounds ([16 x i8]* @.str39, i32 0, i32 0))
  %18 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 15
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %18, i8* getelementptr inbounds ([17 x i8]* @.str40, i32 0, i32 0))
  %19 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 16
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %19, i8* getelementptr inbounds ([15 x i8]* @.str41, i32 0, i32 0))
  %20 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 17
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %20, i8* getelementptr inbounds ([15 x i8]* @.str42, i32 0, i32 0))
  %21 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 18
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %21, i8* getelementptr inbounds ([19 x i8]* @.str43, i32 0, i32 0))
  %22 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 19
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %22, i8* getelementptr inbounds ([16 x i8]* @.str44, i32 0, i32 0))
  %23 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 20
  call void @_ZN11SysCArray2DIhLj2ELj512EEC1Ev(%class.SysCArray2D* %23)
  %24 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 21
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %24)
  %25 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 22
  call void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %25)
  %26 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 23
  call void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%0* %26)
  %27 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 24
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %27)
  %28 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 25
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %28)
  %29 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 26
  call void @_ZN11SysCArray1DIfLj5EEC1Ev(%1* %29)
  %30 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 27
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %30)
  %31 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 28
  call void @_ZN11SysCArray2DIhLj2ELj128EEC1Ev(%class.SysCArray2D* %31)
  %32 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 30
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %32)
  %33 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 31
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %33)
  %34 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 32
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %34)
  %35 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 33
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %35)
  %36 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 34
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %36)
  %37 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 35
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %37)
  %38 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 36
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %38)
  %39 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 37
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %39)
  %40 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 38
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %40)
  %41 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 39
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %41)
  %42 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 40
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %42)
  %43 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 41
  call void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %43)
  %44 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 42
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %44)
  %45 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 43
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %45)
  %46 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 44
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %46)
  %47 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 45
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %47)
  br label %48

; <label>:48                                      ; preds = %0
  br label %49

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %51 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %50)
  %52 = load i8* %51
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i32
  call void @_Z15reset_signal_isib(i32 %54, i1 zeroext false)
  br label %55

; <label>:55                                      ; preds = %49
  br label %56

; <label>:56                                      ; preds = %55
  %57 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %58 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %57)
  %59 = load i8* %58
  %60 = trunc i8 %59 to i1
  %61 = zext i1 %60 to i32
  call void @_Z15reset_signal_isib(i32 %61, i1 zeroext false)
  br label %62

; <label>:62                                      ; preds = %56
  br label %63

; <label>:63                                      ; preds = %62
  %64 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %65 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %64)
  %66 = load i8* %65
  %67 = trunc i8 %66 to i1
  %68 = zext i1 %67 to i32
  call void @_Z15reset_signal_isib(i32 %68, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %69

; <label>:69                                      ; preds = %63
  br label %70

; <label>:70                                      ; preds = %69
  %71 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %72 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %71)
  %73 = load i8* %72
  %74 = trunc i8 %73 to i1
  %75 = zext i1 %74 to i32
  call void @_Z15reset_signal_isib(i32 %75, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %76

; <label>:76                                      ; preds = %70
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %79 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %78)
  %80 = load i8* %79
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i32
  call void @_Z15reset_signal_isib(i32 %82, i1 zeroext false)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2, align 8
  call void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i8** %2, align 8
  call void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj512EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIhLj2ELj512EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  call void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%0* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC1Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  call void @_ZN11SysCArray1DIfLj5EEC2Ev(%1* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj128EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIhLj2ELj128EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  call void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %2)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  call void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %2)
  ret void
}

define linkonce_odr void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  call void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %2)
  ret void
}

define linkonce_odr i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  ret i8* %3
}

define linkonce_odr void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj128EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 256)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 128)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC2Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  %3 = call i8* @__CPROVER_malloc(i64 20)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %1* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 50601)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 101)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  %3 = call i8* @__CPROVER_malloc(i64 202404)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %0* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  %6 = call i8* @__CPROVER_malloc(i64 404)
  %7 = bitcast i8* %6 to float*
  %8 = getelementptr inbounds %0* %2, i32 0, i32 1
  store float* %7, float** %8, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 512)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj512EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 1024)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 512)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13model_computeD2Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %4 = load %class.model_compute** %1
  %5 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 14
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %5)
          to label %6 unwind label %10

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %7)
          to label %8 unwind label %14

; <label>:8                                       ; preds = %6
  %9 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %9)
  ret void

; <label>:10                                      ; preds = %0
  %11 = call i8* @llvm.eh.exception() nounwind
  store i8* %11, i8** %2
  %12 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %11, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %13 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %13)
          to label %17 unwind label %23

; <label>:14                                      ; preds = %6
  %15 = call i8* @llvm.eh.exception() nounwind
  store i8* %15, i8** %2
  %16 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %15, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %18

; <label>:17                                      ; preds = %10
  br label %18

; <label>:18                                      ; preds = %14, %17
  %19 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %19)
          to label %20 unwind label %23

; <label>:20                                      ; preds = %18
  br label %21

; <label>:21                                      ; preds = %20
  %22 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %22) noreturn
  unreachable

; <label>:23                                      ; preds = %18, %10
  %24 = call i8* @llvm.eh.exception() nounwind
  %25 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %24, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN13model_computeC2Ev(%class.model_compute* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_compute*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_compute* %this, %class.model_compute** %1, align 8
  %4 = load %class.model_compute** %1
  %5 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %5, i64 0)
  %6 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %6, i64 0)
          to label %7 unwind label %12

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 14
  invoke void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %8, i64 0)
          to label %9 unwind label %15

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 25
  store i64 65535, i64* %10, align 8
  %11 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 26
  store i64 4294967295, i64* %11, align 8
  ret void

; <label>:12                                      ; preds = %0
  %13 = call i8* @llvm.eh.exception() nounwind
  store i8* %13, i8** %2
  %14 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %13, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  br label %20

; <label>:15                                      ; preds = %7
  %16 = call i8* @llvm.eh.exception() nounwind
  store i8* %16, i8** %2
  %17 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %16, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %18 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 3
  invoke void @_ZN8type_memIhLj65536EED1Ev(%class.SysCArray1D* %18)
          to label %19 unwind label %25

; <label>:19                                      ; preds = %15
  br label %20

; <label>:20                                      ; preds = %19, %12
  %21 = getelementptr inbounds %class.model_compute* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %21)
          to label %22 unwind label %25

; <label>:22                                      ; preds = %20
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %24) noreturn
  unreachable

; <label>:25                                      ; preds = %20, %15
  %26 = call i8* @llvm.eh.exception() nounwind
  %27 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %26, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 128)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj65536EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 65536)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 512)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define internal void @_GLOBAL__I_a() {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init24()
  ret void
}
