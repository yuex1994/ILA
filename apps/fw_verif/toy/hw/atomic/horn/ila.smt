;; variables
(declare-var acc_state (_ BitVec 3))
(declare-var b0 Bool)
(declare-var b1 Bool)
(declare-var b10 Bool)
(declare-var b12 Bool)
(declare-var b17 Bool)
(declare-var b18 Bool)
(declare-var b20 Bool)
(declare-var b24 Bool)
(declare-var b25 Bool)
(declare-var b27 Bool)
(declare-var b31 Bool)
(declare-var b32 Bool)
(declare-var b34 Bool)
(declare-var b38 Bool)
(declare-var b39 Bool)
(declare-var b4 Bool)
(declare-var b41 Bool)
(declare-var b45 Bool)
(declare-var b46 Bool)
(declare-var b48 Bool)
(declare-var b52 Bool)
(declare-var b53 Bool)
(declare-var b55 Bool)
(declare-var b9 Bool)
(declare-var bv23 (_ BitVec 3))
(declare-var bv37 (_ BitVec 3))
(declare-var bv51 (_ BitVec 3))
(declare-var bv8 (_ BitVec 3))
(declare-var cmd (_ BitVec 2))
(declare-var cmdaddr (_ BitVec 16))
(declare-var decode_fe00 Bool)
(declare-var decode_fe01 Bool)
(declare-var decode_fe02 Bool)
(declare-var decode_fe03 Bool)
(declare-var instr_fe00_acc_state_nxt (_ BitVec 3))
(declare-var instr_fe01_acc_state_nxt (_ BitVec 3))
(declare-var instr_fe02_acc_state_nxt (_ BitVec 3))
(declare-var instr_fe03_acc_state_nxt (_ BitVec 3))
;; relations
(declare-rel rel.decode_fe01 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe01_acc_state_nxt ((_ BitVec 3) (_ BitVec 2) (_ BitVec 16) (_ BitVec 3)))
(declare-rel rel.decode_fe02 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe02_acc_state_nxt ((_ BitVec 3) (_ BitVec 2) (_ BitVec 16) (_ BitVec 3)))
(declare-rel rel.decode_fe03 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe03_acc_state_nxt ((_ BitVec 3) (_ BitVec 2) (_ BitVec 16) (_ BitVec 3)))
(declare-rel rel.decode_fe00 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe00_acc_state_nxt ((_ BitVec 3) (_ BitVec 2) (_ BitVec 16) (_ BitVec 3)))
;; clauses
(rule (=> (and (= b17 (and b18 b20))
               (= b18 (= cmd #b10))
               (= b20 (= cmdaddr #b1111111000000001)))
          (rel.decode_fe01 cmd cmdaddr b17)))
(rule (=> (and (= b24 (and b25 b27))
               (= b25 (= cmd #b10))
               (= b27 (= cmdaddr #b1111111000000001))
               (= bv23 (ite b24 #b000 acc_state)))
          (rel.instr_fe01_acc_state_nxt acc_state cmd cmdaddr bv23)))
(rule (=> (and (= b31 (and b32 b34))
               (= b32 (= cmd #b10))
               (= b34 (= cmdaddr #b1111111000000010)))
          (rel.decode_fe02 cmd cmdaddr b31)))
(rule (=> (and (= b38 (and b39 b41))
               (= b39 (= cmd #b10))
               (= b41 (= cmdaddr #b1111111000000010))
               (= bv37 (ite b38 #b000 acc_state)))
          (rel.instr_fe02_acc_state_nxt acc_state cmd cmdaddr bv37)))
(rule (=> (and (= b45 (and b46 b48))
               (= b46 (= cmd #b10))
               (= b48 (= cmdaddr #b1111111000000011)))
          (rel.decode_fe03 cmd cmdaddr b45)))
(rule (=> (and (= b52 (and b53 b55))
               (= b53 (= cmd #b10))
               (= b55 (= cmdaddr #b1111111000000011))
               (= bv51 (ite b52 #b000 acc_state)))
          (rel.instr_fe03_acc_state_nxt acc_state cmd cmdaddr bv51)))
(rule (=> (and (= b0 (and b1 b4))
               (= b1 (= cmd #b10))
               (= b4 (= cmdaddr #b1111111000000000)))
          (rel.decode_fe00 cmd cmdaddr b0)))
(rule (=> (and (= b10 (= cmd #b10))
               (= b12 (= cmdaddr #b1111111000000000))
               (= b9 (and b10 b12))
               (= bv8 (ite b9 #b000 acc_state)))
          (rel.instr_fe00_acc_state_nxt acc_state cmd cmdaddr bv8)))
