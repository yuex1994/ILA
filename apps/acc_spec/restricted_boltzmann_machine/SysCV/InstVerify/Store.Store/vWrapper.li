; ModuleID = 'vWrapper.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { float*, float* }
%1 = type { float* }
%2 = type { i32, void ()* }
%class.SysCArray1D = type { i8* }
%class.SysCArray2D = type { i8*, i8* }
%class.model_store = type { %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %class.SysCArray1D, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%class.sc_signal_bool = type { i8 }
%class.sc_signal_int32 = type { i32 }
%class.sc_signal_u16 = type { i16 }
%class.sc_signal_u32 = type { i32 }
%"class.std::iocout" = type { i8 }
%class.type_mem = type { i8* }
%struct.rbm = type { %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.sc_signal_int32, %class.SysCArray2D, %class.SysCArray1D, %class.SysCArray1D, %0, %class.SysCArray2D, %class.SysCArray2D, %1, %class.SysCArray1D, %class.SysCArray2D, [624 x i32], %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_u16, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_int32, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool, %class.sc_signal_bool }

@GM = global %class.model_store zeroinitializer, align 8
@__dso_handle = external global i8*
@_ZSt4cout = global %class.sc_signal_bool zeroinitializer, align 1
@_ZSt4endl = global i32 0, align 4
@cycleCnt = external global i32
@conf_done_inp = global i8 0, align 1
@conf_num_hidden_inp = global i32 0, align 4
@conf_num_visible_inp = global i32 0, align 4
@conf_num_users_inp = global i32 0, align 4
@conf_num_loops_inp = global i32 0, align 4
@conf_num_testusers_inp = global i32 0, align 4
@conf_num_movies_inp = global i32 0, align 4
@rst_inp = global i8 0, align 1
@rd_grant_inp = global i8 0, align 1
@data_in_inp = global i32 0, align 4
@wr_grant_inp = global i8 0, align 1
@wr_complete = global i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"Config done\00"
@.str1 = private unnamed_addr constant [16 x i8] c"init_done_match\00"
@.str2 = private unnamed_addr constant [11 x i8] c"done_match\00"
@.str3 = private unnamed_addr constant [17 x i8] c"num_hidden_match\00"
@.str4 = private unnamed_addr constant [18 x i8] c"num_visible_match\00"
@.str5 = private unnamed_addr constant [16 x i8] c"num_users_match\00"
@.str6 = private unnamed_addr constant [16 x i8] c"num_loops_match\00"
@.str7 = private unnamed_addr constant [20 x i8] c"num_testusers_match\00"
@.str8 = private unnamed_addr constant [17 x i8] c"num_movies_match\00"
@.str9 = private unnamed_addr constant [15 x i8] c"rd_index_match\00"
@.str10 = private unnamed_addr constant [16 x i8] c"rd_length_match\00"
@.str11 = private unnamed_addr constant [17 x i8] c"rd_request_match\00"
@.str12 = private unnamed_addr constant [17 x i8] c"wr_request_match\00"
@.str13 = private unnamed_addr constant [15 x i8] c"wr_index_match\00"
@.str14 = private unnamed_addr constant [16 x i8] c"wr_length_match\00"
@.str15 = private unnamed_addr constant [15 x i8] c"data_out_match\00"
@.str16 = private unnamed_addr constant [18 x i8] c"wr_complete_match\00"
@.str17 = private unnamed_addr constant [8 x i8] c"i_match\00"
@.str18 = private unnamed_addr constant [11 x i8] c"data_match\00"
@.str19 = private unnamed_addr constant [21 x i8] c"predict_result_match\00"
@.str20 = private unnamed_addr constant [8 x i8] c"ind-inv\00"
@IMPL = global %struct.rbm zeroinitializer, align 8
@.str22 = private unnamed_addr constant [4 x i8] c"clk\00"
@.str23 = private unnamed_addr constant [4 x i8] c"rst\00"
@.str24 = private unnamed_addr constant [9 x i8] c"rd_index\00"
@.str25 = private unnamed_addr constant [10 x i8] c"rd_length\00"
@.str26 = private unnamed_addr constant [11 x i8] c"rd_request\00"
@.str27 = private unnamed_addr constant [9 x i8] c"rd_grant\00"
@.str28 = private unnamed_addr constant [8 x i8] c"data_in\00"
@.str29 = private unnamed_addr constant [9 x i8] c"wr_index\00"
@.str30 = private unnamed_addr constant [10 x i8] c"wr_length\00"
@.str31 = private unnamed_addr constant [11 x i8] c"wr_request\00"
@.str32 = private unnamed_addr constant [9 x i8] c"wr_grant\00"
@.str33 = private unnamed_addr constant [9 x i8] c"data_out\00"
@.str34 = private unnamed_addr constant [5 x i8] c"done\00"
@.str35 = private unnamed_addr constant [10 x i8] c"cond_done\00"
@.str36 = private unnamed_addr constant [16 x i8] c"conf_num_hidden\00"
@.str37 = private unnamed_addr constant [17 x i8] c"conf_num_visible\00"
@.str38 = private unnamed_addr constant [15 x i8] c"conf_num_users\00"
@.str39 = private unnamed_addr constant [15 x i8] c"conf_num_loops\00"
@.str40 = private unnamed_addr constant [19 x i8] c"conf_num_testusers\00"
@.str41 = private unnamed_addr constant [16 x i8] c"conf_num_movies\00"
@llvm.global_ctors = appending global [1 x %2] [%2 { i32 65535, void ()* @_GLOBAL__I_a }]

define zeroext i1 @_ZN11model_store9assumps_0Elllllllllll(%class.model_store* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_299 = alloca i64, align 8
  %cppVar_300 = alloca i8, align 1
  store %class.model_store* %this, %class.model_store** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_store** %1
  %14 = getelementptr inbounds %class.model_store* %13, i32 0, i32 18
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_300, align 1
  %18 = load i8* %cppVar_300, align 1
  %19 = trunc i8 %18 to i1
  ret i1 %19
}

define i64 @_ZN11model_store21cppUpdateFun_data_outElllllllllll(%class.model_store* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_277 = alloca i64, align 8
  %cppVar_278 = alloca i64, align 8
  %cppVar_279 = alloca i64, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_store** %1
  %14 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  %15 = load i64* %14, align 8
  %16 = ashr i64 %15, 0
  %17 = getelementptr inbounds %class.model_store* %13, i32 0, i32 23
  %18 = load i64* %17, align 8
  %19 = and i64 %16, %18
  store i64 %19, i64* %cppVar_277, align 8
  %20 = getelementptr inbounds %class.model_store* %13, i32 0, i32 11
  %21 = load i64* %cppVar_277, align 8
  %22 = call i64 @_ZN8type_memIhLj128EE2rdEl(%class.SysCArray1D* %20, i64 %21)
  store i64 %22, i64* %cppVar_278, align 8
  %23 = load i64* %cppVar_278, align 8
  %24 = getelementptr inbounds %class.model_store* %13, i32 0, i32 24
  %25 = load i64* %24, align 8
  %26 = and i64 %23, %25
  store i64 %26, i64* %cppVar_279, align 8
  %27 = load i64* %cppVar_279, align 8
  ret i64 %27
}

define linkonce_odr i64 @_ZN8type_memIhLj128EE2rdEl(%class.SysCArray1D* %this, i64 %addr) nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %addr, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = getelementptr inbounds i8* %6, i64 %4
  %8 = load i8* %7
  %9 = zext i8 %8 to i64
  ret i64 %9
}

define i64 @_ZN11model_store14cppUpdateFun_iElllllllllll(%class.model_store* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_282 = alloca i8, align 1
  %cppVar_283 = alloca i64, align 8
  %cppVar_284 = alloca i64, align 8
  %cppVar_281 = alloca i64, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_store** %1
  %14 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  %15 = load i64* %14, align 8
  %16 = getelementptr inbounds %class.model_store* %13, i32 0, i32 7
  %17 = load i64* %16, align 8
  %18 = icmp slt i64 %15, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %cppVar_282, align 1
  %20 = load i8* %cppVar_282, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %31

; <label>:22                                      ; preds = %0
  %23 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  %24 = load i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %cppVar_284, align 8
  %26 = load i64* %cppVar_284, align 8
  %27 = getelementptr inbounds %class.model_store* %13, i32 0, i32 22
  %28 = load i64* %27, align 8
  %29 = and i64 %26, %28
  store i64 %29, i64* %cppVar_284, align 8
  %30 = load i64* %cppVar_284, align 8
  store i64 %30, i64* %cppVar_281, align 8
  br label %34

; <label>:31                                      ; preds = %0
  %32 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  %33 = load i64* %32, align 8
  store i64 %33, i64* %cppVar_281, align 8
  br label %34

; <label>:34                                      ; preds = %31, %22
  %35 = load i64* %cppVar_281, align 8
  ret i64 %35
}

define i64 @_ZN11model_store24cppUpdateFun_wr_completeElllllllllll(%class.model_store* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_287 = alloca i8, align 1
  %cppVar_286 = alloca i64, align 8
  %cppVar_288 = alloca i64, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_store** %1
  %14 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  %15 = load i64* %14, align 8
  %16 = getelementptr inbounds %class.model_store* %13, i32 0, i32 7
  %17 = load i64* %16, align 8
  %18 = icmp slt i64 %15, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %cppVar_287, align 1
  %20 = load i8* %cppVar_287, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %25

; <label>:22                                      ; preds = %0
  %23 = getelementptr inbounds %class.model_store* %13, i32 0, i32 17
  %24 = load i64* %23, align 8
  store i64 %24, i64* %cppVar_286, align 8
  br label %26

; <label>:25                                      ; preds = %0
  store i64 1, i64* %cppVar_286, align 8
  br label %26

; <label>:26                                      ; preds = %25, %22
  %27 = load i64* %cppVar_286, align 8
  ret i64 %27
}

define i64 @_ZN11model_store23cppUpdateFun_wr_grantedElllllllllll(%class.model_store* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_291 = alloca i8, align 1
  %cppVar_290 = alloca i64, align 8
  %cppVar_292 = alloca i64, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_store** %1
  %14 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  %15 = load i64* %14, align 8
  %16 = getelementptr inbounds %class.model_store* %13, i32 0, i32 7
  %17 = load i64* %16, align 8
  %18 = icmp slt i64 %15, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %cppVar_291, align 1
  %20 = load i8* %cppVar_291, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %25

; <label>:22                                      ; preds = %0
  %23 = getelementptr inbounds %class.model_store* %13, i32 0, i32 18
  %24 = load i64* %23, align 8
  store i64 %24, i64* %cppVar_290, align 8
  br label %26

; <label>:25                                      ; preds = %0
  store i64 0, i64* %cppVar_290, align 8
  br label %26

; <label>:26                                      ; preds = %25, %22
  %27 = load i64* %cppVar_290, align 8
  ret i64 %27
}

define i64 @_ZN11model_store23cppUpdateFun_wr_requestElllllllllll(%class.model_store* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) nounwind align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_295 = alloca i64, align 8
  %cppVar_296 = alloca i8, align 1
  %cppVar_294 = alloca i64, align 8
  %cppVar_297 = alloca i64, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_store** %1
  %14 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  %15 = load i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %cppVar_296, align 1
  %18 = load i8* %cppVar_296, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %0
  store i64 0, i64* %cppVar_294, align 8
  br label %24

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %class.model_store* %13, i32 0, i32 21
  %23 = load i64* %22, align 8
  store i64 %23, i64* %cppVar_294, align 8
  br label %24

; <label>:24                                      ; preds = %21, %20
  %25 = load i64* %cppVar_294, align 8
  ret i64 %25
}

define void @_ZN11model_store6updateElllllllllll(%class.model_store* %this, i64 %conf_done, i64 %conf_num_hidden, i64 %conf_num_loops, i64 %conf_num_movies, i64 %conf_num_testusers, i64 %conf_num_users, i64 %conf_num_visible, i64 %data_in, i64 %rd_grant, i64 %rst, i64 %wr_grant) align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %cppVar_280 = alloca i64, align 8
  %cppVar_285 = alloca i64, align 8
  %cppVar_289 = alloca i64, align 8
  %cppVar_293 = alloca i64, align 8
  %cppVar_298 = alloca i64, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  store i64 %conf_done, i64* %2, align 8
  store i64 %conf_num_hidden, i64* %3, align 8
  store i64 %conf_num_loops, i64* %4, align 8
  store i64 %conf_num_movies, i64* %5, align 8
  store i64 %conf_num_testusers, i64* %6, align 8
  store i64 %conf_num_users, i64* %7, align 8
  store i64 %conf_num_visible, i64* %8, align 8
  store i64 %data_in, i64* %9, align 8
  store i64 %rd_grant, i64* %10, align 8
  store i64 %rst, i64* %11, align 8
  store i64 %wr_grant, i64* %12, align 8
  %13 = load %class.model_store** %1
  %14 = load i64* %2, align 8
  %15 = load i64* %3, align 8
  %16 = load i64* %4, align 8
  %17 = load i64* %5, align 8
  %18 = load i64* %6, align 8
  %19 = load i64* %7, align 8
  %20 = load i64* %8, align 8
  %21 = load i64* %9, align 8
  %22 = load i64* %10, align 8
  %23 = load i64* %11, align 8
  %24 = load i64* %12, align 8
  %25 = call i64 @_ZN11model_store21cppUpdateFun_data_outElllllllllll(%class.model_store* %13, i64 %14, i64 %15, i64 %16, i64 %17, i64 %18, i64 %19, i64 %20, i64 %21, i64 %22, i64 %23, i64 %24)
  store i64 %25, i64* %cppVar_280, align 8
  %26 = load i64* %2, align 8
  %27 = load i64* %3, align 8
  %28 = load i64* %4, align 8
  %29 = load i64* %5, align 8
  %30 = load i64* %6, align 8
  %31 = load i64* %7, align 8
  %32 = load i64* %8, align 8
  %33 = load i64* %9, align 8
  %34 = load i64* %10, align 8
  %35 = load i64* %11, align 8
  %36 = load i64* %12, align 8
  %37 = call i64 @_ZN11model_store14cppUpdateFun_iElllllllllll(%class.model_store* %13, i64 %26, i64 %27, i64 %28, i64 %29, i64 %30, i64 %31, i64 %32, i64 %33, i64 %34, i64 %35, i64 %36)
  store i64 %37, i64* %cppVar_285, align 8
  %38 = load i64* %2, align 8
  %39 = load i64* %3, align 8
  %40 = load i64* %4, align 8
  %41 = load i64* %5, align 8
  %42 = load i64* %6, align 8
  %43 = load i64* %7, align 8
  %44 = load i64* %8, align 8
  %45 = load i64* %9, align 8
  %46 = load i64* %10, align 8
  %47 = load i64* %11, align 8
  %48 = load i64* %12, align 8
  %49 = call i64 @_ZN11model_store24cppUpdateFun_wr_completeElllllllllll(%class.model_store* %13, i64 %38, i64 %39, i64 %40, i64 %41, i64 %42, i64 %43, i64 %44, i64 %45, i64 %46, i64 %47, i64 %48)
  store i64 %49, i64* %cppVar_289, align 8
  %50 = load i64* %2, align 8
  %51 = load i64* %3, align 8
  %52 = load i64* %4, align 8
  %53 = load i64* %5, align 8
  %54 = load i64* %6, align 8
  %55 = load i64* %7, align 8
  %56 = load i64* %8, align 8
  %57 = load i64* %9, align 8
  %58 = load i64* %10, align 8
  %59 = load i64* %11, align 8
  %60 = load i64* %12, align 8
  %61 = call i64 @_ZN11model_store23cppUpdateFun_wr_grantedElllllllllll(%class.model_store* %13, i64 %50, i64 %51, i64 %52, i64 %53, i64 %54, i64 %55, i64 %56, i64 %57, i64 %58, i64 %59, i64 %60)
  store i64 %61, i64* %cppVar_293, align 8
  %62 = load i64* %2, align 8
  %63 = load i64* %3, align 8
  %64 = load i64* %4, align 8
  %65 = load i64* %5, align 8
  %66 = load i64* %6, align 8
  %67 = load i64* %7, align 8
  %68 = load i64* %8, align 8
  %69 = load i64* %9, align 8
  %70 = load i64* %10, align 8
  %71 = load i64* %11, align 8
  %72 = load i64* %12, align 8
  %73 = call i64 @_ZN11model_store23cppUpdateFun_wr_requestElllllllllll(%class.model_store* %13, i64 %62, i64 %63, i64 %64, i64 %65, i64 %66, i64 %67, i64 %68, i64 %69, i64 %70, i64 %71, i64 %72)
  store i64 %73, i64* %cppVar_298, align 8
  %74 = load i64* %cppVar_280, align 8
  %75 = getelementptr inbounds %class.model_store* %13, i32 0, i32 1
  store i64 %74, i64* %75, align 8
  %76 = load i64* %cppVar_285, align 8
  %77 = getelementptr inbounds %class.model_store* %13, i32 0, i32 3
  store i64 %76, i64* %77, align 8
  %78 = load i64* %cppVar_289, align 8
  %79 = getelementptr inbounds %class.model_store* %13, i32 0, i32 17
  store i64 %78, i64* %79, align 8
  %80 = load i64* %cppVar_293, align 8
  %81 = getelementptr inbounds %class.model_store* %13, i32 0, i32 18
  store i64 %80, i64* %81, align 8
  %82 = load i64* %cppVar_298, align 8
  %83 = getelementptr inbounds %class.model_store* %13, i32 0, i32 21
  store i64 %82, i64* %83, align 8
  ret void
}

define internal void @__cxx_global_var_init() {
  call void @_ZN11model_storeC1Ev(%class.model_store* @GM)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.model_store*)* @_ZN11model_storeD1Ev to void (i8*)*), i8* bitcast (%class.model_store* @GM to i8*), i8* bitcast (i8** @__dso_handle to i8*))
  ret void
}

define linkonce_odr void @_ZN11model_storeC1Ev(%class.model_store* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_store*, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  %2 = load %class.model_store** %1
  call void @_ZN11model_storeC2Ev(%class.model_store* %2)
  ret void
}

define linkonce_odr void @_ZN11model_storeD1Ev(%class.model_store* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_store*, align 8
  store %class.model_store* %this, %class.model_store** %1, align 8
  %2 = load %class.model_store** %1
  call void @_ZN11model_storeD2Ev(%class.model_store* %2)
  ret void
}

declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*)

define void @_Z4waitv() nounwind {
  %1 = load i32* @cycleCnt, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @cycleCnt, align 4
  ret void
}

define void @_Z15reset_signal_isib(i32, i1 zeroext) nounwind {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  ret void
}

define void @_Z14set_stack_sizei(i32) nounwind {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  ret void
}

define void @_ZN3rbm6configEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i8, align 1
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %15 = load %struct.rbm** %1
  br label %16

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  store i16 0, i16* %2, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %17, i16* %2)
  %18 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  store i16 0, i16* %3, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %18, i16* %3)
  %19 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  store i16 0, i16* %4, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %19, i16* %4)
  %20 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  store i16 0, i16* %5, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %20, i16* %5)
  %21 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  store i16 0, i16* %6, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %21, i16* %6)
  %22 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %22, i8* %7)
  call void @_Z4waitv()
  br label %23

; <label>:23                                      ; preds = %16
  br label %24

; <label>:24                                      ; preds = %25, %23
  call void @_Z4waitv()
  br label %25

; <label>:25                                      ; preds = %24
  %26 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 13
  %27 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %26)
  %28 = xor i1 %27, true
  br i1 %28, label %24, label %29

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 30
  %31 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 14
  %32 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %31)
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %8, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %30, i16* %8)
  %34 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 31
  %35 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 15
  %36 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %35)
  %37 = trunc i32 %36 to i16
  store i16 %37, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %34, i16* %9)
  %38 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 32
  %39 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 16
  %40 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %39)
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %38, i16* %10)
  %42 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 33
  %43 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 17
  %44 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %43)
  %45 = trunc i32 %44 to i16
  store i16 %45, i16* %11, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %42, i16* %11)
  %46 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 34
  %47 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 18
  %48 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %47)
  %49 = trunc i32 %48 to i16
  store i16 %49, i16* %12, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %46, i16* %12)
  %50 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 35
  %51 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 19
  %52 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %51)
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %13, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %50, i16* %13)
  %54 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* @_ZSt4cout, i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0))
  %55 = load i32* @_ZSt4endl, align 4
  %56 = call %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %54, i32 %55)
  %57 = getelementptr inbounds %struct.rbm* %15, i32 0, i32 36
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %57, i8* %14)
  br label %58

; <label>:58                                      ; preds = %29
  br label %59

; <label>:59                                      ; preds = %58, %59
  call void @_Z4waitv()
  br label %59
                                                  ; No predecessors!
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %this, i16* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  %2 = alloca i16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  store i16* %d, i16** %2, align 8
  %3 = load %class.sc_signal_u16** %1
  %4 = load i16** %2
  %5 = load i16* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_u16* %3, i32 0, i32 0
  store i16 %5, i16* %6, align 2
  ret void
}

define linkonce_odr void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  %4 = load i8* %3, align 1
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

define linkonce_odr i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  %3 = getelementptr inbounds %class.sc_signal_int32* %2, i32 0, i32 0
  %4 = load i32* %3, align 4
  ret i32 %4
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEPKc(%class.sc_signal_bool* %this, i8*) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i8* %0, i8** %4, align 8
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define linkonce_odr %class.sc_signal_bool* @_ZNSt6iocoutlsEi(%class.sc_signal_bool* %this, i32) nounwind align 2 {
  %2 = alloca %class.sc_signal_bool*, align 8
  %3 = alloca %class.sc_signal_bool*, align 8
  %4 = alloca i32, align 4
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %3, align 8
  store i32 %0, i32* %4, align 4
  %5 = load %class.sc_signal_bool** %3
  %6 = load %class.sc_signal_bool** %2
  ret %class.sc_signal_bool* %6
}

define void @_ZN3rbm4loadEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %nv = alloca i32, align 4
  %ntu = alloca i32, align 4
  %nu = alloca i32, align 4
  %nlp = alloca i32, align 4
  %nm = alloca i32, align 4
  %index = alloca i16, align 2
  %loop_count = alloca i16, align 2
  %pingpong = alloca i8, align 1
  %tmp1 = alloca i16, align 2
  %tmp2 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %i = alloca i16, align 2
  %rate = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %dma_index = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %i1 = alloca i16, align 2
  %rate2 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %19 = load %struct.rbm** %1
  %20 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %21 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %20, i8* %2)
  br label %22

; <label>:22                                      ; preds = %0
  %23 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 2
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %23, i32* %3)
  %24 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 3
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %24, i32* %4)
  %25 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %25, i8* %5)
  %26 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 37
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %26, i8* %6)
  %27 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 38
  store i8 0, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %27, i8* %7)
  br label %28

; <label>:28                                      ; preds = %22
  br label %29

; <label>:29                                      ; preds = %30, %28
  call void @_Z4waitv()
  br label %30

; <label>:30                                      ; preds = %29
  %31 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 36
  %32 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %31)
  %33 = xor i1 %32, true
  br i1 %33, label %29, label %34

; <label>:34                                      ; preds = %30
  %35 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 31
  %36 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %35)
  %37 = zext i16 %36 to i32
  store i32 %37, i32* %nv, align 4
  %38 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 34
  %39 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %38)
  %40 = zext i16 %39 to i32
  store i32 %40, i32* %ntu, align 4
  %41 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 32
  %42 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %41)
  %43 = zext i16 %42 to i32
  store i32 %43, i32* %nu, align 4
  %44 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 33
  %45 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %44)
  %46 = zext i16 %45 to i32
  store i32 %46, i32* %nlp, align 4
  %47 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 35
  %48 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %47)
  %49 = zext i16 %48 to i32
  store i32 %49, i32* %nm, align 4
  store i16 0, i16* %index, align 2
  store i16 0, i16* %loop_count, align 2
  store i8 0, i8* %pingpong, align 1
  br label %50

; <label>:50                                      ; preds = %34
  %51 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 2
  %52 = load i16* %index, align 2
  %53 = zext i16 %52 to i32
  store i32 %53, i32* %8, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %51, i32* %8)
  %54 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 3
  %55 = load i32* %nm, align 4
  %56 = mul i32 5, %55
  store i32 %56, i32* %9, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %54, i32* %9)
  %57 = load i16* %loop_count, align 2
  %58 = zext i16 %57 to i32
  %59 = load i32* %nlp, align 4
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %68

; <label>:61                                      ; preds = %50
  br label %62

; <label>:62                                      ; preds = %63, %61
  call void @_Z4waitv()
  br label %63

; <label>:63                                      ; preds = %62
  %64 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 40
  %65 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %64)
  %66 = xor i1 %65, true
  br i1 %66, label %62, label %67

; <label>:67                                      ; preds = %63
  br label %68

; <label>:68                                      ; preds = %67, %50
  %69 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 1, i8* %10, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %69, i8* %10)
  br label %70

; <label>:70                                      ; preds = %71, %68
  call void @_Z4waitv()
  br label %71

; <label>:71                                      ; preds = %70
  %72 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 5
  %73 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %72)
  %74 = xor i1 %73, true
  br i1 %74, label %70, label %75

; <label>:75                                      ; preds = %71
  %76 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 0, i8* %11, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %76, i8* %11)
  %77 = load i16* %loop_count, align 2
  %78 = zext i16 %77 to i32
  %79 = load i32* %nu, align 4
  %80 = mul i32 %78, %79
  %81 = trunc i32 %80 to i16
  store i16 %81, i16* %tmp1, align 2
  %82 = load i16* %tmp1, align 2
  %83 = zext i16 %82 to i32
  %84 = load i16* %index, align 2
  %85 = zext i16 %84 to i32
  %86 = add nsw i32 %83, %85
  %87 = trunc i32 %86 to i16
  store i16 %87, i16* %tmp2, align 2
  %88 = load i16* %tmp2, align 2
  %89 = zext i16 %88 to i32
  %90 = srem i32 %89, 2
  %91 = icmp ne i32 %90, 0
  %92 = zext i1 %91 to i8
  store i8 %92, i8* %pingpong, align 1
  br label %93

; <label>:93                                      ; preds = %75
  store i16 0, i16* %i, align 2
  br label %94

; <label>:94                                      ; preds = %117, %93
  %95 = load i16* %i, align 2
  %96 = zext i16 %95 to i32
  %97 = icmp slt i32 %96, 500
  br i1 %97, label %98, label %120

; <label>:98                                      ; preds = %94
  %99 = load i16* %i, align 2
  %100 = zext i16 %99 to i32
  %101 = load i32* %nv, align 4
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %103, label %104

; <label>:103                                     ; preds = %98
  br label %120

; <label>:104                                     ; preds = %98
  %105 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 6
  %106 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %105)
  %107 = trunc i32 %106 to i8
  store i8 %107, i8* %rate, align 1
  call void @_Z4waitv()
  %108 = load i8* %rate, align 1
  %109 = load i16* %i, align 2
  %110 = zext i16 %109 to i64
  %111 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %112 = load i8* %pingpong, align 1
  %113 = trunc i8 %112 to i1
  %114 = zext i1 %113 to i32
  %115 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %111, i32 %114)
  %116 = getelementptr inbounds i8* %115, i64 %110
  store i8 %108, i8* %116
  br label %117

; <label>:117                                     ; preds = %104
  %118 = load i16* %i, align 2
  %119 = add i16 %118, 1
  store i16 %119, i16* %i, align 2
  br label %94

; <label>:120                                     ; preds = %103, %94
  call void @_Z4waitv()
  %121 = load i32* %nv, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %124 = load i8* %pingpong, align 1
  %125 = trunc i8 %124 to i1
  %126 = zext i1 %125 to i32
  %127 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %123, i32 %126)
  %128 = getelementptr inbounds i8* %127, i64 %122
  store i8 1, i8* %128
  br label %129

; <label>:129                                     ; preds = %120
  br label %130

; <label>:130                                     ; preds = %129, %280
  %131 = load i16* %loop_count, align 2
  %132 = zext i16 %131 to i32
  %133 = load i32* %nlp, align 4
  %134 = icmp ne i32 %132, %133
  br i1 %134, label %135, label %149

; <label>:135                                     ; preds = %130
  %136 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 37
  store i8 1, i8* %12, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %136, i8* %12)
  br label %137

; <label>:137                                     ; preds = %138, %135
  call void @_Z4waitv()
  br label %138

; <label>:138                                     ; preds = %137
  %139 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 39
  %140 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %139)
  %141 = xor i1 %140, true
  br i1 %141, label %137, label %142

; <label>:142                                     ; preds = %138
  %143 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 37
  store i8 0, i8* %13, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %143, i8* %13)
  br label %144

; <label>:144                                     ; preds = %145, %142
  call void @_Z4waitv()
  br label %145

; <label>:145                                     ; preds = %144
  %146 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 39
  %147 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %146)
  br i1 %147, label %144, label %148

; <label>:148                                     ; preds = %145
  br label %163

; <label>:149                                     ; preds = %130
  %150 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 38
  store i8 1, i8* %14, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %150, i8* %14)
  br label %151

; <label>:151                                     ; preds = %152, %149
  call void @_Z4waitv()
  br label %152

; <label>:152                                     ; preds = %151
  %153 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 42
  %154 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %153)
  %155 = xor i1 %154, true
  br i1 %155, label %151, label %156

; <label>:156                                     ; preds = %152
  %157 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 38
  store i8 0, i8* %15, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %157, i8* %15)
  br label %158

; <label>:158                                     ; preds = %159, %156
  call void @_Z4waitv()
  br label %159

; <label>:159                                     ; preds = %158
  %160 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 42
  %161 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %160)
  br i1 %161, label %158, label %162

; <label>:162                                     ; preds = %159
  br label %163

; <label>:163                                     ; preds = %162, %148
  %164 = load i16* %index, align 2
  %165 = zext i16 %164 to i32
  %166 = add nsw i32 %165, 1
  %167 = trunc i32 %166 to i16
  store i16 %167, i16* %index, align 2
  %168 = load i16* %index, align 2
  %169 = zext i16 %168 to i32
  %170 = load i32* %nu, align 4
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %172, label %182

; <label>:172                                     ; preds = %163
  %173 = load i16* %loop_count, align 2
  %174 = zext i16 %173 to i32
  %175 = load i32* %nlp, align 4
  %176 = icmp ne i32 %174, %175
  br i1 %176, label %177, label %182

; <label>:177                                     ; preds = %172
  %178 = load i16* %loop_count, align 2
  %179 = zext i16 %178 to i32
  %180 = add nsw i32 %179, 1
  %181 = trunc i32 %180 to i16
  store i16 %181, i16* %loop_count, align 2
  store i16 0, i16* %index, align 2
  br label %182

; <label>:182                                     ; preds = %177, %172, %163
  %183 = load i16* %index, align 2
  %184 = zext i16 %183 to i32
  %185 = load i32* %ntu, align 4
  %186 = icmp eq i32 %184, %185
  br i1 %186, label %187, label %197

; <label>:187                                     ; preds = %182
  %188 = load i16* %loop_count, align 2
  %189 = zext i16 %188 to i32
  %190 = load i32* %nlp, align 4
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %192, label %197

; <label>:192                                     ; preds = %187
  br label %193

; <label>:193                                     ; preds = %192
  br label %194

; <label>:194                                     ; preds = %195, %193
  call void @_Z4waitv()
  br label %195

; <label>:195                                     ; preds = %194
  br i1 true, label %194, label %196

; <label>:196                                     ; preds = %195
  br label %197

; <label>:197                                     ; preds = %196, %187, %182
  %198 = load i32* %nv, align 4
  %199 = load i16* %index, align 2
  %200 = zext i16 %199 to i32
  %201 = mul i32 %198, %200
  store i32 %201, i32* %dma_index, align 4
  %202 = load i16* %loop_count, align 2
  %203 = zext i16 %202 to i32
  %204 = load i32* %nlp, align 4
  %205 = icmp eq i32 %203, %204
  br i1 %205, label %206, label %212

; <label>:206                                     ; preds = %197
  %207 = load i32* %nv, align 4
  %208 = load i32* %nu, align 4
  %209 = mul i32 %207, %208
  %210 = load i32* %dma_index, align 4
  %211 = add i32 %210, %209
  store i32 %211, i32* %dma_index, align 4
  br label %212

; <label>:212                                     ; preds = %206, %197
  %213 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 2
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %213, i32* %dma_index)
  %214 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 3
  %215 = load i32* %nm, align 4
  %216 = mul i32 5, %215
  store i32 %216, i32* %16, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %214, i32* %16)
  %217 = load i16* %loop_count, align 2
  %218 = zext i16 %217 to i32
  %219 = load i32* %nlp, align 4
  %220 = icmp eq i32 %218, %219
  br i1 %220, label %221, label %228

; <label>:221                                     ; preds = %212
  br label %222

; <label>:222                                     ; preds = %223, %221
  call void @_Z4waitv()
  br label %223

; <label>:223                                     ; preds = %222
  %224 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 40
  %225 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %224)
  %226 = xor i1 %225, true
  br i1 %226, label %222, label %227

; <label>:227                                     ; preds = %223
  br label %228

; <label>:228                                     ; preds = %227, %212
  %229 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 1, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %229, i8* %17)
  br label %230

; <label>:230                                     ; preds = %231, %228
  call void @_Z4waitv()
  br label %231

; <label>:231                                     ; preds = %230
  %232 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 5
  %233 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %232)
  %234 = xor i1 %233, true
  br i1 %234, label %230, label %235

; <label>:235                                     ; preds = %231
  %236 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 4
  store i8 0, i8* %18, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %236, i8* %18)
  %237 = load i16* %loop_count, align 2
  %238 = zext i16 %237 to i32
  %239 = load i32* %nu, align 4
  %240 = mul i32 %238, %239
  %241 = trunc i32 %240 to i16
  store i16 %241, i16* %tmp1, align 2
  %242 = load i16* %tmp1, align 2
  %243 = zext i16 %242 to i32
  %244 = load i16* %index, align 2
  %245 = zext i16 %244 to i32
  %246 = add nsw i32 %243, %245
  %247 = trunc i32 %246 to i16
  store i16 %247, i16* %tmp2, align 2
  %248 = load i16* %tmp2, align 2
  %249 = zext i16 %248 to i32
  %250 = srem i32 %249, 2
  %251 = icmp ne i32 %250, 0
  %252 = zext i1 %251 to i8
  store i8 %252, i8* %pingpong, align 1
  br label %253

; <label>:253                                     ; preds = %235
  store i16 0, i16* %i1, align 2
  br label %254

; <label>:254                                     ; preds = %277, %253
  %255 = load i16* %i1, align 2
  %256 = zext i16 %255 to i32
  %257 = icmp slt i32 %256, 500
  br i1 %257, label %258, label %280

; <label>:258                                     ; preds = %254
  %259 = load i16* %i1, align 2
  %260 = zext i16 %259 to i32
  %261 = load i32* %nv, align 4
  %262 = icmp eq i32 %260, %261
  br i1 %262, label %263, label %264

; <label>:263                                     ; preds = %258
  br label %280

; <label>:264                                     ; preds = %258
  %265 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 6
  %266 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %265)
  %267 = trunc i32 %266 to i8
  store i8 %267, i8* %rate2, align 1
  call void @_Z4waitv()
  %268 = load i8* %rate2, align 1
  %269 = load i16* %i1, align 2
  %270 = zext i16 %269 to i64
  %271 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %272 = load i8* %pingpong, align 1
  %273 = trunc i8 %272 to i1
  %274 = zext i1 %273 to i32
  %275 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %271, i32 %274)
  %276 = getelementptr inbounds i8* %275, i64 %270
  store i8 %268, i8* %276
  br label %277

; <label>:277                                     ; preds = %264
  %278 = load i16* %i1, align 2
  %279 = add i16 %278, 1
  store i16 %279, i16* %i1, align 2
  br label %254

; <label>:280                                     ; preds = %263, %254
  call void @_Z4waitv()
  %281 = load i32* %nv, align 4
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds %struct.rbm* %19, i32 0, i32 20
  %284 = load i8* %pingpong, align 1
  %285 = trunc i8 %284 to i1
  %286 = zext i1 %285 to i32
  %287 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %283, i32 %286)
  %288 = getelementptr inbounds i8* %287, i64 %282
  store i8 1, i8* %288
  br label %130
                                                  ; No predecessors!
  ret void
}

define linkonce_odr zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %this, i8* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %d, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2
  %5 = load i8* %4, align 8
  %6 = trunc i8 %5 to i1
  %7 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %8 = zext i1 %6 to i8
  store i8 %8, i8* %7, align 1
  %9 = getelementptr inbounds %class.sc_signal_bool* %3, i32 0, i32 0
  %10 = load i8* %9, align 1
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

define linkonce_odr void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %this, i32* %d) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i32* %d, i32** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i32** %2
  %5 = load i32* %4, align 8
  %6 = getelementptr inbounds %class.sc_signal_int32* %3, i32 0, i32 0
  store i32 %5, i32* %6, align 4
  ret void
}

define linkonce_odr zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  %3 = getelementptr inbounds %class.sc_signal_u16* %2, i32 0, i32 0
  %4 = load i16* %3, align 2
  ret i16 %4
}

define linkonce_odr i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2D*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2D** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 512
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

define void @_ZN3rbm5storeEv(%struct.rbm* %this) align 2 {
  %1 = alloca %struct.rbm*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %ntu = alloca i16, align 2
  %nm = alloca i16, align 2
  %index = alloca i32, align 4
  %rating = alloca i8, align 1
  %i = alloca i16, align 2
  %dma_index = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = alloca i16, align 2
  %24 = alloca i16, align 2
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8, align 1
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %33 = load %struct.rbm** %1
  %34 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 36
  store i8 1, i8* %2, align 1
  %35 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %34, i8* %2)
  br label %36

; <label>:36                                      ; preds = %0
  %37 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 8
  store i32 0, i32* %3, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %37, i32* %3)
  %38 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 7
  store i32 0, i32* %4, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %38, i32* %4)
  %39 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 9
  store i8 0, i8* %5, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %39, i8* %5)
  %40 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 44
  store i8 0, i8* %6, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %40, i8* %6)
  %41 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 45
  store i8 1, i8* %7, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %41, i8* %7)
  %42 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 12
  store i8 0, i8* %8, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %42, i8* %8)
  br label %43

; <label>:43                                      ; preds = %44, %36
  call void @_Z4waitv()
  br label %44

; <label>:44                                      ; preds = %43
  %45 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 36
  %46 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %45)
  %47 = xor i1 %46, true
  br i1 %47, label %43, label %48

; <label>:48                                      ; preds = %44
  %49 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 30
  %50 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 5), align 8
  %51 = trunc i64 %50 to i16
  store i16 %51, i16* %9, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %49, i16* %9)
  %52 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 31
  %53 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 10), align 8
  %54 = trunc i64 %53 to i16
  store i16 %54, i16* %10, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %52, i16* %10)
  %55 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 32
  %56 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 9), align 8
  %57 = trunc i64 %56 to i16
  store i16 %57, i16* %11, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %55, i16* %11)
  %58 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 33
  %59 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 6), align 8
  %60 = trunc i64 %59 to i16
  store i16 %60, i16* %12, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %58, i16* %12)
  %61 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 34
  %62 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 8), align 8
  %63 = trunc i64 %62 to i16
  store i16 %63, i16* %13, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %61, i16* %13)
  %64 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 35
  %65 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 7), align 8
  %66 = trunc i64 %65 to i16
  store i16 %66, i16* %14, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %64, i16* %14)
  %67 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 34
  %68 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %67)
  store i16 %68, i16* %ntu, align 2
  %69 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 35
  %70 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %69)
  store i16 %70, i16* %nm, align 2
  store i32 0, i32* %index, align 4
  br label %71

; <label>:71                                      ; preds = %48
  br label %72

; <label>:72                                      ; preds = %71
  %73 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 8
  %74 = call i32* @_ZN13sc_signal_u32cvRjEv(%class.sc_signal_int32* %73)
  %75 = load i32* %74
  %76 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 35
  %77 = call i16* @_ZN13sc_signal_u16cvRtEv(%class.sc_signal_u16* %76)
  %78 = load i16* %77
  %79 = zext i16 %78 to i32
  %80 = icmp eq i32 %75, %79
  call void @__CPROVER_assume(i1 zeroext %80)
  br label %226
                                                  ; No predecessors!
  store i16 0, i16* %i, align 2
  br label %82

; <label>:82                                      ; preds = %333, %81
  %83 = load i16* %i, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp slt i32 %84, 100
  br i1 %85, label %86, label %336

; <label>:86                                      ; preds = %82
  %87 = load i16* %i, align 2
  %88 = zext i16 %87 to i32
  %89 = load i16* %nm, align 2
  %90 = zext i16 %89 to i32
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %86
  br label %336

; <label>:93                                      ; preds = %86
  %94 = load i16* %i, align 2
  %95 = zext i16 %94 to i64
  %96 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 28
  %97 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %96, i32 0)
  %98 = getelementptr inbounds i8* %97, i64 %95
  %99 = load i8* %98
  store i8 %99, i8* %rating, align 1
  call void @_Z4waitv()
  %100 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 11
  %101 = load i8* %rating, align 1
  %102 = zext i8 %101 to i32
  store i32 %102, i32* %15, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %100, i32* %15)
  store i32 0, i32* @wr_complete, align 4
  br label %103

; <label>:103                                     ; preds = %93
  %104 = load i8* @conf_done_inp, align 1
  %105 = trunc i8 %104 to i1
  %106 = zext i1 %105 to i64
  %107 = load i32* @conf_num_hidden_inp, align 4
  %108 = zext i32 %107 to i64
  %109 = load i32* @conf_num_visible_inp, align 4
  %110 = zext i32 %109 to i64
  %111 = load i32* @conf_num_users_inp, align 4
  %112 = zext i32 %111 to i64
  %113 = load i32* @conf_num_loops_inp, align 4
  %114 = zext i32 %113 to i64
  %115 = load i32* @conf_num_testusers_inp, align 4
  %116 = zext i32 %115 to i64
  %117 = load i32* @conf_num_movies_inp, align 4
  %118 = zext i32 %117 to i64
  %119 = load i8* @rst_inp, align 1
  %120 = trunc i8 %119 to i1
  %121 = zext i1 %120 to i64
  %122 = load i8* @rd_grant_inp, align 1
  %123 = trunc i8 %122 to i1
  %124 = zext i1 %123 to i64
  %125 = load i32* @data_in_inp, align 4
  %126 = zext i32 %125 to i64
  %127 = load i8* @wr_grant_inp, align 1
  %128 = trunc i8 %127 to i1
  %129 = zext i1 %128 to i64
  call void @_ZN11model_store6updateElllllllllll(%class.model_store* @GM, i64 %106, i64 %108, i64 %110, i64 %112, i64 %114, i64 %116, i64 %118, i64 %121, i64 %124, i64 %126, i64 %129)
  %130 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 36
  %131 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %130)
  %132 = zext i1 %131 to i64
  %133 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 4), align 8
  %134 = icmp eq i64 %132, %133
  call void @__CPROVER_assert(i1 zeroext %134, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %135 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 12
  %136 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %135)
  %137 = zext i1 %136 to i64
  %138 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 2), align 8
  %139 = icmp eq i64 %137, %138
  call void @__CPROVER_assert(i1 zeroext %139, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %140 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 30
  %141 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %140)
  %142 = zext i16 %141 to i64
  %143 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 5), align 8
  %144 = icmp eq i64 %142, %143
  call void @__CPROVER_assert(i1 zeroext %144, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %145 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 31
  %146 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %145)
  %147 = zext i16 %146 to i64
  %148 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 10), align 8
  %149 = icmp eq i64 %147, %148
  call void @__CPROVER_assert(i1 zeroext %149, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %150 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 32
  %151 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %150)
  %152 = zext i16 %151 to i64
  %153 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 9), align 8
  %154 = icmp eq i64 %152, %153
  call void @__CPROVER_assert(i1 zeroext %154, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %155 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 33
  %156 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %155)
  %157 = zext i16 %156 to i64
  %158 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 6), align 8
  %159 = icmp eq i64 %157, %158
  call void @__CPROVER_assert(i1 zeroext %159, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %160 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 34
  %161 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %160)
  %162 = zext i16 %161 to i64
  %163 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 8), align 8
  %164 = icmp eq i64 %162, %163
  call void @__CPROVER_assert(i1 zeroext %164, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %165 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 35
  %166 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %165)
  %167 = zext i16 %166 to i64
  %168 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 7), align 8
  %169 = icmp eq i64 %167, %168
  call void @__CPROVER_assert(i1 zeroext %169, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %170 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 2
  %171 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %170)
  %172 = zext i32 %171 to i64
  %173 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 14), align 8
  %174 = icmp eq i64 %172, %173
  call void @__CPROVER_assert(i1 zeroext %174, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %175 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 3
  %176 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %175)
  %177 = zext i32 %176 to i64
  %178 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 15), align 8
  %179 = icmp eq i64 %177, %178
  call void @__CPROVER_assert(i1 zeroext %179, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %180 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 4
  %181 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %180)
  %182 = zext i1 %181 to i64
  %183 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 16), align 8
  %184 = icmp eq i64 %182, %183
  call void @__CPROVER_assert(i1 zeroext %184, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %185 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 9
  %186 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %185)
  %187 = zext i1 %186 to i64
  %188 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 21), align 8
  %189 = icmp eq i64 %187, %188
  call void @__CPROVER_assert(i1 zeroext %189, i8* getelementptr inbounds ([17 x i8]* @.str12, i32 0, i32 0))
  %190 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 7
  %191 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %190)
  %192 = zext i32 %191 to i64
  %193 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 19), align 8
  %194 = icmp eq i64 %192, %193
  call void @__CPROVER_assert(i1 zeroext %194, i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0))
  %195 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 8
  %196 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %195)
  %197 = zext i32 %196 to i64
  %198 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 20), align 8
  %199 = icmp eq i64 %197, %198
  call void @__CPROVER_assert(i1 zeroext %199, i8* getelementptr inbounds ([16 x i8]* @.str14, i32 0, i32 0))
  %200 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 11
  %201 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %200)
  %202 = zext i32 %201 to i64
  %203 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 1), align 8
  %204 = icmp eq i64 %202, %203
  call void @__CPROVER_assert(i1 zeroext %204, i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0))
  %205 = load i32* @wr_complete, align 4
  %206 = zext i32 %205 to i64
  %207 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 17), align 8
  %208 = icmp eq i64 %206, %207
  call void @__CPROVER_assert(i1 zeroext %208, i8* getelementptr inbounds ([18 x i8]* @.str16, i32 0, i32 0))
  %209 = load i16* %i, align 2
  %210 = zext i16 %209 to i64
  %211 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 3), align 8
  %212 = icmp eq i64 %210, %211
  call void @__CPROVER_assert(i1 zeroext %212, i8* getelementptr inbounds ([8 x i8]* @.str17, i32 0, i32 0))
  %213 = load i8** getelementptr inbounds (%class.model_store* @GM, i32 0, i32 0, i32 0), align 8
  %214 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 20
  %215 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %214, i32 0)
  %216 = call zeroext i1 @__CPROVER_array_equal(i8* %213, i8* %215)
  call void @__CPROVER_assert(i1 zeroext %216, i8* getelementptr inbounds ([11 x i8]* @.str18, i32 0, i32 0))
  %217 = load i8** getelementptr inbounds (%class.model_store* @GM, i32 0, i32 11, i32 0), align 8
  %218 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 28
  %219 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %218, i32 0)
  %220 = call zeroext i1 @__CPROVER_array_equal(i8* %217, i8* %219)
  call void @__CPROVER_assert(i1 zeroext %220, i8* getelementptr inbounds ([21 x i8]* @.str19, i32 0, i32 0))
  %221 = load i16* %i, align 2
  %222 = zext i16 %221 to i32
  %223 = load i16* %nm, align 2
  %224 = zext i16 %223 to i32
  %225 = icmp slt i32 %222, %224
  call void @__CPROVER_assert(i1 zeroext %225, i8* getelementptr inbounds ([8 x i8]* @.str20, i32 0, i32 0))
  br label %456

; <label>:226                                     ; preds = %72
  store i8 1, i8* @conf_done_inp, align 1
  %227 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 36
  store i8 1, i8* %16, align 1
  %228 = call zeroext i1 @_ZN14sc_signal_boolaSERKb(%class.sc_signal_bool* %227, i8* %16)
  store i64 0, i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 17), align 8
  store i64 1, i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 21), align 8
  store i64 1, i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 18), align 8
  store i8 0, i8* @rst_inp, align 1
  %229 = load i8* @conf_done_inp, align 1
  %230 = trunc i8 %229 to i1
  %231 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 13
  %232 = getelementptr inbounds %class.sc_signal_bool* %231, i32 0, i32 0
  %233 = zext i1 %230 to i8
  store i8 %233, i8* %232, align 1
  %234 = load i32* @conf_num_hidden_inp, align 4
  %235 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 14
  %236 = getelementptr inbounds %class.sc_signal_int32* %235, i32 0, i32 0
  store i32 %234, i32* %236, align 4
  %237 = load i32* @conf_num_visible_inp, align 4
  %238 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 15
  %239 = getelementptr inbounds %class.sc_signal_int32* %238, i32 0, i32 0
  store i32 %237, i32* %239, align 4
  %240 = load i32* @conf_num_users_inp, align 4
  %241 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 16
  %242 = getelementptr inbounds %class.sc_signal_int32* %241, i32 0, i32 0
  store i32 %240, i32* %242, align 4
  %243 = load i32* @conf_num_loops_inp, align 4
  %244 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 17
  %245 = getelementptr inbounds %class.sc_signal_int32* %244, i32 0, i32 0
  store i32 %243, i32* %245, align 4
  %246 = load i32* @conf_num_testusers_inp, align 4
  %247 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 18
  %248 = getelementptr inbounds %class.sc_signal_int32* %247, i32 0, i32 0
  store i32 %246, i32* %248, align 4
  %249 = load i32* @conf_num_movies_inp, align 4
  %250 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 19
  %251 = getelementptr inbounds %class.sc_signal_int32* %250, i32 0, i32 0
  store i32 %249, i32* %251, align 4
  %252 = load i8* @rst_inp, align 1
  %253 = trunc i8 %252 to i1
  %254 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 1
  %255 = getelementptr inbounds %class.sc_signal_bool* %254, i32 0, i32 0
  %256 = zext i1 %253 to i8
  store i8 %256, i8* %255, align 1
  %257 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 36
  %258 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 4), align 8
  %259 = icmp ne i64 %258, 0
  %260 = zext i1 %259 to i8
  store i8 %260, i8* %17, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %257, i8* %17)
  %261 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 12
  %262 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 2), align 8
  %263 = icmp ne i64 %262, 0
  %264 = zext i1 %263 to i8
  store i8 %264, i8* %18, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %261, i8* %18)
  %265 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 30
  %266 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 5), align 8
  %267 = trunc i64 %266 to i16
  store i16 %267, i16* %19, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %265, i16* %19)
  %268 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 31
  %269 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 10), align 8
  %270 = trunc i64 %269 to i16
  store i16 %270, i16* %20, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %268, i16* %20)
  %271 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 32
  %272 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 9), align 8
  %273 = trunc i64 %272 to i16
  store i16 %273, i16* %21, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %271, i16* %21)
  %274 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 33
  %275 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 6), align 8
  %276 = trunc i64 %275 to i16
  store i16 %276, i16* %22, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %274, i16* %22)
  %277 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 34
  %278 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 8), align 8
  %279 = trunc i64 %278 to i16
  store i16 %279, i16* %23, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %277, i16* %23)
  %280 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 35
  %281 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 7), align 8
  %282 = trunc i64 %281 to i16
  store i16 %282, i16* %24, align 2
  call void @_ZN13sc_signal_u165writeERKt(%class.sc_signal_u16* %280, i16* %24)
  %283 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 2
  %284 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 14), align 8
  %285 = trunc i64 %284 to i32
  store i32 %285, i32* %25, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %283, i32* %25)
  %286 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 3
  %287 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 15), align 8
  %288 = trunc i64 %287 to i32
  store i32 %288, i32* %26, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %286, i32* %26)
  %289 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 4
  %290 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 16), align 8
  %291 = icmp ne i64 %290, 0
  %292 = zext i1 %291 to i8
  store i8 %292, i8* %27, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %289, i8* %27)
  %293 = load i8* @rd_grant_inp, align 1
  %294 = trunc i8 %293 to i1
  %295 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 5
  %296 = getelementptr inbounds %class.sc_signal_bool* %295, i32 0, i32 0
  %297 = zext i1 %294 to i8
  store i8 %297, i8* %296, align 1
  %298 = load i32* @data_in_inp, align 4
  %299 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 6
  %300 = getelementptr inbounds %class.sc_signal_int32* %299, i32 0, i32 0
  store i32 %298, i32* %300, align 4
  %301 = load i8* @wr_grant_inp, align 1
  %302 = trunc i8 %301 to i1
  %303 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 10
  %304 = getelementptr inbounds %class.sc_signal_bool* %303, i32 0, i32 0
  %305 = zext i1 %302 to i8
  store i8 %305, i8* %304, align 1
  %306 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 9
  %307 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 21), align 8
  %308 = icmp ne i64 %307, 0
  %309 = zext i1 %308 to i8
  store i8 %309, i8* %28, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %306, i8* %28)
  %310 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 7
  %311 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 19), align 8
  %312 = trunc i64 %311 to i32
  store i32 %312, i32* %29, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %310, i32* %29)
  %313 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 8
  %314 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 20), align 8
  %315 = trunc i64 %314 to i32
  store i32 %315, i32* %30, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %313, i32* %30)
  %316 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 11
  %317 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 1), align 8
  %318 = trunc i64 %317 to i32
  store i32 %318, i32* %31, align 4
  call void @_ZN13sc_signal_u325writeERKj(%class.sc_signal_int32* %316, i32* %31)
  %319 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 3), align 8
  %320 = trunc i64 %319 to i16
  store i16 %320, i16* %i, align 2
  %321 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 20
  %322 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %321, i32 0)
  %323 = load i8** getelementptr inbounds (%class.model_store* @GM, i32 0, i32 0, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %322, i8* %323)
  %324 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 28
  %325 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %324, i32 0)
  %326 = load i8** getelementptr inbounds (%class.model_store* @GM, i32 0, i32 11, i32 0), align 8
  call void @__CPROVER_array_copy(i8* %325, i8* %326)
  %327 = call zeroext i16 @_Z10nondet_intv()
  store i16 %327, i16* %i, align 2
  %328 = load i16* %i, align 2
  %329 = zext i16 %328 to i32
  %330 = load i16* %nm, align 2
  %331 = zext i16 %330 to i32
  %332 = icmp slt i32 %329, %331
  call void @__CPROVER_assume(i1 zeroext %332)
  br label %333

; <label>:333                                     ; preds = %226
  %334 = load i16* %i, align 2
  %335 = add i16 %334, 1
  store i16 %335, i16* %i, align 2
  br label %82

; <label>:336                                     ; preds = %92, %82
  %337 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 45
  store i8 1, i8* %32, align 1
  call void @_ZN14sc_signal_bool5writeERKb(%class.sc_signal_bool* %337, i8* %32)
  store i32 1, i32* @wr_complete, align 4
  br label %338

; <label>:338                                     ; preds = %336
  %339 = load i8* @conf_done_inp, align 1
  %340 = trunc i8 %339 to i1
  %341 = zext i1 %340 to i64
  %342 = load i32* @conf_num_hidden_inp, align 4
  %343 = zext i32 %342 to i64
  %344 = load i32* @conf_num_visible_inp, align 4
  %345 = zext i32 %344 to i64
  %346 = load i32* @conf_num_users_inp, align 4
  %347 = zext i32 %346 to i64
  %348 = load i32* @conf_num_loops_inp, align 4
  %349 = zext i32 %348 to i64
  %350 = load i32* @conf_num_testusers_inp, align 4
  %351 = zext i32 %350 to i64
  %352 = load i32* @conf_num_movies_inp, align 4
  %353 = zext i32 %352 to i64
  %354 = load i8* @rst_inp, align 1
  %355 = trunc i8 %354 to i1
  %356 = zext i1 %355 to i64
  %357 = load i8* @rd_grant_inp, align 1
  %358 = trunc i8 %357 to i1
  %359 = zext i1 %358 to i64
  %360 = load i32* @data_in_inp, align 4
  %361 = zext i32 %360 to i64
  %362 = load i8* @wr_grant_inp, align 1
  %363 = trunc i8 %362 to i1
  %364 = zext i1 %363 to i64
  call void @_ZN11model_store6updateElllllllllll(%class.model_store* @GM, i64 %341, i64 %343, i64 %345, i64 %347, i64 %349, i64 %351, i64 %353, i64 %356, i64 %359, i64 %361, i64 %364)
  %365 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 36
  %366 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %365)
  %367 = zext i1 %366 to i64
  %368 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 4), align 8
  %369 = icmp eq i64 %367, %368
  call void @__CPROVER_assert(i1 zeroext %369, i8* getelementptr inbounds ([16 x i8]* @.str1, i32 0, i32 0))
  %370 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 12
  %371 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %370)
  %372 = zext i1 %371 to i64
  %373 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 2), align 8
  %374 = icmp eq i64 %372, %373
  call void @__CPROVER_assert(i1 zeroext %374, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0))
  %375 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 30
  %376 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %375)
  %377 = zext i16 %376 to i64
  %378 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 5), align 8
  %379 = icmp eq i64 %377, %378
  call void @__CPROVER_assert(i1 zeroext %379, i8* getelementptr inbounds ([17 x i8]* @.str3, i32 0, i32 0))
  %380 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 31
  %381 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %380)
  %382 = zext i16 %381 to i64
  %383 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 10), align 8
  %384 = icmp eq i64 %382, %383
  call void @__CPROVER_assert(i1 zeroext %384, i8* getelementptr inbounds ([18 x i8]* @.str4, i32 0, i32 0))
  %385 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 32
  %386 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %385)
  %387 = zext i16 %386 to i64
  %388 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 9), align 8
  %389 = icmp eq i64 %387, %388
  call void @__CPROVER_assert(i1 zeroext %389, i8* getelementptr inbounds ([16 x i8]* @.str5, i32 0, i32 0))
  %390 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 33
  %391 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %390)
  %392 = zext i16 %391 to i64
  %393 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 6), align 8
  %394 = icmp eq i64 %392, %393
  call void @__CPROVER_assert(i1 zeroext %394, i8* getelementptr inbounds ([16 x i8]* @.str6, i32 0, i32 0))
  %395 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 34
  %396 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %395)
  %397 = zext i16 %396 to i64
  %398 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 8), align 8
  %399 = icmp eq i64 %397, %398
  call void @__CPROVER_assert(i1 zeroext %399, i8* getelementptr inbounds ([20 x i8]* @.str7, i32 0, i32 0))
  %400 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 35
  %401 = call zeroext i16 @_ZN13sc_signal_u164readEv(%class.sc_signal_u16* %400)
  %402 = zext i16 %401 to i64
  %403 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 7), align 8
  %404 = icmp eq i64 %402, %403
  call void @__CPROVER_assert(i1 zeroext %404, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0))
  %405 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 2
  %406 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %405)
  %407 = zext i32 %406 to i64
  %408 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 14), align 8
  %409 = icmp eq i64 %407, %408
  call void @__CPROVER_assert(i1 zeroext %409, i8* getelementptr inbounds ([15 x i8]* @.str9, i32 0, i32 0))
  %410 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 3
  %411 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %410)
  %412 = zext i32 %411 to i64
  %413 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 15), align 8
  %414 = icmp eq i64 %412, %413
  call void @__CPROVER_assert(i1 zeroext %414, i8* getelementptr inbounds ([16 x i8]* @.str10, i32 0, i32 0))
  %415 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 4
  %416 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %415)
  %417 = zext i1 %416 to i64
  %418 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 16), align 8
  %419 = icmp eq i64 %417, %418
  call void @__CPROVER_assert(i1 zeroext %419, i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0))
  %420 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 9
  %421 = call zeroext i1 @_ZN14sc_signal_bool4readEv(%class.sc_signal_bool* %420)
  %422 = zext i1 %421 to i64
  %423 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 21), align 8
  %424 = icmp eq i64 %422, %423
  call void @__CPROVER_assert(i1 zeroext %424, i8* getelementptr inbounds ([17 x i8]* @.str12, i32 0, i32 0))
  %425 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 7
  %426 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %425)
  %427 = zext i32 %426 to i64
  %428 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 19), align 8
  %429 = icmp eq i64 %427, %428
  call void @__CPROVER_assert(i1 zeroext %429, i8* getelementptr inbounds ([15 x i8]* @.str13, i32 0, i32 0))
  %430 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 8
  %431 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %430)
  %432 = zext i32 %431 to i64
  %433 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 20), align 8
  %434 = icmp eq i64 %432, %433
  call void @__CPROVER_assert(i1 zeroext %434, i8* getelementptr inbounds ([16 x i8]* @.str14, i32 0, i32 0))
  %435 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 11
  %436 = call i32 @_ZN13sc_signal_u324readEv(%class.sc_signal_int32* %435)
  %437 = zext i32 %436 to i64
  %438 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 1), align 8
  %439 = icmp eq i64 %437, %438
  call void @__CPROVER_assert(i1 zeroext %439, i8* getelementptr inbounds ([15 x i8]* @.str15, i32 0, i32 0))
  %440 = load i32* @wr_complete, align 4
  %441 = zext i32 %440 to i64
  %442 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 17), align 8
  %443 = icmp eq i64 %441, %442
  call void @__CPROVER_assert(i1 zeroext %443, i8* getelementptr inbounds ([18 x i8]* @.str16, i32 0, i32 0))
  %444 = load i16* %i, align 2
  %445 = zext i16 %444 to i64
  %446 = load i64* getelementptr inbounds (%class.model_store* @GM, i32 0, i32 3), align 8
  %447 = icmp eq i64 %445, %446
  call void @__CPROVER_assert(i1 zeroext %447, i8* getelementptr inbounds ([8 x i8]* @.str17, i32 0, i32 0))
  %448 = load i8** getelementptr inbounds (%class.model_store* @GM, i32 0, i32 0, i32 0), align 8
  %449 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 20
  %450 = call i8* @_ZN11SysCArray2DIhLj2ELj512EEixEj(%class.SysCArray2D* %449, i32 0)
  %451 = call zeroext i1 @__CPROVER_array_equal(i8* %448, i8* %450)
  call void @__CPROVER_assert(i1 zeroext %451, i8* getelementptr inbounds ([11 x i8]* @.str18, i32 0, i32 0))
  %452 = load i8** getelementptr inbounds (%class.model_store* @GM, i32 0, i32 11, i32 0), align 8
  %453 = getelementptr inbounds %struct.rbm* %33, i32 0, i32 28
  %454 = call i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %453, i32 0)
  %455 = call zeroext i1 @__CPROVER_array_equal(i8* %452, i8* %454)
  call void @__CPROVER_assert(i1 zeroext %455, i8* getelementptr inbounds ([21 x i8]* @.str19, i32 0, i32 0))
  br label %456

; <label>:456                                     ; preds = %338, %103
  ret void
}

declare void @__CPROVER_assume(i1 zeroext)

define linkonce_odr i32* @_ZN13sc_signal_u32cvRjEv(%class.sc_signal_int32* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  %3 = getelementptr inbounds %class.sc_signal_int32* %2, i32 0, i32 0
  ret i32* %3
}

define linkonce_odr i16* @_ZN13sc_signal_u16cvRtEv(%class.sc_signal_u16* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  %3 = getelementptr inbounds %class.sc_signal_u16* %2, i32 0, i32 0
  ret i16* %3
}

define linkonce_odr i8* @_ZN11SysCArray2DIhLj2ELj128EEixEj(%class.SysCArray2D* %this, i32 %Xidx) nounwind align 2 {
  %1 = alloca i8*, align 8
  %2 = alloca %class.SysCArray2D*, align 8
  %3 = alloca i32, align 4
  store %class.SysCArray2D* %this, %class.SysCArray2D** %2, align 8
  store i32 %Xidx, i32* %3, align 4
  %4 = load %class.SysCArray2D** %2
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 1
  %9 = load i8** %8, align 8
  store i8* %9, i8** %1
  br label %17

; <label>:10                                      ; preds = %0
  %11 = load i32* %3, align 4
  %12 = mul i32 %11, 128
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %class.SysCArray2D* %4, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = getelementptr inbounds i8* %15, i64 %13
  store i8* %16, i8** %1
  br label %17

; <label>:17                                      ; preds = %10, %7
  %18 = load i8** %1
  ret i8* %18
}

declare void @__CPROVER_assert(i1 zeroext, i8*)

declare zeroext i1 @__CPROVER_array_equal(i8*, i8*)

declare void @__CPROVER_array_copy(i8*, i8*)

declare zeroext i16 @_Z10nondet_intv()

define internal void @__cxx_global_var_init21() {
  call void @_ZN3rbmC1Ev(%struct.rbm* @IMPL)
  ret void
}

define linkonce_odr void @_ZN3rbmC1Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  call void @_ZN3rbmC2Ev(%struct.rbm* %2)
  ret void
}

define i32 @main() {
  %1 = alloca i32, align 4
  store i32 0, i32* %1
  call void @_ZN3rbm5storeEv(%struct.rbm* @IMPL)
  ret i32 0
}

define linkonce_odr void @_ZN3rbmC2Ev(%struct.rbm* %this) unnamed_addr align 2 {
  %1 = alloca %struct.rbm*, align 8
  store %struct.rbm* %this, %struct.rbm** %1, align 8
  %2 = load %struct.rbm** %1
  %3 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 0
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %3, i8* getelementptr inbounds ([4 x i8]* @.str22, i32 0, i32 0))
  %4 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %4, i8* getelementptr inbounds ([4 x i8]* @.str23, i32 0, i32 0))
  %5 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 2
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %5, i8* getelementptr inbounds ([9 x i8]* @.str24, i32 0, i32 0))
  %6 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 3
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %6, i8* getelementptr inbounds ([10 x i8]* @.str25, i32 0, i32 0))
  %7 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 4
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %7, i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0))
  %8 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 5
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %8, i8* getelementptr inbounds ([9 x i8]* @.str27, i32 0, i32 0))
  %9 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 6
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %9, i8* getelementptr inbounds ([8 x i8]* @.str28, i32 0, i32 0))
  %10 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 7
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %10, i8* getelementptr inbounds ([9 x i8]* @.str29, i32 0, i32 0))
  %11 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 8
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %11, i8* getelementptr inbounds ([10 x i8]* @.str30, i32 0, i32 0))
  %12 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 9
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %12, i8* getelementptr inbounds ([11 x i8]* @.str31, i32 0, i32 0))
  %13 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 10
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %13, i8* getelementptr inbounds ([9 x i8]* @.str32, i32 0, i32 0))
  %14 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 11
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %14, i8* getelementptr inbounds ([9 x i8]* @.str33, i32 0, i32 0))
  %15 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 12
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %15, i8* getelementptr inbounds ([5 x i8]* @.str34, i32 0, i32 0))
  %16 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 13
  call void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %16, i8* getelementptr inbounds ([10 x i8]* @.str35, i32 0, i32 0))
  %17 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 14
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %17, i8* getelementptr inbounds ([16 x i8]* @.str36, i32 0, i32 0))
  %18 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 15
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %18, i8* getelementptr inbounds ([17 x i8]* @.str37, i32 0, i32 0))
  %19 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 16
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %19, i8* getelementptr inbounds ([15 x i8]* @.str38, i32 0, i32 0))
  %20 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 17
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %20, i8* getelementptr inbounds ([15 x i8]* @.str39, i32 0, i32 0))
  %21 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 18
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %21, i8* getelementptr inbounds ([19 x i8]* @.str40, i32 0, i32 0))
  %22 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 19
  call void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %22, i8* getelementptr inbounds ([16 x i8]* @.str41, i32 0, i32 0))
  %23 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 20
  call void @_ZN11SysCArray2DIhLj2ELj512EEC1Ev(%class.SysCArray2D* %23)
  %24 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 21
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %24)
  %25 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 22
  call void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %25)
  %26 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 23
  call void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%0* %26)
  %27 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 24
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %27)
  %28 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 25
  call void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %28)
  %29 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 26
  call void @_ZN11SysCArray1DIfLj5EEC1Ev(%1* %29)
  %30 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 27
  call void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %30)
  %31 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 28
  call void @_ZN11SysCArray2DIhLj2ELj128EEC1Ev(%class.SysCArray2D* %31)
  %32 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 30
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %32)
  %33 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 31
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %33)
  %34 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 32
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %34)
  %35 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 33
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %35)
  %36 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 34
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %36)
  %37 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 35
  call void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %37)
  %38 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 36
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %38)
  %39 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 37
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %39)
  %40 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 38
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %40)
  %41 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 39
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %41)
  %42 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 40
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %42)
  %43 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 41
  call void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %43)
  %44 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 42
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %44)
  %45 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 43
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %45)
  %46 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 44
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %46)
  %47 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 45
  call void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %47)
  br label %48

; <label>:48                                      ; preds = %0
  br label %49

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %51 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %50)
  %52 = load i8* %51
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i32
  call void @_Z15reset_signal_isib(i32 %54, i1 zeroext false)
  br label %55

; <label>:55                                      ; preds = %49
  br label %56

; <label>:56                                      ; preds = %55
  %57 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %58 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %57)
  %59 = load i8* %58
  %60 = trunc i8 %59 to i1
  %61 = zext i1 %60 to i32
  call void @_Z15reset_signal_isib(i32 %61, i1 zeroext false)
  br label %62

; <label>:62                                      ; preds = %56
  br label %63

; <label>:63                                      ; preds = %62
  %64 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %65 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %64)
  %66 = load i8* %65
  %67 = trunc i8 %66 to i1
  %68 = zext i1 %67 to i32
  call void @_Z15reset_signal_isib(i32 %68, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %69

; <label>:69                                      ; preds = %63
  br label %70

; <label>:70                                      ; preds = %69
  %71 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %72 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %71)
  %73 = load i8* %72
  %74 = trunc i8 %73 to i1
  %75 = zext i1 %74 to i32
  call void @_Z15reset_signal_isib(i32 %75, i1 zeroext false)
  call void @_Z14set_stack_sizei(i32 5242880)
  br label %76

; <label>:76                                      ; preds = %70
  br label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.rbm* %2, i32 0, i32 1
  %79 = call i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %78)
  %80 = load i8* %79
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i32
  call void @_Z15reset_signal_isib(i32 %82, i1 zeroext false)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  %4 = load i8** %2, align 8
  call void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C1EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  %4 = load i8** %2, align 8
  call void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %3, i8* %4)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj512EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIhLj2ELj512EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC1Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  call void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%0* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC1Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  call void @_ZN11SysCArray1DIfLj5EEC2Ev(%1* %2)
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj128EEC1Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  call void @_ZN11SysCArray2DIhLj2ELj128EEC2Ev(%class.SysCArray2D* %2)
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C1Ev(%class.sc_signal_u16* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  call void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %2)
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC1Ev(%class.sc_signal_bool* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  call void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %2)
  ret void
}

define linkonce_odr void @_ZN15sc_signal_int32C1Ev(%class.sc_signal_int32* %this) unnamed_addr align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  call void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %2)
  ret void
}

define linkonce_odr i8* @_ZN14sc_signal_boolcvRbEv(%class.sc_signal_bool* %this) nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  %3 = getelementptr inbounds %class.sc_signal_bool* %2, i32 0, i32 0
  ret i8* %3
}

define linkonce_odr void @_ZN15sc_signal_int32C2Ev(%class.sc_signal_int32* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  %2 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2Ev(%class.sc_signal_bool* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  %2 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u16C2Ev(%class.sc_signal_u16* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_u16*, align 8
  store %class.sc_signal_u16* %this, %class.sc_signal_u16** %1, align 8
  %2 = load %class.sc_signal_u16** %1
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj128EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 256)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 128)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

declare i8* @__CPROVER_malloc(i64)

define linkonce_odr void @_ZN11SysCArray1DIfLj5EEC2Ev(%1* %this) unnamed_addr align 2 {
  %1 = alloca %1*, align 8
  store %1* %this, %1** %1, align 8
  %2 = load %1** %1
  %3 = call i8* @__CPROVER_malloc(i64 20)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %1* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIbLj501ELj101EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 50601)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 101)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIfLj501ELj101EEC2Ev(%0* %this) unnamed_addr align 2 {
  %1 = alloca %0*, align 8
  store %0* %this, %0** %1, align 8
  %2 = load %0** %1
  %3 = call i8* @__CPROVER_malloc(i64 202404)
  %4 = bitcast i8* %3 to float*
  %5 = getelementptr inbounds %0* %2, i32 0, i32 0
  store float* %4, float** %5, align 8
  %6 = call i8* @__CPROVER_malloc(i64 404)
  %7 = bitcast i8* %6 to float*
  %8 = getelementptr inbounds %0* %2, i32 0, i32 1
  store float* %7, float** %8, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj128EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 128)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray1DIbLj512EEC2Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  %3 = call i8* @__CPROVER_malloc(i64 512)
  %4 = getelementptr inbounds %class.SysCArray1D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  ret void
}

define linkonce_odr void @_ZN11SysCArray2DIhLj2ELj512EEC2Ev(%class.SysCArray2D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray2D*, align 8
  store %class.SysCArray2D* %this, %class.SysCArray2D** %1, align 8
  %2 = load %class.SysCArray2D** %1
  %3 = call i8* @__CPROVER_malloc(i64 1024)
  %4 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = call i8* @__CPROVER_malloc(i64 512)
  %6 = getelementptr inbounds %class.SysCArray2D* %2, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  ret void
}

define linkonce_odr void @_ZN13sc_signal_u32C2EPKc(%class.sc_signal_int32* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_int32*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_int32* %this, %class.sc_signal_int32** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_int32** %1
  ret void
}

define linkonce_odr void @_ZN14sc_signal_boolC2EPKc(%class.sc_signal_bool* %this, i8* %p) unnamed_addr nounwind align 2 {
  %1 = alloca %class.sc_signal_bool*, align 8
  %2 = alloca i8*, align 8
  store %class.sc_signal_bool* %this, %class.sc_signal_bool** %1, align 8
  store i8* %p, i8** %2, align 8
  %3 = load %class.sc_signal_bool** %1
  ret void
}

define linkonce_odr void @_ZN11model_storeD2Ev(%class.model_store* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_store* %this, %class.model_store** %1, align 8
  %4 = load %class.model_store** %1
  %5 = getelementptr inbounds %class.model_store* %4, i32 0, i32 11
  invoke void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %5)
          to label %6 unwind label %8

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %class.model_store* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %7)
  ret void

; <label>:8                                       ; preds = %0
  %9 = call i8* @llvm.eh.exception() nounwind
  store i8* %9, i8** %2
  %10 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %9, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %11 = getelementptr inbounds %class.model_store* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %11)
          to label %12 unwind label %15

; <label>:12                                      ; preds = %8
  br label %13

; <label>:13                                      ; preds = %12
  %14 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %14) noreturn
  unreachable

; <label>:15                                      ; preds = %8
  %16 = call i8* @llvm.eh.exception() nounwind
  %17 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %16, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj128EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %2)
  ret void
}

declare i8* @llvm.eh.exception() nounwind readonly

declare i32 @__gxx_personality_v0(...)

declare i32 @llvm.eh.selector(i8*, i8*, ...) nounwind

declare i32 @llvm.eh.typeid.for(i8*) nounwind

declare void @_Unwind_Resume_or_Rethrow(i8*)

define linkonce_odr void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %this) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  call void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %2)
  ret void
}

declare void @_ZSt9terminatev()

define linkonce_odr void @_ZN8type_memIhLj512EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EED2Ev(%class.SysCArray1D* %this) unnamed_addr nounwind align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  %2 = load %class.SysCArray1D** %1
  ret void
}

define linkonce_odr void @_ZN11model_storeC2Ev(%class.model_store* %this) unnamed_addr align 2 {
  %1 = alloca %class.model_store*, align 8
  %2 = alloca i8*
  %3 = alloca i32
  store %class.model_store* %this, %class.model_store** %1, align 8
  %4 = load %class.model_store** %1
  %5 = getelementptr inbounds %class.model_store* %4, i32 0, i32 0
  call void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %5, i64 0)
  %6 = getelementptr inbounds %class.model_store* %4, i32 0, i32 11
  invoke void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %6, i64 0)
          to label %7 unwind label %11

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %class.model_store* %4, i32 0, i32 22
  store i64 65535, i64* %8, align 8
  %9 = getelementptr inbounds %class.model_store* %4, i32 0, i32 23
  store i64 127, i64* %9, align 8
  %10 = getelementptr inbounds %class.model_store* %4, i32 0, i32 24
  store i64 255, i64* %10, align 8
  ret void

; <label>:11                                      ; preds = %0
  %12 = call i8* @llvm.eh.exception() nounwind
  store i8* %12, i8** %2
  %13 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %12, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  store i32 0, i32* %3
  %14 = getelementptr inbounds %class.model_store* %4, i32 0, i32 0
  invoke void @_ZN8type_memIhLj512EED1Ev(%class.SysCArray1D* %14)
          to label %15 unwind label %18

; <label>:15                                      ; preds = %11
  br label %16

; <label>:16                                      ; preds = %15
  %17 = load i8** %2
  call void @_Unwind_Resume_or_Rethrow(i8* %17) noreturn
  unreachable

; <label>:18                                      ; preds = %11
  %19 = call i8* @llvm.eh.exception() nounwind
  %20 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %19, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i8* null) nounwind
  call void @_ZSt9terminatev() noreturn nounwind
  unreachable
}

define linkonce_odr void @_ZN8type_memIhLj512EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC1El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = load i64* %2, align 8
  call void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %3, i64 %4)
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj128EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 128)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define linkonce_odr void @_ZN8type_memIhLj512EEC2El(%class.SysCArray1D* %this, i64 %def) unnamed_addr align 2 {
  %1 = alloca %class.SysCArray1D*, align 8
  %2 = alloca i64, align 8
  store %class.SysCArray1D* %this, %class.SysCArray1D** %1, align 8
  store i64 %def, i64* %2, align 8
  %3 = load %class.SysCArray1D** %1
  %4 = call i8* @__CPROVER_malloc(i64 512)
  %5 = getelementptr inbounds %class.SysCArray1D* %3, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  ret void
}

define internal void @_GLOBAL__I_a() {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init21()
  ret void
}
